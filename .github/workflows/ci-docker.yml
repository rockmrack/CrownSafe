name: Docker to ACR

on:
  push:
    branches: ["main"]
    paths:
      - "Dockerfile"
      - "**/Dockerfile"
      - "**/*.py"
      - "**/*.js"
      - ".github/workflows/ci-docker.yml"
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    env:
      REGISTRY: ${{ secrets.ACR_LOGIN_SERVER }}
      IMAGE_NAME: ${{ secrets.ACR_REPOSITORY }}
      DOCKERFILE: ./Dockerfile.final
      CONTEXT: .
      TAG_LATEST: latest
      TAG_SHA: ${{ github.sha }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Optional: set up QEMU for multi-arch; safe to keep
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Log in directly to ACR using the Service Principal
      - name: Log in to ACR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.AZURE_CLIENT_ID }}
          password: ${{ secrets.AZURE_CLIENT_SECRET }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ env.TAG_LATEST }},enable={{is_default_branch}}
            type=raw,value=${{ env.TAG_SHA }}

      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          context: ${{ env.CONTEXT }}
          file: ${{ env.DOCKERFILE }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache,mode=max
