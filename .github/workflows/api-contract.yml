name: API Contract â€” Schemathesis

on:
  workflow_dispatch:
  push:
    branches: [ "main", "staging" ]
  pull_request:
    branches: [ "main", "staging" ]

jobs:
  schemathesis:
    runs-on: ubuntu-latest
    env:
      BASE: https://babyshield.cureviax.ai
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Schemathesis
        run: |
          python -m pip install --upgrade pip
          pip install schemathesis

      - name: Get access token
        id: token
        shell: bash
        env:
          EMAIL: ${{ secrets.SMOKE_TEST_EMAIL }}
          PASS:  ${{ secrets.SMOKE_TEST_PASSWORD }}
        run: |
          set -euo pipefail
          resp=$(curl -fsS -X POST -H 'Content-Type: application/x-www-form-urlencoded' \
            -d "username=${EMAIL}&password=${PASS}&grant_type=password" \
            "$BASE/api/v1/auth/token")
          token=$(python - <<'PY' <<<"$resp"
          import sys, json
          d=json.loads(sys.stdin.read())
          print(d.get("access_token") or d.get("token") or (d.get("data") or {}).get("access_token",""))
          PY
          )
          if [ -z "$token" ]; then echo "No token in response: $resp"; exit 2; fi
          echo "TOKEN=$token" >> "$GITHUB_OUTPUT"

      - name: Run Schemathesis against the spec
        shell: bash
        env:
          TOKEN: ${{ steps.token.outputs.TOKEN }}
        run: |
          set -euo pipefail
          st run "$BASE/openapi.json" \
            --base-url "$BASE" \
            --checks all \
            --headers "Authorization: Bearer $TOKEN" \
            --hypothesis-max-examples 25 \
            --stateful=links \
            --junit-xml=schemathesis-report.xml

      - name: Upload report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: schemathesis-report
          path: schemathesis-report.xml

