name: Nightly — Readiness Probe

on:
  schedule:
    - cron: "0 5 * * *" # 05:00 UTC daily
  workflow_dispatch: # Allow manual trigger

permissions:
  contents: read
  issues: write

jobs:
  readiness:
    runs-on: ubuntu-latest
    env:
      BABYSHIELD_BASE_URL: https://babyshield.cureviax.ai

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests PyYAML

      - name: Run readiness probe
        id: readiness
        run: |
          python scripts/validate_store_readiness.py
          echo "exit_code=$?" >> $GITHUB_OUTPUT

      - name: Generate readiness report
        if: always()
        run: |
          echo "# Nightly Readiness Report" > readiness_report.md
          echo "Date: $(date)" >> readiness_report.md
          echo "API URL: ${{ env.BABYSHIELD_BASE_URL }}" >> readiness_report.md
          echo "" >> readiness_report.md

          if [ "${{ steps.readiness.outputs.exit_code }}" == "0" ]; then
            echo "✅ **API is READY for app store submission**" >> readiness_report.md
          else
            echo "❌ **API has issues that need attention**" >> readiness_report.md
          fi

          echo "" >> readiness_report.md
          echo "## Test Results" >> readiness_report.md
          python scripts/validate_store_readiness.py 2>&1 >> readiness_report.md || true

      - name: Upload readiness report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: readiness-report-$(date +%Y%m%d)
          path: readiness_report.md
          retention-days: 7

      - name: Notify on failure
        if: failure()
        run: |
          echo "⚠️ Readiness probe failed!"
          echo "Check the workflow run for details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          # Add notification logic here (e.g., Slack, email, etc.)

      - name: Create issue on failure
        if: failure() && github.event_name == 'schedule'
        uses: actions/github-script@v7
        with:
          script: |
            const date = new Date().toISOString().split('T')[0];
            const title = `🚨 Nightly Readiness Check Failed - ${date}`;
            const body = `The nightly readiness probe failed.\n\n` +
                        `**API URL:** ${{ env.BABYSHIELD_BASE_URL }}\n` +
                        `**Workflow Run:** [View Details](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})\n\n` +
                        `Please check the API status and deployment.`;

            // Check if issue already exists for today
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'readiness-check'
            });

            const existingIssue = issues.data.find(issue => 
              issue.title.includes(date)
            );

            if (!existingIssue) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: title,
                body: body,
                labels: ['readiness-check', 'automated']
              });
            }
