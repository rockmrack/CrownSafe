# BabyShield Mobile - Release Workflow
# Automated build and deployment to TestFlight/Play Store Beta

name: Release Build

on:
  push:
    tags:
      - "v*.*.*" # Triggers on version tags like v1.0.0
  workflow_dispatch:
    inputs:
      version:
        description: "Release version (e.g., 1.0.0)"
        required: true
      release_notes:
        description: "Release notes"
        required: false

jobs:
  # ============================================
  # Create Release Notes
  # ============================================
  prepare-release:
    name: 📝 Prepare Release
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        fetch-depth: 0

      - name: 🏷️ Get version
        id: version
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
          fi

      - name: 📝 Generate release notes
        run: |
          git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 HEAD^)..HEAD > RELEASE_NOTES.md

      - name: 📤 Upload release notes
        uses: actions/upload-artifact@v4
        with:
          name: release-notes
          path: RELEASE_NOTES.md

  # ============================================
  # Build Android Release
  # ============================================
  build-android-release:
    name: 🤖 Build Android Release
    runs-on: ubuntu-latest
    needs: prepare-release

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: ☕ Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔐 Decode keystore
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > android/app/release.keystore

      - name: 🔨 Build Android AAB (Release)
        run: |
          cd android
          ./gradlew bundleRelease
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

      - name: 📤 Upload AAB
        uses: actions/upload-artifact@v4
        with:
          name: app-release.aab
          path: android/app/build/outputs/bundle/release/app-release.aab

      - name: 🚀 Deploy to Play Store Internal Testing
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAY_STORE_SERVICE_ACCOUNT }}
          packageName: com.babyshield.mobile
          releaseFiles: android/app/build/outputs/bundle/release/app-release.aab
          track: internal
          status: completed

  # ============================================
  # Build iOS Release
  # ============================================
  build-ios-release:
    name: 🍎 Build iOS Release
    runs-on: macos-latest
    needs: prepare-release

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: 📦 Install dependencies
        run: npm ci

      - name: 💎 Install CocoaPods
        run: |
          cd ios
          pod install --repo-update

      - name: 🔐 Setup certificates
        uses: apple-actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.IOS_CERTIFICATE_BASE64 }}
          p12-password: ${{ secrets.IOS_CERTIFICATE_PASSWORD }}

      - name: 🔐 Setup provisioning profile
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          echo "${{ secrets.IOS_PROVISIONING_PROFILE_BASE64 }}" | base64 -d > ~/Library/MobileDevice/Provisioning\ Profiles/profile.mobileprovision

      - name: 🔨 Build iOS Archive
        run: |
          cd ios
          xcodebuild archive \
            -workspace BabyShield.xcworkspace \
            -scheme BabyShield \
            -configuration Release \
            -archivePath build/BabyShield.xcarchive \
            CODE_SIGN_IDENTITY="${{ secrets.IOS_CODE_SIGN_IDENTITY }}" \
            PROVISIONING_PROFILE_SPECIFIER="${{ secrets.IOS_PROVISIONING_PROFILE_NAME }}"

      - name: 📦 Export IPA
        run: |
          cd ios
          xcodebuild -exportArchive \
            -archivePath build/BabyShield.xcarchive \
            -exportPath build \
            -exportOptionsPlist ExportOptions.plist

      - name: 📤 Upload IPA
        uses: actions/upload-artifact@v4
        with:
          name: BabyShield.ipa
          path: ios/build/BabyShield.ipa

      - name: 🚀 Deploy to TestFlight
        uses: apple-actions/upload-testflight-build@v1
        with:
          app-path: ios/build/BabyShield.ipa
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_API_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}

  # ============================================
  # Create GitHub Release
  # ============================================
  create-github-release:
    name: 🎉 Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build-android-release, build-ios-release]

    steps:
      - name: 📥 Download artifacts
        uses: actions/download-artifact@v4

      - name: 🎉 Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            app-release.aab/app-release.aab
            BabyShield.ipa/BabyShield.ipa
          body_path: release-notes/RELEASE_NOTES.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
