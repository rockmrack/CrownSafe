apiVersion: apps/v1
kind: Deployment
metadata:
  name: crownsafe-api
  namespace: crownsafe
  labels:
    app: crownsafe-api
    version: v1
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: crownsafe-api
  template:
    metadata:
      labels:
        app: crownsafe-api
        version: v1
    spec:
      containers:
        - name: api
          image: crownsaferegistry.azurecr.io/crownsafe-api:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8001
              name: http
              protocol: TCP
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: crownsafe-secrets
                  key: database-url
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: crownsafe-secrets
                  key: redis-url
            - name: AZURE_STORAGE_CONNECTION_STRING
              valueFrom:
                secretKeyRef:
                  name: crownsafe-secrets
                  key: azure-storage-connection-string
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: crownsafe-secrets
                  key: secret-key
            - name: ENVIRONMENT
              value: "production"
            - name: LOG_LEVEL
              value: "INFO"
          resources:
            requests:
              memory: "512Mi"
              cpu: "500m"
            limits:
              memory: "2Gi"
              cpu: "2000m"
          livenessProbe:
            httpGet:
              path: /health
              port: 8001
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /api/healthz
              port: 8001
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "sleep 15"]
      imagePullSecrets:
        - name: acr-secret
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - crownsafe-api
                topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: Service
metadata:
  name: crownsafe-api
  namespace: crownsafe
  labels:
    app: crownsafe-api
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 8001
      protocol: TCP
      name: http
  selector:
    app: crownsafe-api
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 3600
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: crownsafe-api-hpa
  namespace: crownsafe
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: crownsafe-api
  minReplicas: 3
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 50
          periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
        - type: Percent
          value: 100
          periodSeconds: 30
        - type: Pods
          value: 2
          periodSeconds: 30
      selectPolicy: Max
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: crownsafe-api-ingress
  namespace: crownsafe
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/rate-limit: "100"
spec:
  tls:
    - hosts:
        - crownsafe.cureviax.ai
      secretName: crownsafe-tls
  rules:
    - host: crownsafe.cureviax.ai
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: crownsafe-api
                port:
                  number: 80
