# BabyShield – Mobile App Registration Compliance Hand-Off (for Azure/GitHub expert + Store manager)

**Scope:** exact, implemented items for **in-app account deletion** compliance, plus what remains for stores and GitHub branch protection. No guesses; only what’s in code/docs and CI now.

---

## 1) Domains & Contacts (current state)

* **Public site (for store links):** `https://babyshield.cureviax.com`
* **Backend base (ECS, temporary while on AWS):** `https://babyshield.cureviax.ai`
* **Support email (public/comms):** `support@babyshield.cureviax.com`

> Note: `.ai` host is for the live backend right now; public links use `.com`.

---

## 2) Implemented Backend Changes (live once deployed)

### 2.1 Deletion API

* **Endpoint:** `DELETE /api/v1/account`
* **Auth:** Bearer JWT, **recent auth required** (≤5 minutes via `auth_time` claim)
* **Response:** **204 No Content** on success
* **OpenAPI:** documented under `/openapi.json` with tag `account`

### 2.2 Device / Push

* **Endpoint:** `POST /api/v1/devices/unregister`
  Body: `{ "token": "<push token>" }` (optional); **204**; idempotent.

### 2.3 Legacy Route Removal

* **`POST /api/v1/user/data/delete` → 410 Gone** with guidance to use `DELETE /api/v1/account`.

### 2.4 Legal Pages (public)

* **Account deletion info page:** `https://babyshield.cureviax.com/legal/account-deletion`
* **Privacy policy includes deletion & retention section:** `https://babyshield.cureviax.com/legal/privacy`
* **Legacy redirect:** `/legal/data-deletion` → **301** → `/legal/account-deletion`

> Implementation detail: static serving + explicit FastAPI routes were added to ensure these pages resolve even if static mounting differs at runtime.

### 2.5 Security & Abuse Protections

* **JWT additions:** `auth_time` (sec since epoch) + `jti` (unique ID)
* **Token blocklist:** Redis key `jwt:block:{jti}` checked on every authenticated request
* **On delete:** deletes refresh tokens, sessions, push tokens; blocklists current access token
* **Rate limit:** account deletion attempts limited to **3/day per user** (Redis key `acctdel:rl:{user_id}:{YYYYMMDD}`)

### 2.6 Audit Trail

* **Table:** `account_deletion_audit`
  Fields: `user_id, jti, status(requested|completed|failed), source, meta, created_at`
  **Alembic migration added.**

### 2.7 Retention/Purge Job (Celery)

* **Task:** `retention.purge_legal_retention`
* **Schedule:** daily **02:15 UTC** via Celery beat
* **Behavior:** purges device push tokens, refresh tokens, server sessions of users deleted >30 days; trims audit rows >365 days.

---

## 3) Mobile App Changes (implemented patterns)

* **Delete flow call order:**

  1. get push token →
  2. `POST /api/v1/devices/unregister` (ignore errors) →
  3. **`DELETE /api/v1/account`** → expect **204** →
  4. sign out & local wipe.
* **Re-auth UX:** if delete returns **401** with `"Re-authentication required"`, prompt re-login and **retry once**; otherwise show error.

> Documentation was updated across the mobile integration guides and examples (React Native, iOS Swift, Android Kotlin).

---

## 4) CI / Monitoring in GitHub (already set up)

* **Smoke (live) – Windows runner:**

  * Job **“Smoke — Account Deletion”** in `.github/workflows/ci.yml`
  * Mints a fresh token using secrets `BSMOKE_TEST_EMAIL` / `BSMOKE_TEST_PASSWORD` against **`.ai` backend**, then runs:

    * `scripts/smoke_account_deletion.ps1` (public pages, legacy redirect, unauth 401/403, auth 204)
* **Hourly schedule:** `.github/workflows/ci-smoke-schedule.yml` triggers the smoke job hourly.
* **Slack on failure:** Uses secret `SLACK_WEBHOOK_URL` to notify (job-level failure hook).
* **Unit tests:** `tests/test_account_deletion.py` added and run by **Unit — Account Deletion** job.

**Local/E2E script (PowerShell):**
`scripts/smoke_account_deletion_full.ps1` → login, unregister device, delete, token reuse rejection, legacy 410.

---

## 5) Store Console Items (human action still required)

> We created **`STORE_CONSOLE_UPDATES.md`** with exact text. The consoles themselves must be updated by a human.

### Google Play Console → App content → Account deletion

* **Web link:** `https://babyshield.cureviax.com/legal/account-deletion`
* **In-app path:** `App → Settings → Account → Delete my account`
* **Contact email:** `support@babyshield.cureviax.com`
* **Yes:** users can delete in the app
* **Deletion timing:** immediate; limited lawful retention (payments/fraud) per policy

### App Store Connect → Review Notes / App Privacy

* Include the same path, public link, support email, and a sentence that on delete we revoke tokens, unregister push, purge sessions, and delete personal data (with limited lawful retention for payments/fraud).

---

## 6) One Deferred Admin Step (to do when your expert starts)

**Branch protection** for `main` to require the smoke check before merge:

* GitHub → Repo **Settings → Branches → Add rule** for `main`

  * **Require status checks to pass** → select **`Smoke — Account Deletion`**
  * **Require branches to be up to date**
  * **Include administrators**

*(We deferred this at your request until your expert has repo admin.)*

---

## 7) What the Azure expert needs to know (for upcoming migration)

* **Public links remain `.com`**; backend currently `.ai`.
* The compliance endpoints and pages are **framework-agnostic** and must remain reachable post-migration:

  * `DELETE /api/v1/account`
  * `POST /api/v1/devices/unregister`
  * `/legal/account-deletion` (+ legacy `/legal/data-deletion` → **301**)
  * `/legal/privacy`
  * `/openapi.json` should continue to include the `DELETE /api/v1/account` doc.
* **Redis (or equivalent)** is required for:

  * JWT blocklist (`jwt:block:{jti}`)
  * Rate limit keys (`acctdel:rl:*`)
* **Background processing:** schedule the **retention purge** task daily at **02:15 UTC** (Celery beat now; use Azure equivalent if Celery changes).
* **CI smoke** expects an auth/login route at `/.ai` base until DNS/cutover is done; update `BASE` when changing hosts.

---

## 8) Verification Checklist (post-deploy or post-migration)

Run these (no assumptions; exact expected results):

```powershell
# Public page:
curl.exe -sk -o NUL -w "HTTP %{http_code}`n%{content_type}`n" https://babyshield.cureviax.com/legal/account-deletion
# Expect: HTTP 200, text/html

# Legacy redirect:
curl.exe -sk -I https://babyshield.cureviax.com/legal/data-deletion | findstr /R "HTTP Location"
# Expect: HTTP/1.1 301 ... Location: /legal/account-deletion
```

```powershell
# Live smoke (PowerShell script uses .ai backend)
./scripts/smoke_account_deletion.ps1 -BASE "https://babyshield.cureviax.ai" -TOKEN_FRESH "<valid token <5min old>"
# Expect exit code 0
```

```powershell
# Full E2E (recommended)
./scripts/smoke_account_deletion_full.ps1 -BASE "https://babyshield.cureviax.ai" -EMAIL "<test email>" -PASSWORD "<test password>"
# Expect: "OK: end-to-end account deletion flow passed."
```

In GitHub:

* Confirm **CI (smoke)** runs hourly and posts to Slack on failure.
* Confirm **Unit — Account Deletion** passes on PRs.

---

## 9) Files/Paths Added (for quick diff)

* **Routers:** `api/routers/account.py`, `api/routers/devices.py`, `api/routers/account_legacy.py`
* **Legal pages:** `static/legal/account-deletion.html` (+ explicit routes added)
* **OpenAPI:** annotations on `DELETE /api/v1/account`
* **Audit model & migration:** `account_deletion_audit` (Alembic migration added)
* **Celery task:** `tasks/retention.py` + beat schedule
* **Scripts:** `scripts/smoke_account_deletion.ps1`, `scripts/smoke_account_deletion_full.ps1`
* **CI:** `.github/workflows/ci.yml` (smoke + unit), `.github/workflows/ci-smoke-schedule.yml`
* **Docs:** `STORE_CONSOLE_UPDATES.md`, mobile integration guides updated

---

### Final note

Once you confirm the redeploy is live, we’ll run the PowerShell E2E script and address any runtime issues immediately. The only planned admin action left is enabling the branch protection rule when your expert is onboard.
