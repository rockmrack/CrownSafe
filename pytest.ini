[pytest]
# Pytest configuration for enterprise testing

# Python path setup
pythonpath = .

# pytest-postgresql configuration
# Override default user to prevent "role 'root' does not exist" errors
postgresql_user = postgres
postgresql_password = postgres
postgresql_db = test_db
postgresql_host = localhost
postgresql_port = 5432

# Test discovery
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Coverage settings
addopts = 
    -v
    --strict-markers
    --tb=short
    --cov=.
    --cov-report=html
    --cov-report=term-missing
    --cov-fail-under=15
    --cov-branch
    --maxfail=5
    -p no:warnings

# Test markers
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (slower, external dependencies)
    performance: Performance and load tests
    security: Security and penetration tests
    e2e: End-to-end tests
    slow: Slow running tests
    critical: Critical path tests (must pass)
    smoke: Smoke tests for basic functionality
    stub: Test stubs awaiting implementation (skipped in CI)

# Coverage exclusions
[coverage:run]
omit =
    */tests/*
    */test_*.py
    */__pycache__/*
    */venv/*
    */env/*
    */.venv/*
    */alembic/*
    */migrations/*
    setup.py

[coverage:report]
precision = 2
show_missing = True
skip_covered = False

# Fail if coverage is below threshold
# Set to 15% to match current coverage levels
# This allows tests to pass while we incrementally improve coverage
# Coverage improvement plan:
#   - Raise fail_under to 30% by 2025-06-01
#   - Raise fail_under to 45% by 2025-12-01
#   - Review and set further milestones as needed
fail_under = 15

# Exclude lines from coverage
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__:
    if TYPE_CHECKING:
    @abstractmethod
    @abc.abstractmethod

[coverage:html]
directory = htmlcov
