{"$schema": "https://docs.oasis-open.org/sarif/sarif/v2.1.0/errata01/os/schemas/sarif-schema-2.1.0.json","version": "2.1.0","runs": [{"tool": {"driver" : {"name" : "SnykCode","semanticVersion" : "1.1300.1","version" : "1.1300.1","informationUri" : "https://docs.snyk.io/","rules" : [{"id": "javascript/DOMXSS","name": "DOMXSS","shortDescription": {"text": "DOM-based Cross-site Scripting (XSS)"},"defaultConfiguration": {"level": "warning"},"help": {"markdown": "## Details\n\nDOM-based Cross-Site Scripting (DOM XSS) is a client-side vulnerability in which attacker-controlled data (e.g., from `location.search`, `location.hash`, `document.referrer`, browser storage, `postMessage`, WebSockets) is read by JavaScript and written to dangerous DOM/JS sinks without proper validation or encoding, causing code to execute entirely in the browser. The payload may be delivered by the server or other channels, but—unlike reflected or stored XSS—the server does not perform the injection/echo that triggers execution; the critical issue is a tainted data flow from source to sink within client-side logic, which traditional server-side defenses and many WAFs often miss.\n\nEffective mitigation of DOM XSS vulnerabilities requires implementing comprehensive input validation and output encoding strategies specifically designed for client‑side execution contexts. This includes establishing strict allowlisting mechanisms for user‑controllable data, implementing context‑aware output encoding based on the specific DOM operation being performed, and adopting secure coding practices that minimize the attack surface exposed through dangerous DOM/JavaScript APIs. Additionally, modern web applications should leverage Content Security Policy (CSP) directives and other browser security features to establish defense‑in‑depth protections against DOM‑based attacks.\n\nDOM XSS attacks have been extensively documented in security research and are frequently exploited to achieve various malicious objectives, including session hijacking through cookie theft, credential harvesting via phishing attacks, unauthorized actions performed on behalf of authenticated users, client‑side malware distribution, and sensitive data exfiltration. The client‑side nature of these attacks makes them effective at bypassing traditional perimeter security controls and targeting users directly within their browser environment.\n\n### Types of attacks\n\n| Type                         | Source Category          | Description                                                                                                                                         | Technical Details                                                                                                                                                                     |\n|------------------------------|--------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| **URL Parameter Injection**  | Navigation               | Malicious payloads embedded within URL query parameters that are processed by vulnerable JavaScript code accessing `location.search` or similar properties. | Commonly exploits `URLSearchParams`, direct string parsing, or framework routing mechanisms that unsafely process query parameters (including History API updates like `pushState`). |\n| **Fragment Identifier Exploitation** | Navigation       | Attack vectors utilizing URL hash fragments (`#`) that are accessible through `location.hash` and processed by client‑side routing or content loading mechanisms. | Particularly prevalent in Single Page Applications (SPAs) with client‑side routing frameworks that process hash‑based navigation.                                                       |\n| **HTTP Referrer Manipulation** | Request Context       | Exploitation of `document.referrer` values that contain malicious payloads, typically originating from attacker‑controlled websites linking to the vulnerable application. | Requires social engineering to direct users from attacker‑controlled domains with crafted referrer values.                                                                            |\n| **Browser Storage Attacks**  | Persistent Storage       | Malicious data injection into `localStorage`, `sessionStorage`, or IndexedDB that is subsequently read and processed unsafely by application JavaScript.    | Can persist across sessions if the attacker can get data stored (via another bug or social engineering) and may be combined with other vectors for staged exploitation.               |\n| **Cross-Frame Communication** | Inter-Frame Messaging   | Exploitation of `postMessage` APIs where malicious data is transmitted between frames or windows and processed without proper origin validation and input sanitization. | Common in applications with embedded iframes or popup windows that implement cross‑origin communication mechanisms.                                                                    |\n| **WebSocket Message Injection** | Real-time Communication | Malicious payloads delivered through WebSocket connections that are processed by client‑side message handlers without adequate input validation.         | Particularly effective against real‑time applications like chat systems, collaborative tools, or live data feeds.                                                                       |\n\n### Affected environments\n\nDOM XSS vulnerabilities can impact various categories of web applications and client‑side environments:\n\n- **Single Page Applications (SPAs)** utilizing frameworks such as React, Angular, Vue.js, or custom JavaScript implementations\n- **Progressive Web Applications (PWAs)** with extensive client‑side functionality and offline capabilities\n- **Client‑side routing implementations** including hash‑based and HTML5 History API routing mechanisms\n- **Browser extensions and add‑ons** with content script injection and web page interaction capabilities\n- **Hybrid mobile applications** utilizing WebView components and JavaScript bridge implementations\n- **Rich Internet Applications (RIAs)** with complex client‑side business logic and DOM manipulation\n- **Content Management Systems (CMS)** with client-side editing interfaces and dynamic content rendering\n- **Social media platforms and widgets** implementing client‑side content embedding and sharing functionality\n\n## Best practices for prevention\n\nThis section outlines comprehensive security measures designed to prevent DOM XSS vulnerabilities through secure development practices and technical controls.\n\n### Input Validation and Sanitization\n\n- **Implement strict input validation** for all client‑side data sources including URL parameters, fragment identifiers, referrer values, storage mechanisms, and cross‑frame communications using allowlisting approaches rather than blacklisting methodologies.\n- **Establish contextual output encoding** appropriate for the specific DOM context where data will be utilized, including HTML entity encoding, JavaScript string escaping, CSS value encoding, and URL parameter encoding.\n- **Validate data origin and integrity** for cross‑frame `postMessage` communications by implementing strict origin checking and message format validation to prevent malicious data injection from untrusted sources.\n- **Sanitize persistent storage data** by validating all data retrieved from `localStorage`, `sessionStorage`, or other client‑side storage mechanisms before processing or rendering within the application.\n\n### Secure DOM Manipulation Practices\n\n- **Avoid high‑risk DOM sinks** including `innerHTML`, `outerHTML`, `insertAdjacentHTML`, `document.write()`, `document.writeln()`, `eval()`, `Function()`, `setTimeout()`/`setInterval()` with string arguments when processing user‑controllable data.\n- **Utilize safer DOM manipulation methods** such as `textContent`, `createTextNode()`, and DOM element creation APIs that do not interpret content as executable code. Use `setAttribute()` only for non‑URL/non‑event attributes and never to set `on*` handlers or dangerous URL attributes from untrusted data.\n- **Implement secure templating mechanisms** using frameworks or libraries that provide automatic output encoding and XSS protection rather than manual string concatenation for dynamic content generation.\n- **Enforce separation of data and code** by avoiding the construction of JavaScript code through string concatenation with user‑controllable data and utilizing structured data formats like JSON for data transmission.\n\n### Browser Security Feature Implementation\n\n- **Deploy comprehensive Content Security Policy (CSP)** directives (e.g., `script-src`, `object-src`, `base-uri`, `frame-ancestors`) to limit script execution and reduce impact if a DOM XSS exists.\n- **Implement Subresource Integrity (SRI)** for all external JavaScript resources to prevent tampering with third‑party libraries that could introduce DOM XSS vulnerabilities.\n- **Utilize HTTP security headers** including `X-Content-Type-Options: nosniff`, `Referrer-Policy`, and (if CSP is not available) `X-Frame-Options`, while preferring CSP’s `frame-ancestors` directive for clickjacking protection.\n- **Adopt modern browser defenses** such as Trusted Types (where supported) to prevent assignment to DOM sinks unless passed through an approved sanitizer. Treat CORS as an access-control mechanism—not a DOM XSS control—and configure it appropriately to limit unnecessary cross-origin data exposure.\n\n### Development and Testing Practices\n\n- **Conduct regular security code reviews** focusing specifically on client-side data flow analysis to identify potential DOM XSS vulnerabilities during the development process.\n- **Implement automated static analysis** using specialized tools capable of detecting DOM XSS vulnerabilities in JavaScript code and identifying unsafe data flows from sources to sinks.\n- **Perform dynamic application security testing (DAST)** with specialized DOM XSS detection capabilities and manual penetration testing to validate the effectiveness of implemented security controls.\n- **Establish secure coding guidelines** for development teams including training on DOM XSS attack vectors, secure JavaScript programming practices, and proper use of security‑focused libraries and frameworks.","text": ""},"properties": {"tags": ["javascript","DOMXSS","Security","SourceNonServer","SourceResourceAccess","SourceNetworkRequest","Taint"],"categories": ["Security"],"exampleCommitFixes": [{"commitURL": "https://github.com/codice/ddf/commit/a8c54db08a09e8104443fd8531c0f8b6cffda1c7?diff=split#diff-e3bb069f9efbc30d0207a7c690710bc5a3b2acac15a5b8425e622a88e63a41cdL-1","lines": [{"line": "$('#extramessage').html(decodeURIComponent(param[1].split('+').join(' ')));\n","lineNumber": 12,"lineChange": "removed"},{"line": "$('#extramessage').text(decodeURIComponent(param[1].split('+').join(' '))).html();\n","lineNumber": 12,"lineChange": "added"}]},{"commitURL": "https://github.com/Drive4ik/simple-tab-groups/commit/d23caa02378845671eb32ee2c43c368f857b47c3?diff=split#diff-efdba41d528998f946ce1103fa57532e3746b2e9b1984cb92c94a2526451aedbL-1","lines": [{"line": "document.getElementById('title').innerHTML = title || url;\n","lineNumber": 6,"lineChange": "removed"},{"line": "document.getElementById('title').innerText = title || url;\n","lineNumber": 6,"lineChange": "added"}]},{"commitURL": "https://github.com/mykter/TagTime-desktop/commit/684351457a3299047fa60563785aa1716df00888?diff=split#diff-821c318e2a22a1360159993ee2168341f78e7567d0b1c9996a76f3e0cfb27b26L-1","lines": [{"line": "document.getElementById(\"time\").innerHTML =\n","lineNumber": 4,"lineChange": "removed"},{"line": "    moment(time, 'x').format('HH:mm:ss');\n","lineNumber": 5,"lineChange": "removed"},{"line": "document.getElementById(\"time\").textContent = moment(time, 'x').format('HH:mm:ss');\n","lineNumber": 5,"lineChange": "added"}]}],"exampleCommitDescriptions": [],"precision": "very-high","repoDatasetSize": 227,"cwe": ["CWE-79"]}},{"id": "python/Jinja2AutoEscapeFalse","name": "Jinja2AutoEscapeFalse","shortDescription": {"text": "Jinja auto-escape is set to false."},"defaultConfiguration": {"level": "warning"},"help": {"markdown": "## Details\n\nJinja2 is a python templating library that can be configured to escape values and avoid XSS vulnerabilities. However, the library by default sets the autoescaping to false.\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser's Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they've been correctly escaped in the application code and in this way the attempted attack is diverted.\n\nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware.\n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user's browser.|\n|**DOM-based**|Client|The attacker forces the user's browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n## Best practices for prevention\nThis section describes the top best practices designed to specifically protect your code:\n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches.\n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents.\n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.","text": ""},"properties": {"tags": ["python","Jinja2AutoEscapeFalse","Security"],"categories": ["Security"],"exampleCommitFixes": [{"commitURL": "https://github.com/GoogleCloudPlatform/titan/commit/0bf5c35ddc04b1020a14ed910af41e9ae37b1c1b?diff=split#diff-c11ef690b2d17d9c12d561977691c7d5b8f04c24db5a1f2f7266954296169432L-1","lines": [{"line": "jinja_environment = jinja2.Environment(\n","lineNumber": 23,"lineChange": "none"},{"line": "    loader=jinja2.FileSystemLoader(os.path.dirname(__file__)))\n","lineNumber": 24,"lineChange": "removed"},{"line": "    loader=jinja2.FileSystemLoader(os.path.dirname(__file__)), autoescape=True)\n","lineNumber": 24,"lineChange": "added"}]},{"commitURL": "https://github.com/remcoder/Pxxl.js/commit/707b0de4c23a0b62b3367dd7515e9df08c0a85c1?diff=split#diff-68f63e8cccbcb05c3a3fe3cb8f8a020e0b62330133bce1aacdca14328932410aL-1","lines": [{"line": "env = Environment(loader=FileSystemLoader('templates'))\n","lineNumber": 1,"lineChange": "removed"},{"line": "env = Environment(loader=FileSystemLoader('templates'), \n","lineNumber": 1,"lineChange": "added"},{"line": "  extensions=['jinja2.ext.autoescape'],\n","lineNumber": 2,"lineChange": "added"},{"line": "  autoescape=True)\n","lineNumber": 3,"lineChange": "added"}]},{"commitURL": "https://github.com/spoqa/dodotable/commit/3a6c03fdb9bc7af1216f5d5f46fee470231fa99d?diff=split#diff-04c42fa07872724974779079833c98fe763bfad87dbc50969c998bb2c18affa7L-1","lines": [{"line": "env = Environment(loader=loader,\n","lineNumber": 57,"lineChange": "none"},{"line": "                  extensions=('jinja2.ext.with_',))\n","lineNumber": 56,"lineChange": "removed"},{"line": "                  extensions=['jinja2.ext.i18n', 'jinja2.ext.with_'],\n","lineNumber": 58,"lineChange": "added"},{"line": "                  autoescape=True)\n","lineNumber": 59,"lineChange": "added"}]}],"exampleCommitDescriptions": [],"precision": "very-high","repoDatasetSize": 44,"cwe": ["CWE-79"]}},{"id": "python/NoHardcodedCredentials","name": "NoHardcodedCredentials","shortDescription": {"text": "Use of Hardcoded Credentials"},"defaultConfiguration": {"level": "note"},"help": {"markdown": "\n## Details\n\nDevelopers may use hardcoded credentials for convenience when coding in order to simplify their workflow. While they are responsible for removing these before production, occasionally this task may fall through the cracks. This also becomes a maintenance challenge when credentials are re-used across multiple applications.\n\nOnce attackers gain access, they may take advantage of privilege level to remove or alter data, take down a site or app, or hold any of the above for ransom. The risk across multiple similar projects is even greater. If code containing the credentials is reused across multiple projects, they will all be compromised.\n\n## Best practices for prevention\n* Plan software architecture such that keys and passwords are always stored outside the code, wherever possible.\n* Plan encryption into software architecture for all credential information and ensure proper handling of keys, credentials, and passwords.\n* Prompt for a secure password on first login rather than hard-code a default password.\n* If a hardcoded password or credential must be used, limit its use, for example, to system console users rather than via the network.\n* Use strong hashes for inbound password authentication, ideally with randomly assigned salts to increase the difficulty level in case of brute-force attack.","text": ""},"properties": {"tags": ["python","NoHardcodedCredentials","Security"],"categories": ["Security"],"exampleCommitFixes": [{"commitURL": "https://github.com/joatuapp/joatu-django/commit/04bf074fb48b264645f5f0b52bb6592113bb73f9?diff=split#diff-9653b8c2ce917a6134298b00c8b3f7d4b7c4dc473a752303f37a870392742127L-1","lines": [{"line": "from django.conf import settings\n","lineNumber": 6,"lineChange": "added"},{"line": "\n","lineNumber": 7,"lineChange": "added"},{"line": "\n","lineNumber": 8,"lineChange": "none"},{"line": "def coordinates_calculation(number, street, postal_code, city, country=''):\n","lineNumber": 9,"lineChange": "none"},{"line": "    api_key = 'AIzaSyDM17QITeync0gIHsGgyqG_IxLH-7JSHo0'\n","lineNumber": 8,"lineChange": "removed"},{"line": "    api_key = settings.GOOGLE_API_KEY\n","lineNumber": 10,"lineChange": "added"}]},{"commitURL": "https://github.com/leandro-gomez/youtube-api/commit/3f11cd7a2225163742a64ac1bf0e47d147cf13e4?diff=split#diff-fc29c0b673f3c43fb6fa7980bfbbcf134d866e535e90d8431c4e9ac105dc332aL-1","lines": [{"line": "import os\n","lineNumber": 1,"lineChange": "added"},{"line": "\n","lineNumber": 2,"lineChange": "none"},{"line": "API_KEY = 'AIzaSyDP74ePWyfwuHfGVnZHcM4HW4hil-4VxsU'\n","lineNumber": 2,"lineChange": "removed"},{"line": "API_KEY = os.environ['YOUTUBE_API_KEY']\n","lineNumber": 3,"lineChange": "added"}]},{"commitURL": "https://github.com/SkygearIO/chat/commit/70aafe017de3539355e3c79a504446b652dbf31f?diff=split#diff-c117fbf003ff6c8803d300cb7df397945352c8868f8a54f2ddc9e4d4c261371fL-1","lines": [{"line": "import os\n","lineNumber": 0,"lineChange": "added"},{"line": "import datetime\n","lineNumber": 1,"lineChange": "none"},{"line": "import uuid\n","lineNumber": 2,"lineChange": "none"},{"line": "\n","lineNumber": 3,"lineChange": "none"},{"line": "import jsonpickle\n","lineNumber": 4,"lineChange": "none"},{"line": "import skygear\n","lineNumber": 5,"lineChange": "none"},{"line": "from skygear.container import SkygearContainer\n","lineNumber": 6,"lineChange": "none"},{"line": "from skygear.utils.context import current_user_id\n","lineNumber": 7,"lineChange": "none"},{"line": "from skygear.utils import db\n","lineNumber": 8,"lineChange": "none"},{"line": "from skygear import pubsub\n","lineNumber": 9,"lineChange": "none"},{"line": "from psycopg2.extensions import AsIs\n","lineNumber": 10,"lineChange": "none"},{"line": "\n","lineNumber": 11,"lineChange": "none"},{"line": "\n","lineNumber": 12,"lineChange": "none"},{"line": "container = SkygearContainer()\n","lineNumber": 13,"lineChange": "none"},{"line": "container.api_key = \"my_skygear_key\"\n","lineNumber": 13,"lineChange": "removed"},{"line": "container.app_name = \"my_skygear_app\"\n","lineNumber": 14,"lineChange": "removed"},{"line": "container.api_key = os.getenv('API_KEY', \"my_skygear_key\")\n","lineNumber": 14,"lineChange": "added"},{"line": "container.app_name = os.getenv('APP_NAME', \"my_skygear_app\")\n","lineNumber": 15,"lineChange": "added"}]}],"exampleCommitDescriptions": [],"precision": "very-high","repoDatasetSize": 63,"cwe": ["CWE-798"]}},{"id": "python/NoHardcodedCredentials/test","name": "NoHardcodedCredentials/test","shortDescription": {"text": "Use of Hardcoded Credentials"},"defaultConfiguration": {"level": "note"},"help": {"markdown": "\n## Details\n\nDevelopers may use hardcoded credentials for convenience when coding in order to simplify their workflow. While they are responsible for removing these before production, occasionally this task may fall through the cracks. This also becomes a maintenance challenge when credentials are re-used across multiple applications.\n\nOnce attackers gain access, they may take advantage of privilege level to remove or alter data, take down a site or app, or hold any of the above for ransom. The risk across multiple similar projects is even greater. If code containing the credentials is reused across multiple projects, they will all be compromised.\n\n## Best practices for prevention\n* Plan software architecture such that keys and passwords are always stored outside the code, wherever possible.\n* Plan encryption into software architecture for all credential information and ensure proper handling of keys, credentials, and passwords.\n* Prompt for a secure password on first login rather than hard-code a default password.\n* If a hardcoded password or credential must be used, limit its use, for example, to system console users rather than via the network.\n* Use strong hashes for inbound password authentication, ideally with randomly assigned salts to increase the difficulty level in case of brute-force attack.","text": ""},"properties": {"tags": ["python","NoHardcodedCredentials","Security","InTest"],"categories": ["Security","InTest"],"exampleCommitFixes": [{"commitURL": "https://github.com/joatuapp/joatu-django/commit/04bf074fb48b264645f5f0b52bb6592113bb73f9?diff=split#diff-9653b8c2ce917a6134298b00c8b3f7d4b7c4dc473a752303f37a870392742127L-1","lines": [{"line": "from django.conf import settings\n","lineNumber": 6,"lineChange": "added"},{"line": "\n","lineNumber": 7,"lineChange": "added"},{"line": "\n","lineNumber": 8,"lineChange": "none"},{"line": "def coordinates_calculation(number, street, postal_code, city, country=''):\n","lineNumber": 9,"lineChange": "none"},{"line": "    api_key = 'AIzaSyDM17QITeync0gIHsGgyqG_IxLH-7JSHo0'\n","lineNumber": 8,"lineChange": "removed"},{"line": "    api_key = settings.GOOGLE_API_KEY\n","lineNumber": 10,"lineChange": "added"}]},{"commitURL": "https://github.com/leandro-gomez/youtube-api/commit/3f11cd7a2225163742a64ac1bf0e47d147cf13e4?diff=split#diff-fc29c0b673f3c43fb6fa7980bfbbcf134d866e535e90d8431c4e9ac105dc332aL-1","lines": [{"line": "import os\n","lineNumber": 1,"lineChange": "added"},{"line": "\n","lineNumber": 2,"lineChange": "none"},{"line": "API_KEY = 'AIzaSyDP74ePWyfwuHfGVnZHcM4HW4hil-4VxsU'\n","lineNumber": 2,"lineChange": "removed"},{"line": "API_KEY = os.environ['YOUTUBE_API_KEY']\n","lineNumber": 3,"lineChange": "added"}]},{"commitURL": "https://github.com/SkygearIO/chat/commit/70aafe017de3539355e3c79a504446b652dbf31f?diff=split#diff-c117fbf003ff6c8803d300cb7df397945352c8868f8a54f2ddc9e4d4c261371fL-1","lines": [{"line": "import os\n","lineNumber": 0,"lineChange": "added"},{"line": "import datetime\n","lineNumber": 1,"lineChange": "none"},{"line": "import uuid\n","lineNumber": 2,"lineChange": "none"},{"line": "\n","lineNumber": 3,"lineChange": "none"},{"line": "import jsonpickle\n","lineNumber": 4,"lineChange": "none"},{"line": "import skygear\n","lineNumber": 5,"lineChange": "none"},{"line": "from skygear.container import SkygearContainer\n","lineNumber": 6,"lineChange": "none"},{"line": "from skygear.utils.context import current_user_id\n","lineNumber": 7,"lineChange": "none"},{"line": "from skygear.utils import db\n","lineNumber": 8,"lineChange": "none"},{"line": "from skygear import pubsub\n","lineNumber": 9,"lineChange": "none"},{"line": "from psycopg2.extensions import AsIs\n","lineNumber": 10,"lineChange": "none"},{"line": "\n","lineNumber": 11,"lineChange": "none"},{"line": "\n","lineNumber": 12,"lineChange": "none"},{"line": "container = SkygearContainer()\n","lineNumber": 13,"lineChange": "none"},{"line": "container.api_key = \"my_skygear_key\"\n","lineNumber": 13,"lineChange": "removed"},{"line": "container.app_name = \"my_skygear_app\"\n","lineNumber": 14,"lineChange": "removed"},{"line": "container.api_key = os.getenv('API_KEY', \"my_skygear_key\")\n","lineNumber": 14,"lineChange": "added"},{"line": "container.app_name = os.getenv('APP_NAME', \"my_skygear_app\")\n","lineNumber": 15,"lineChange": "added"}]}],"exampleCommitDescriptions": [],"precision": "very-high","repoDatasetSize": 63,"cwe": ["CWE-798"]}},{"id": "python/NoHardcodedPasswords","name": "NoHardcodedPasswords","shortDescription": {"text": "Use of Hardcoded Passwords"},"defaultConfiguration": {"level": "warning"},"help": {"markdown": "\n## Details\n\nDevelopers may use hardcoded passwords during development to streamline setup or simplify authentication while testing. Although these passwords are intended to be removed before deployment, they are sometimes inadvertently left in the code. This introduces serious security risks, especially if the password grants elevated privileges or is reused across multiple systems.\n\nAn attacker who discovers a hardcoded password can potentially gain unauthorized access, escalate privileges, exfiltrate sensitive data, or disrupt service availability. If the password is reused across different environments or applications, the compromise can spread quickly and broadly.\n\n## Best practices for prevention\n* Plan software architecture such that keys and passwords are always stored outside the code, wherever possible.\n* Plan encryption into software architecture for all credential information and ensure proper handling of keys, credentials, and passwords.\n* Prompt for a secure password on first login rather than hard-code a default password.\n* If a hardcoded password or credential must be used, limit its use, for example, to system console users rather than via the network.\n* Use strong hashes for inbound password authentication, ideally with randomly assigned salts to increase the difficulty level in case of brute-force attack.","text": ""},"properties": {"tags": ["python","NoHardcodedPasswords","Security"],"categories": ["Security"],"exampleCommitFixes": [{"commitURL": "https://github.com/nnsun/CourseGrab/commit/18e598c6ca669cbf1bb286d9aa48f8f8c0ad9880?diff=split#diff-e5978500b2b6c494bbb8d51669e14bafc1677e4872ca42ee8dcec8b7d6237da4L-1","lines": [{"line": "# password = os.getenv(\"EMAIL_PASSWORD\")\n","lineNumber": 8,"lineChange": "removed"},{"line": "password = \"6aWQLlWAJhZpsTaAUY2E\"\n","lineNumber": 9,"lineChange": "removed"},{"line": "password = os.getenv(\"EMAIL_PASSWORD\")\n","lineNumber": 8,"lineChange": "added"}]},{"commitURL": "https://github.com/badoo/pyexasol/commit/2dd19536a268bc5f0f01ae24fb6a09daa77a1834?diff=split#diff-8cf1c2175341bd9af5c9e80eba3597eac42d73c57fb275edf6ba6687af3061cbL-1","lines": [{"line": "dsn = 'exasol-dev.mlan:8563'\n","lineNumber": 0,"lineChange": "removed"},{"line": "user = 'SYS'\n","lineNumber": 1,"lineChange": "removed"},{"line": "password = 'exasol'\n","lineNumber": 2,"lineChange": "removed"},{"line": "schema = 'PYEXASOL_TEST'\n","lineNumber": 3,"lineChange": "removed"},{"line": "import os\n","lineNumber": 0,"lineChange": "added"},{"line": "\n","lineNumber": 1,"lineChange": "added"},{"line": "dsn = os.environ.get('EXAHOST', 'exasol-dev.mlan:8563')\n","lineNumber": 2,"lineChange": "added"},{"line": "user = os.environ.get('EXAUID', 'SYS')\n","lineNumber": 3,"lineChange": "added"},{"line": "password = os.environ.get('EXAPWD', 'exasol')\n","lineNumber": 4,"lineChange": "added"},{"line": "schema = os.environ.get('EXASCHEMA', 'PYEXASOL_TEST')\n","lineNumber": 5,"lineChange": "added"}]},{"commitURL": "https://github.com/dashpay/sentinel/commit/15cd95d9662b726301c46efcdfe5738cbf22614f?diff=split#diff-64b1ab22a02a67f026631c29469d2eef15f09367f37f6127e29b09c9e0578a45L-1","lines": [{"line": "db = MySQLDatabase('sentinel', host='127.0.0.1', user='dashdrive', passwd='dashdrive')\n","lineNumber": 4,"lineChange": "removed"},{"line": "import os\n","lineNumber": 4,"lineChange": "added"},{"line": "import sys\n","lineNumber": 5,"lineChange": "added"},{"line": "sys.path.append( os.path.join( os.path.dirname(__file__), '..' ) )\n","lineNumber": 6,"lineChange": "added"},{"line": "import config\n","lineNumber": 7,"lineChange": "added"},{"line": "\n","lineNumber": 8,"lineChange": "added"},{"line": "env = os.environ.get('SENTINEL_ENV') or 'production'\n","lineNumber": 9,"lineChange": "added"},{"line": "db_cfg = config.db[env]\n","lineNumber": 10,"lineChange": "added"},{"line": "dbname = db_cfg.pop('database')\n","lineNumber": 11,"lineChange": "added"},{"line": "\n","lineNumber": 12,"lineChange": "added"},{"line": "db = MySQLDatabase(dbname, **db_cfg)\n","lineNumber": 13,"lineChange": "added"}]}],"exampleCommitDescriptions": [],"precision": "very-high","repoDatasetSize": 55,"cwe": ["CWE-798","CWE-259"]}},{"id": "python/NoHardcodedPasswords/test","name": "NoHardcodedPasswords/test","shortDescription": {"text": "Use of Hardcoded Passwords"},"defaultConfiguration": {"level": "note"},"help": {"markdown": "\n## Details\n\nDevelopers may use hardcoded passwords during development to streamline setup or simplify authentication while testing. Although these passwords are intended to be removed before deployment, they are sometimes inadvertently left in the code. This introduces serious security risks, especially if the password grants elevated privileges or is reused across multiple systems.\n\nAn attacker who discovers a hardcoded password can potentially gain unauthorized access, escalate privileges, exfiltrate sensitive data, or disrupt service availability. If the password is reused across different environments or applications, the compromise can spread quickly and broadly.\n\n## Best practices for prevention\n* Plan software architecture such that keys and passwords are always stored outside the code, wherever possible.\n* Plan encryption into software architecture for all credential information and ensure proper handling of keys, credentials, and passwords.\n* Prompt for a secure password on first login rather than hard-code a default password.\n* If a hardcoded password or credential must be used, limit its use, for example, to system console users rather than via the network.\n* Use strong hashes for inbound password authentication, ideally with randomly assigned salts to increase the difficulty level in case of brute-force attack.","text": ""},"properties": {"tags": ["python","NoHardcodedPasswords","Security","InTest"],"categories": ["Security","InTest"],"exampleCommitFixes": [{"commitURL": "https://github.com/nnsun/CourseGrab/commit/18e598c6ca669cbf1bb286d9aa48f8f8c0ad9880?diff=split#diff-e5978500b2b6c494bbb8d51669e14bafc1677e4872ca42ee8dcec8b7d6237da4L-1","lines": [{"line": "# password = os.getenv(\"EMAIL_PASSWORD\")\n","lineNumber": 8,"lineChange": "removed"},{"line": "password = \"6aWQLlWAJhZpsTaAUY2E\"\n","lineNumber": 9,"lineChange": "removed"},{"line": "password = os.getenv(\"EMAIL_PASSWORD\")\n","lineNumber": 8,"lineChange": "added"}]},{"commitURL": "https://github.com/badoo/pyexasol/commit/2dd19536a268bc5f0f01ae24fb6a09daa77a1834?diff=split#diff-8cf1c2175341bd9af5c9e80eba3597eac42d73c57fb275edf6ba6687af3061cbL-1","lines": [{"line": "dsn = 'exasol-dev.mlan:8563'\n","lineNumber": 0,"lineChange": "removed"},{"line": "user = 'SYS'\n","lineNumber": 1,"lineChange": "removed"},{"line": "password = 'exasol'\n","lineNumber": 2,"lineChange": "removed"},{"line": "schema = 'PYEXASOL_TEST'\n","lineNumber": 3,"lineChange": "removed"},{"line": "import os\n","lineNumber": 0,"lineChange": "added"},{"line": "\n","lineNumber": 1,"lineChange": "added"},{"line": "dsn = os.environ.get('EXAHOST', 'exasol-dev.mlan:8563')\n","lineNumber": 2,"lineChange": "added"},{"line": "user = os.environ.get('EXAUID', 'SYS')\n","lineNumber": 3,"lineChange": "added"},{"line": "password = os.environ.get('EXAPWD', 'exasol')\n","lineNumber": 4,"lineChange": "added"},{"line": "schema = os.environ.get('EXASCHEMA', 'PYEXASOL_TEST')\n","lineNumber": 5,"lineChange": "added"}]},{"commitURL": "https://github.com/dashpay/sentinel/commit/15cd95d9662b726301c46efcdfe5738cbf22614f?diff=split#diff-64b1ab22a02a67f026631c29469d2eef15f09367f37f6127e29b09c9e0578a45L-1","lines": [{"line": "db = MySQLDatabase('sentinel', host='127.0.0.1', user='dashdrive', passwd='dashdrive')\n","lineNumber": 4,"lineChange": "removed"},{"line": "import os\n","lineNumber": 4,"lineChange": "added"},{"line": "import sys\n","lineNumber": 5,"lineChange": "added"},{"line": "sys.path.append( os.path.join( os.path.dirname(__file__), '..' ) )\n","lineNumber": 6,"lineChange": "added"},{"line": "import config\n","lineNumber": 7,"lineChange": "added"},{"line": "\n","lineNumber": 8,"lineChange": "added"},{"line": "env = os.environ.get('SENTINEL_ENV') or 'production'\n","lineNumber": 9,"lineChange": "added"},{"line": "db_cfg = config.db[env]\n","lineNumber": 10,"lineChange": "added"},{"line": "dbname = db_cfg.pop('database')\n","lineNumber": 11,"lineChange": "added"},{"line": "\n","lineNumber": 12,"lineChange": "added"},{"line": "db = MySQLDatabase(dbname, **db_cfg)\n","lineNumber": 13,"lineChange": "added"}]}],"exampleCommitDescriptions": [],"precision": "very-high","repoDatasetSize": 55,"cwe": ["CWE-798","CWE-259"]}},{"id": "python/PT","name": "PT","shortDescription": {"text": "Path Traversal"},"defaultConfiguration": {"level": "warning"},"help": {"markdown": "## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nBeing able to access and manipulate an arbitrary path leads to vulnerabilities when a program is being run with privileges that the user providing the path should not have. A website with a path traversal vulnerability would allow users access to sensitive files on the server hosting it. CLI programs may also be vulnerable to path traversal if they are being ran with elevated privileges (such as with the setuid or setgid flags in Unix systems).\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`.\n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```","text": ""},"properties": {"tags": ["python","PT","Security","SourceNonServer","SourceLocalEnv","SourceEnvironmentVariable","Taint"],"categories": ["Security"],"exampleCommitFixes": [{"commitURL": "https://github.com/cmusatyalab/opendiamond/commit/398049c187ee644beabab44d6fece82251c1ea56?diff=split#diff-70a9940f7965191dc6ca548a38cd1bde7ec7ceaf10f26ca454cd4223d5d50fa9L-1","lines": [{"line": "    return os.path.join(DATAROOT, obj_path)\n","lineNumber": 122,"lineChange": "removed"},{"line": "    return safe_join(DATAROOT, obj_path)\n","lineNumber": 123,"lineChange": "added"},{"line": "\n","lineNumber": 124,"lineChange": "none"},{"line": "\n","lineNumber": 125,"lineChange": "none"},{"line": "def _get_index_absolute_path(index):\n","lineNumber": 126,"lineChange": "none"},{"line": "    return os.path.join(INDEXDIR, index)\n","lineNumber": 126,"lineChange": "none"},{"line": "\n","lineNumber": 128,"lineChange": "none"},{"line": "\n","lineNumber": 129,"lineChange": "none"},{"line": "@scope_blueprint.route('/obj/<path:obj_path>')\n","lineNumber": 130,"lineChange": "none"},{"line": "def get_object_src_http(obj_path):\n","lineNumber": 131,"lineChange": "none"},{"line": "    path = _get_obj_absolute_path(obj_path)\n","lineNumber": 132,"lineChange": "none"},{"line": "\n","lineNumber": 133,"lineChange": "none"},{"line": "    headers = Headers()\n","lineNumber": 134,"lineChange": "none"},{"line": "    # With add_etags=True, conditional=True\n","lineNumber": 135,"lineChange": "none"},{"line": "    # Flask should be smart enough to do 304 Not Modified\n","lineNumber": 136,"lineChange": "none"},{"line": "    response = send_file(path,\n","lineNumber": 137,"lineChange": "none"}]},{"commitURL": "https://github.com/fonttools/fonttools/commit/0b99c8968e04e2e36c6c46ad8bb1a550d25969b4?diff=split#diff-e8b6161353c7ce5b13e62df1da329a85de0ef80ce8f039d283c25bf892b2b600L-1","lines": [{"line": "\n","lineNumber": 16,"lineChange": "added"},{"line": "destdir = None\n","lineNumber": 17,"lineChange": "added"},{"line": "if sys.argv[1:]:\n","lineNumber": 18,"lineChange": "added"},{"line": "\tdestdir = os.path.normpath(os.path.join(os.getcwd(), sys.argv[1]))\n","lineNumber": 19,"lineChange": "added"},{"line": "\tassert os.path.isdir(destdir), \"destination is not an existing directory\"\n","lineNumber": 20,"lineChange": "added"},{"line": "\n","lineNumber": 21,"lineChange": "added"},{"line": "os.chdir(wdir)\n","lineNumber": 22,"lineChange": "none"},{"line": "\n","lineNumber": 23,"lineChange": "none"},{"line": "tar = src + \".tar\"\n","lineNumber": 24,"lineChange": "none"},{"line": "gz = tar + \".gz\"\n","lineNumber": 25,"lineChange": "none"},{"line": "tgz = src + \".tgz\"\n","lineNumber": 19,"lineChange": "none"},{"line": "\n","lineNumber": 26,"lineChange": "none"},{"line": "print \"source:\", src\n","lineNumber": 27,"lineChange": "none"},{"line": "print \"dest:\", tgz\n","lineNumber": 22,"lineChange": "none"},{"line": "\n","lineNumber": 29,"lineChange": "none"},{"line": "os.system('tar --exclude=CVS --exclude=%s -cf %s %s' % (scriptname, tar, src))\n","lineNumber": 30,"lineChange": "none"},{"line": "os.system('gzip -9v %s' % tar)\n","lineNumber": 31,"lineChange": "none"},{"line": "os.rename(gz, tgz)\n","lineNumber": 26,"lineChange": "removed"},{"line": "\n","lineNumber": 32,"lineChange": "added"},{"line": "if destdir:\n","lineNumber": 33,"lineChange": "added"},{"line": "\tprint \"destination directory:\", destdir\n","lineNumber": 34,"lineChange": "added"},{"line": "\tos.system('mv %s %s' % (gz, destdir))\n","lineNumber": 35,"lineChange": "added"},{"line": "\n","lineNumber": 36,"lineChange": "added"}]},{"commitURL": "https://github.com/Guad/fuwa/commit/955baf1c0e8824f08a96e48a350ee3cd0e3c5493?diff=split#diff-568470d013cd12e4f388206520da39ab9a4e4c3c6b95846cbc281abc1ba3c959L-1","lines": [{"line": "import string, random\n","lineNumber": 1,"lineChange": "removed"},{"line": "import string, random, hashlib, os\n","lineNumber": 1,"lineChange": "added"},{"line": "from werkzeug import secure_filename\n","lineNumber": 2,"lineChange": "added"},{"line": "\n","lineNumber": 3,"lineChange": "added"},{"line": "#Load config file\n","lineNumber": 4,"lineChange": "added"},{"line": "config = {}\n","lineNumber": 5,"lineChange": "added"},{"line": "with open('config.ini', 'r') as file:\n","lineNumber": 6,"lineChange": "added"},{"line": "\tfor line in file.read().splitlines():\n","lineNumber": 7,"lineChange": "added"},{"line": "\t\tline = line.split('==')\n","lineNumber": 8,"lineChange": "added"},{"line": "\t\tconfig[line[0]] = line[1]\n","lineNumber": 9,"lineChange": "added"},{"line": "\n","lineNumber": 10,"lineChange": "none"},{"line": "app = flask.Flask(__name__) #Initialize our application\n","lineNumber": 11,"lineChange": "none"},{"line": "app.config['MAX_CONTENT_LENGTH'] = 10 * 1024 * 1024 #Set the upload limit to 10MiB\n","lineNumber": 12,"lineChange": "none"},{"line": "\n","lineNumber": 14,"lineChange": "none"},{"line": "def genHash(seed): #Generate five letter filenames for our files\n","lineNumber": 15,"lineChange": "none"},{"line": "    base = string.ascii_lowercase+string.digits \n","lineNumber": 16,"lineChange": "none"},{"line": "    random.seed(seed)\n","lineNumber": 17,"lineChange": "none"},{"line": "    hash_value = \"\"\n","lineNumber": 18,"lineChange": "none"},{"line": "    for i in range(5):\n","lineNumber": 19,"lineChange": "none"},{"line": "        hash_value += random.choice(base)\n","lineNumber": 20,"lineChange": "none"},{"line": "    return hash_value\n","lineNumber": 21,"lineChange": "none"},{"line": "\n","lineNumber": 22,"lineChange": "none"},{"line": "\n","lineNumber": 23,"lineChange": "none"},{"line": "@app.route('/', methods=['GET', 'POST'])\n","lineNumber": 24,"lineChange": "none"},{"line": "def index():\n","lineNumber": 25,"lineChange": "none"},{"line": "\tif flask.request.method == 'POST':\n","lineNumber": 26,"lineChange": "none"},{"line": "\t\t\"\"\"\n","lineNumber": 27,"lineChange": "none"},{"line": "\t\t\tFile upload happens here.\n","lineNumber": 28,"lineChange": "none"},{"line": "\t\t\tWe get your filename and convert it to our hash with your extension.\n","lineNumber": 29,"lineChange": "none"},{"line": "\t\t\tThen we redirect to the file itself.\n","lineNumber": 30,"lineChange": "none"},{"line": "\t\t\"\"\"\n","lineNumber": 31,"lineChange": "none"},{"line": "\t\tf = flask.request.files['file']\n","lineNumber": 32,"lineChange": "none"},{"line": "\t\textension = f.filename.split('.')[-1]\n","lineNumber": 24,"lineChange": "removed"},{"line": "\t\tfilename = genHash(f.filename) + '.' + extension\n","lineNumber": 25,"lineChange": "removed"},{"line": "\t\tf.save('static/files/%s' % filename)\n","lineNumber": 26,"lineChange": "removed"},{"line": "\t\tprint 'Uploaded file \\'%s\\'' % filename #Log what file was uploaded\n","lineNumber": 27,"lineChange": "removed"},{"line": "\t\treturn flask.redirect(flask.url_for('getFile', filename=filename))\n","lineNumber": 28,"lineChange": "removed"},{"line": "\t\t\n","lineNumber": 33,"lineChange": "added"},{"line": "\t\thasher = hashlib.md5() \t\t\n","lineNumber": 34,"lineChange": "added"},{"line": "\t\tbuf = f.read()\t\t   \t\t\n","lineNumber": 35,"lineChange": "added"},{"line": "\t\tf.seek(0) #Set cursor back to position 0 so we can read it again in the save function.\n","lineNumber": 36,"lineChange": "added"},{"line": "\t\t\t\t\t\t\t\t\t# We hash the file to get its filename.\t   \t\t\n","lineNumber": 37,"lineChange": "added"},{"line": "\t\t\t\t\t\t\t\t\t# So that we can upload two different images with the same filename,\n","lineNumber": 38,"lineChange": "added"},{"line": "\t\thasher.update(buf)\t   \t\t# But not two same images with different filenames.\n","lineNumber": 39,"lineChange": "added"},{"line": "\t\tdirname = genHash(hasher.hexdigest())\n","lineNumber": 40,"lineChange": "added"},{"line": "\t\tif not os.path.exists(\"static/files/%s\" % dirname): # Check if the folder already exists\n","lineNumber": 41,"lineChange": "added"},{"line": "\t\t\tos.mkdir('static/files/%s' % dirname) #Make it\n","lineNumber": 42,"lineChange": "added"},{"line": "\t\t\tf.save('static/files/%s/%s' % (dirname, secure_filename(f.filename)))\n","lineNumber": 43,"lineChange": "added"},{"line": "\t\t\tprint 'Uploaded file \\'%s\\'' % secure_filename(f.filename) #Log what file was uploaded\n","lineNumber": 44,"lineChange": "added"},{"line": "\t\t\treturn flask.redirect(flask.url_for('getFile', dirname=dirname,filename=secure_filename(f.filename)))\n","lineNumber": 45,"lineChange": "added"},{"line": "\t\telse:\n","lineNumber": 46,"lineChange": "added"},{"line": "\t\t\tflask.flash('File already exists in %s!' % dirname) #Display a message for the user.\n","lineNumber": 47,"lineChange": "added"},{"line": "\t\t\treturn flask.redirect(flask.url_for('index'))\n","lineNumber": 48,"lineChange": "added"}]}],"exampleCommitDescriptions": [],"precision": "very-high","repoDatasetSize": 180,"cwe": ["CWE-23"]}},{"id": "javascript/HardcodedNonCryptoSecret","name": "HardcodedNonCryptoSecret","shortDescription": {"text": "Hardcoded Non-Cryptographic Secret"},"defaultConfiguration": {"level": "error"},"help": {"markdown": "## Details\n\nWhen constants are hardcoded into applications, this information could easily be reverse-engineered and become known to attackers. For example, if a breached authentication token is hardcoded in multiple places in the application, it may lead to components of the application remaining vulnerable if not all instances are changed.\nAnother negative effect of hard-coding constants is potential unpredictability in the application's performance if the development team fails to update every single instance of the hardcoded constant throughout the code. For these reasons, hard-coding security-relevant constants is considered bad coding practice and should be remedied if present and avoided in future.\n\n## Best practices for prevention\n- Never hard code security-related constants; use symbolic names or configuration lookup files.\n- As hard coding is often done by coders working alone on a small scale, examine all legacy code components and test carefully when scaling.\n- Adopt a \"future-proof code\" mindset: While use of constants may save a little time now and make development simpler in the short term, it could cost time and money adapting to scale or other unforeseen circumstances (such as new hardware) in the future.","text": ""},"properties": {"tags": ["javascript","HardcodedNonCryptoSecret","Security"],"categories": ["Security"],"exampleCommitFixes": [{"commitURL": "https://github.com/markstock7/FileManager/commit/50572778825dea6b6fdb34c9ae950d9915743e4c?diff=split#diff-408990876524f4737b49693cedc52fd267e31f665d0a7f71792dcb986d6a8268L-1","lines": [{"line": "accessKeyId: 'pT3KujnBPxc0ey7G',\n","lineNumber": 1,"lineChange": "removed"},{"line": "secretAccessKey: 'CcHjh2y7tIFljxgUT4U8sQLctkMBHu',\n","lineNumber": 2,"lineChange": "removed"},{"line": "accessKeyId: '',\n","lineNumber": 1,"lineChange": "added"},{"line": "secretAccessKey: '',\n","lineNumber": 2,"lineChange": "added"}]},{"commitURL": "https://github.com/leohmoraes/rocketseat-02/commit/69e888ed7c779a0fbb0d0c08a219afa11b3913bd?diff=split#diff-04122576a4101a4ed68c79faa4f4605c44d8fd93252cff9e64ba66ab9c561e86L-1","lines": [{"line": "secret: '9dffij39asf23nsfnsvsdsa',\n","lineNumber": 1,"lineChange": "removed"},{"line": "secret: process.env.APP_SECRET,\n","lineNumber": 1,"lineChange": "added"}]},{"commitURL": "https://github.com/rodrigotamura/go-stack-2019/commit/26e020dfc2272fe76c82c28d86f492c3c84a94c5?diff=split#diff-92f76c0bccc1f970244da3b50449f200d4787cf60a87be14ff4f250d0ba1a590L-1","lines": [{"line": "secret: '632ca4dfc8b2269e6fdf03ab5a55d2ec',\n","lineNumber": 1,"lineChange": "removed"},{"line": "secret: process.env.APP_SECRET,\n","lineNumber": 1,"lineChange": "added"}]}],"exampleCommitDescriptions": [],"precision": "very-high","repoDatasetSize": 100,"cwe": ["CWE-547"]}},{"id": "python/PT/test","name": "PT/test","shortDescription": {"text": "Path Traversal"},"defaultConfiguration": {"level": "note"},"help": {"markdown": "## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nBeing able to access and manipulate an arbitrary path leads to vulnerabilities when a program is being run with privileges that the user providing the path should not have. A website with a path traversal vulnerability would allow users access to sensitive files on the server hosting it. CLI programs may also be vulnerable to path traversal if they are being ran with elevated privileges (such as with the setuid or setgid flags in Unix systems).\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`.\n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```","text": ""},"properties": {"tags": ["python","PT","Security","InTest","SourceNonServer","SourceLocalEnv","SourceCLI","Taint"],"categories": ["Security","InTest"],"exampleCommitFixes": [{"commitURL": "https://github.com/cmusatyalab/opendiamond/commit/398049c187ee644beabab44d6fece82251c1ea56?diff=split#diff-70a9940f7965191dc6ca548a38cd1bde7ec7ceaf10f26ca454cd4223d5d50fa9L-1","lines": [{"line": "    return os.path.join(DATAROOT, obj_path)\n","lineNumber": 122,"lineChange": "removed"},{"line": "    return safe_join(DATAROOT, obj_path)\n","lineNumber": 123,"lineChange": "added"},{"line": "\n","lineNumber": 124,"lineChange": "none"},{"line": "\n","lineNumber": 125,"lineChange": "none"},{"line": "def _get_index_absolute_path(index):\n","lineNumber": 126,"lineChange": "none"},{"line": "    return os.path.join(INDEXDIR, index)\n","lineNumber": 126,"lineChange": "none"},{"line": "\n","lineNumber": 128,"lineChange": "none"},{"line": "\n","lineNumber": 129,"lineChange": "none"},{"line": "@scope_blueprint.route('/obj/<path:obj_path>')\n","lineNumber": 130,"lineChange": "none"},{"line": "def get_object_src_http(obj_path):\n","lineNumber": 131,"lineChange": "none"},{"line": "    path = _get_obj_absolute_path(obj_path)\n","lineNumber": 132,"lineChange": "none"},{"line": "\n","lineNumber": 133,"lineChange": "none"},{"line": "    headers = Headers()\n","lineNumber": 134,"lineChange": "none"},{"line": "    # With add_etags=True, conditional=True\n","lineNumber": 135,"lineChange": "none"},{"line": "    # Flask should be smart enough to do 304 Not Modified\n","lineNumber": 136,"lineChange": "none"},{"line": "    response = send_file(path,\n","lineNumber": 137,"lineChange": "none"}]},{"commitURL": "https://github.com/fonttools/fonttools/commit/0b99c8968e04e2e36c6c46ad8bb1a550d25969b4?diff=split#diff-e8b6161353c7ce5b13e62df1da329a85de0ef80ce8f039d283c25bf892b2b600L-1","lines": [{"line": "\n","lineNumber": 16,"lineChange": "added"},{"line": "destdir = None\n","lineNumber": 17,"lineChange": "added"},{"line": "if sys.argv[1:]:\n","lineNumber": 18,"lineChange": "added"},{"line": "\tdestdir = os.path.normpath(os.path.join(os.getcwd(), sys.argv[1]))\n","lineNumber": 19,"lineChange": "added"},{"line": "\tassert os.path.isdir(destdir), \"destination is not an existing directory\"\n","lineNumber": 20,"lineChange": "added"},{"line": "\n","lineNumber": 21,"lineChange": "added"},{"line": "os.chdir(wdir)\n","lineNumber": 22,"lineChange": "none"},{"line": "\n","lineNumber": 23,"lineChange": "none"},{"line": "tar = src + \".tar\"\n","lineNumber": 24,"lineChange": "none"},{"line": "gz = tar + \".gz\"\n","lineNumber": 25,"lineChange": "none"},{"line": "tgz = src + \".tgz\"\n","lineNumber": 19,"lineChange": "none"},{"line": "\n","lineNumber": 26,"lineChange": "none"},{"line": "print \"source:\", src\n","lineNumber": 27,"lineChange": "none"},{"line": "print \"dest:\", tgz\n","lineNumber": 22,"lineChange": "none"},{"line": "\n","lineNumber": 29,"lineChange": "none"},{"line": "os.system('tar --exclude=CVS --exclude=%s -cf %s %s' % (scriptname, tar, src))\n","lineNumber": 30,"lineChange": "none"},{"line": "os.system('gzip -9v %s' % tar)\n","lineNumber": 31,"lineChange": "none"},{"line": "os.rename(gz, tgz)\n","lineNumber": 26,"lineChange": "removed"},{"line": "\n","lineNumber": 32,"lineChange": "added"},{"line": "if destdir:\n","lineNumber": 33,"lineChange": "added"},{"line": "\tprint \"destination directory:\", destdir\n","lineNumber": 34,"lineChange": "added"},{"line": "\tos.system('mv %s %s' % (gz, destdir))\n","lineNumber": 35,"lineChange": "added"},{"line": "\n","lineNumber": 36,"lineChange": "added"}]},{"commitURL": "https://github.com/Guad/fuwa/commit/955baf1c0e8824f08a96e48a350ee3cd0e3c5493?diff=split#diff-568470d013cd12e4f388206520da39ab9a4e4c3c6b95846cbc281abc1ba3c959L-1","lines": [{"line": "import string, random\n","lineNumber": 1,"lineChange": "removed"},{"line": "import string, random, hashlib, os\n","lineNumber": 1,"lineChange": "added"},{"line": "from werkzeug import secure_filename\n","lineNumber": 2,"lineChange": "added"},{"line": "\n","lineNumber": 3,"lineChange": "added"},{"line": "#Load config file\n","lineNumber": 4,"lineChange": "added"},{"line": "config = {}\n","lineNumber": 5,"lineChange": "added"},{"line": "with open('config.ini', 'r') as file:\n","lineNumber": 6,"lineChange": "added"},{"line": "\tfor line in file.read().splitlines():\n","lineNumber": 7,"lineChange": "added"},{"line": "\t\tline = line.split('==')\n","lineNumber": 8,"lineChange": "added"},{"line": "\t\tconfig[line[0]] = line[1]\n","lineNumber": 9,"lineChange": "added"},{"line": "\n","lineNumber": 10,"lineChange": "none"},{"line": "app = flask.Flask(__name__) #Initialize our application\n","lineNumber": 11,"lineChange": "none"},{"line": "app.config['MAX_CONTENT_LENGTH'] = 10 * 1024 * 1024 #Set the upload limit to 10MiB\n","lineNumber": 12,"lineChange": "none"},{"line": "\n","lineNumber": 14,"lineChange": "none"},{"line": "def genHash(seed): #Generate five letter filenames for our files\n","lineNumber": 15,"lineChange": "none"},{"line": "    base = string.ascii_lowercase+string.digits \n","lineNumber": 16,"lineChange": "none"},{"line": "    random.seed(seed)\n","lineNumber": 17,"lineChange": "none"},{"line": "    hash_value = \"\"\n","lineNumber": 18,"lineChange": "none"},{"line": "    for i in range(5):\n","lineNumber": 19,"lineChange": "none"},{"line": "        hash_value += random.choice(base)\n","lineNumber": 20,"lineChange": "none"},{"line": "    return hash_value\n","lineNumber": 21,"lineChange": "none"},{"line": "\n","lineNumber": 22,"lineChange": "none"},{"line": "\n","lineNumber": 23,"lineChange": "none"},{"line": "@app.route('/', methods=['GET', 'POST'])\n","lineNumber": 24,"lineChange": "none"},{"line": "def index():\n","lineNumber": 25,"lineChange": "none"},{"line": "\tif flask.request.method == 'POST':\n","lineNumber": 26,"lineChange": "none"},{"line": "\t\t\"\"\"\n","lineNumber": 27,"lineChange": "none"},{"line": "\t\t\tFile upload happens here.\n","lineNumber": 28,"lineChange": "none"},{"line": "\t\t\tWe get your filename and convert it to our hash with your extension.\n","lineNumber": 29,"lineChange": "none"},{"line": "\t\t\tThen we redirect to the file itself.\n","lineNumber": 30,"lineChange": "none"},{"line": "\t\t\"\"\"\n","lineNumber": 31,"lineChange": "none"},{"line": "\t\tf = flask.request.files['file']\n","lineNumber": 32,"lineChange": "none"},{"line": "\t\textension = f.filename.split('.')[-1]\n","lineNumber": 24,"lineChange": "removed"},{"line": "\t\tfilename = genHash(f.filename) + '.' + extension\n","lineNumber": 25,"lineChange": "removed"},{"line": "\t\tf.save('static/files/%s' % filename)\n","lineNumber": 26,"lineChange": "removed"},{"line": "\t\tprint 'Uploaded file \\'%s\\'' % filename #Log what file was uploaded\n","lineNumber": 27,"lineChange": "removed"},{"line": "\t\treturn flask.redirect(flask.url_for('getFile', filename=filename))\n","lineNumber": 28,"lineChange": "removed"},{"line": "\t\t\n","lineNumber": 33,"lineChange": "added"},{"line": "\t\thasher = hashlib.md5() \t\t\n","lineNumber": 34,"lineChange": "added"},{"line": "\t\tbuf = f.read()\t\t   \t\t\n","lineNumber": 35,"lineChange": "added"},{"line": "\t\tf.seek(0) #Set cursor back to position 0 so we can read it again in the save function.\n","lineNumber": 36,"lineChange": "added"},{"line": "\t\t\t\t\t\t\t\t\t# We hash the file to get its filename.\t   \t\t\n","lineNumber": 37,"lineChange": "added"},{"line": "\t\t\t\t\t\t\t\t\t# So that we can upload two different images with the same filename,\n","lineNumber": 38,"lineChange": "added"},{"line": "\t\thasher.update(buf)\t   \t\t# But not two same images with different filenames.\n","lineNumber": 39,"lineChange": "added"},{"line": "\t\tdirname = genHash(hasher.hexdigest())\n","lineNumber": 40,"lineChange": "added"},{"line": "\t\tif not os.path.exists(\"static/files/%s\" % dirname): # Check if the folder already exists\n","lineNumber": 41,"lineChange": "added"},{"line": "\t\t\tos.mkdir('static/files/%s' % dirname) #Make it\n","lineNumber": 42,"lineChange": "added"},{"line": "\t\t\tf.save('static/files/%s/%s' % (dirname, secure_filename(f.filename)))\n","lineNumber": 43,"lineChange": "added"},{"line": "\t\t\tprint 'Uploaded file \\'%s\\'' % secure_filename(f.filename) #Log what file was uploaded\n","lineNumber": 44,"lineChange": "added"},{"line": "\t\t\treturn flask.redirect(flask.url_for('getFile', dirname=dirname,filename=secure_filename(f.filename)))\n","lineNumber": 45,"lineChange": "added"},{"line": "\t\telse:\n","lineNumber": 46,"lineChange": "added"},{"line": "\t\t\tflask.flash('File already exists in %s!' % dirname) #Display a message for the user.\n","lineNumber": 47,"lineChange": "added"},{"line": "\t\t\treturn flask.redirect(flask.url_for('index'))\n","lineNumber": 48,"lineChange": "added"}]}],"exampleCommitDescriptions": [],"precision": "very-high","repoDatasetSize": 180,"cwe": ["CWE-23"]}},{"id": "javascript/HardcodedNonCryptoSecret/test","name": "HardcodedNonCryptoSecret/test","shortDescription": {"text": "Hardcoded Non-Cryptographic Secret"},"defaultConfiguration": {"level": "note"},"help": {"markdown": "## Details\n\nWhen constants are hardcoded into applications, this information could easily be reverse-engineered and become known to attackers. For example, if a breached authentication token is hardcoded in multiple places in the application, it may lead to components of the application remaining vulnerable if not all instances are changed.\nAnother negative effect of hard-coding constants is potential unpredictability in the application's performance if the development team fails to update every single instance of the hardcoded constant throughout the code. For these reasons, hard-coding security-relevant constants is considered bad coding practice and should be remedied if present and avoided in future.\n\n## Best practices for prevention\n- Never hard code security-related constants; use symbolic names or configuration lookup files.\n- As hard coding is often done by coders working alone on a small scale, examine all legacy code components and test carefully when scaling.\n- Adopt a \"future-proof code\" mindset: While use of constants may save a little time now and make development simpler in the short term, it could cost time and money adapting to scale or other unforeseen circumstances (such as new hardware) in the future.","text": ""},"properties": {"tags": ["javascript","HardcodedNonCryptoSecret","Security","InTest"],"categories": ["Security","InTest"],"exampleCommitFixes": [{"commitURL": "https://github.com/markstock7/FileManager/commit/50572778825dea6b6fdb34c9ae950d9915743e4c?diff=split#diff-408990876524f4737b49693cedc52fd267e31f665d0a7f71792dcb986d6a8268L-1","lines": [{"line": "accessKeyId: 'pT3KujnBPxc0ey7G',\n","lineNumber": 1,"lineChange": "removed"},{"line": "secretAccessKey: 'CcHjh2y7tIFljxgUT4U8sQLctkMBHu',\n","lineNumber": 2,"lineChange": "removed"},{"line": "accessKeyId: '',\n","lineNumber": 1,"lineChange": "added"},{"line": "secretAccessKey: '',\n","lineNumber": 2,"lineChange": "added"}]},{"commitURL": "https://github.com/leohmoraes/rocketseat-02/commit/69e888ed7c779a0fbb0d0c08a219afa11b3913bd?diff=split#diff-04122576a4101a4ed68c79faa4f4605c44d8fd93252cff9e64ba66ab9c561e86L-1","lines": [{"line": "secret: '9dffij39asf23nsfnsvsdsa',\n","lineNumber": 1,"lineChange": "removed"},{"line": "secret: process.env.APP_SECRET,\n","lineNumber": 1,"lineChange": "added"}]},{"commitURL": "https://github.com/rodrigotamura/go-stack-2019/commit/26e020dfc2272fe76c82c28d86f492c3c84a94c5?diff=split#diff-92f76c0bccc1f970244da3b50449f200d4787cf60a87be14ff4f250d0ba1a590L-1","lines": [{"line": "secret: '632ca4dfc8b2269e6fdf03ab5a55d2ec',\n","lineNumber": 1,"lineChange": "removed"},{"line": "secret: process.env.APP_SECRET,\n","lineNumber": 1,"lineChange": "added"}]}],"exampleCommitDescriptions": [],"precision": "very-high","repoDatasetSize": 100,"cwe": ["CWE-547"]}},{"id": "python/Sqli","name": "Sqli","shortDescription": {"text": "SQL Injection"},"defaultConfiguration": {"level": "warning"},"help": {"markdown": "## Details\n\nIn an SQL injection attack, the user can submit an SQL query directly to the database, gaining access without providing appropriate credentials. Attackers can then view, export, modify, and delete confidential information; change passwords and other authentication information; and possibly gain access to other systems within the network. This is one of the most commonly exploited categories of vulnerability, but can largely be avoided through good coding practices.\n\n## Best practices for prevention\n* Avoid passing user-entered parameters directly to the SQL server.\n* Avoid using string concatenation to build SQL queries from user-entered parameters.\n* When coding, define SQL code first, then pass in parameters. Use prepared statements with parameterized queries. Examples include `SqlCommand()` in .NET and `bindParam()` in PHP.\n* Use strong typing for all parameters so unexpected user data will be rejected.\n* Where direct user input cannot be avoided for performance reasons, validate input against a very strict allowlist of permitted characters, avoiding special characters such as `? & / < > ; - ' \" \\` and spaces. Use a vendor-supplied escaping routine if possible.\n* Develop your application in an environment and/or using libraries that provide protection against SQL injection.\n* Harden your entire environment around a least-privilege model, ideally with isolated accounts with privileges only for particular tasks.","text": ""},"properties": {"tags": ["python","Sqli","Security","SourceNonServer","SourceResourceAccess","SourceDatabase","Taint"],"categories": ["Security"],"exampleCommitFixes": [{"commitURL": "https://github.com/nttdots/go-dots/commit/38d1493d11c3a764136c953237233fd16a3e3dc9?diff=split#diff-c7737ee0a3441787e4bcee78bd8ab548aa068c1d16a2632ecf141d9f405d0105L-1","lines": [{"line": "cur.execute(\"select type, capacity from blocker where id=%d\" % i)\n","lineNumber": 15,"lineChange": "removed"},{"line": "cur.execute(\"select type, capacity from blocker where id=%s\", (i,))\n","lineNumber": 14,"lineChange": "added"}]},{"commitURL": "https://github.com/geopython/pywps/commit/a8aa61f85ddc2b3eff6d1fe2c61801b1746007d6?diff=split#diff-dc4ab5f48b32a1a0fe5fbfac4dec3ba67361f27b7a8a67c78464629c8220ae35L-1","lines": [{"line": "    WHERE uuid = '{uuid}'\n","lineNumber": 281,"lineChange": "removed"},{"line": "\"\"\".format(\n","lineNumber": 282,"lineChange": "removed"},{"line": "    uuid=uuid\n","lineNumber": 283,"lineChange": "removed"},{"line": ")\n","lineNumber": 284,"lineChange": "removed"},{"line": "    WHERE uuid = ?\n","lineNumber": 277,"lineChange": "added"},{"line": "\"\"\"\n","lineNumber": 278,"lineChange": "added"},{"line": "cur = conn.cursor()\n","lineNumber": 285,"lineChange": "none"},{"line": "cur.execute(insert)\n","lineNumber": 286,"lineChange": "removed"},{"line": "cur.execute(insert, (str(uuid)))\n","lineNumber": 280,"lineChange": "added"}]},{"commitURL": "https://github.com/Karaage-Cluster/karaage/commit/9f34c6b21538046fafa081da03b5765f78a8b038?diff=split#diff-bd494c70c6111dfcdf5ad33f16e1cc3170a88f7a8713497ef6166493574a8219L-1","lines": [{"line": "\n","lineNumber": 242,"lineChange": "none"},{"line": "    # Custom SQL as need to get users that were removed from project too\n","lineNumber": 247,"lineChange": "none"},{"line": "    cursor = connection.cursor()\n","lineNumber": 248,"lineChange": "removed"},{"line": "    sql = \"SELECT user_id from cpu_job where project_id = '%s' and `machine_id` IN %s AND `date` >= '%s' AND `date` <= '%s' GROUP BY user_id\" % (str(project.pid), mc_ids, start_str, end_str)\n","lineNumber": 249,"lineChange": "removed"},{"line": "    cursor.execute(sql)\n","lineNumber": 250,"lineChange": "removed"},{"line": "    rows = list(cursor.fetchall())\n","lineNumber": 251,"lineChange": "removed"},{"line": "    cursor.close()\n","lineNumber": 252,"lineChange": "removed"},{"line": "\n","lineNumber": 253,"lineChange": "removed"},{"line": "    for uid in rows:\n","lineNumber": 254,"lineChange": "removed"},{"line": "        u = UserAccount.objects.get(id=uid[0]).user\n","lineNumber": 255,"lineChange": "removed"},{"line": "    rows = CPUJob.objects.filter(\n","lineNumber": 244,"lineChange": "added"},{"line": "            project=project,\n","lineNumber": 245,"lineChange": "added"},{"line": "            machine__category=machine_category,\n","lineNumber": 246,"lineChange": "added"},{"line": "            date__range=(start_str, end_str)\n","lineNumber": 247,"lineChange": "added"},{"line": "            ).values('user').annotate().order_by('user')\n","lineNumber": 248,"lineChange": "added"},{"line": "\n","lineNumber": 249,"lineChange": "added"},{"line": "    for row in rows:\n","lineNumber": 250,"lineChange": "added"},{"line": "        u = UserAccount.objects.get(id=row['user']).user\n","lineNumber": 251,"lineChange": "added"}]}],"exampleCommitDescriptions": [],"precision": "very-high","repoDatasetSize": 156,"cwe": ["CWE-89"]}},{"id": "python/XSS","name": "XSS","shortDescription": {"text": "Cross-site Scripting (XSS)"},"defaultConfiguration": {"level": "error"},"help": {"markdown": "## Details\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser's Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they've been correctly escaped in the application code and in this way the attempted attack is diverted.\n\nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware.\n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user's browser.|\n|**DOM-based**|Client|The attacker forces the user's browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n## Best practices for prevention\nThis section describes the top best practices designed to specifically protect your code:\n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches.\n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents.\n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.","text": ""},"properties": {"tags": ["python","XSS","Security","SourceServer","SourceHttpParam","Taint"],"categories": ["Security"],"exampleCommitFixes": [{"commitURL": "https://github.com/disoul/dotapick/commit/9af2d0c2c993c9893e1ded55869a0bdf8daf682f?diff=split#diff-c967b1b8020ddb28b0d48b996d98e3d959e49e2f50be7f3b2c5ae787ada96d8fL-1","lines": [{"line": "return suggestheros.GetSuggestedHeros()\n","lineNumber": 15,"lineChange": "removed"},{"line": "return jsonify({'hero': suggestheros.GetSuggestedHeros()})\n","lineNumber": 16,"lineChange": "added"}]},{"commitURL": "https://github.com/using-docker/ci-testing/commit/efdd006e9e14262ee476f74073303bed985d03df?diff=split#diff-515d151a4d9c862bba82a31654a24a25035b96fecb9d8a310559fd791a85708bL-1","lines": [{"line": "        name = request.form['name']\n","lineNumber": 16,"lineChange": "removed"},{"line": "        name = html.escape(request.form['name'], quote=True)\n","lineNumber": 17,"lineChange": "added"},{"line": "\n","lineNumber": 18,"lineChange": "none"},{"line": "    salted_name = salt + name\n","lineNumber": 19,"lineChange": "none"},{"line": "    name_hash = hashlib.sha256(salted_name.encode()).hexdigest()\n","lineNumber": 20,"lineChange": "none"},{"line": "    header = '<html><head><title>Identidock</title></head><body>'\n","lineNumber": 21,"lineChange": "none"},{"line": "    body = '''<form method=\"POST\">\n","lineNumber": 22,"lineChange": "none"},{"line": "              Hello <input type=\"text\" name=\"name\" value=\"{0}\">\n","lineNumber": 23,"lineChange": "none"},{"line": "              <input type=\"submit\" value=\"submit\">\n","lineNumber": 24,"lineChange": "none"},{"line": "              </form>\n","lineNumber": 25,"lineChange": "none"},{"line": "              <p>You look like a:\n","lineNumber": 26,"lineChange": "none"},{"line": "              <img src=\"/monster/{1}\"/>\n","lineNumber": 27,"lineChange": "none"},{"line": "              '''.format(name, name_hash)\n","lineNumber": 28,"lineChange": "none"},{"line": "    footer = '</body></html>'\n","lineNumber": 29,"lineChange": "none"},{"line": "\n","lineNumber": 30,"lineChange": "none"},{"line": "    return header + body + footer\n","lineNumber": 31,"lineChange": "none"}]},{"commitURL": "https://github.com/lordfriend/Albireo/commit/3c52562d141d0d97cc317fe2654689de52726684?diff=split#diff-2292f6e629b924ed84cbd8e19bc9b9ee0be71b9cc5fcb7da86a0558230df5abeL-1","lines": [{"line": "status = request.args.get('status', Favorites.WATCHING)\n","lineNumber": 26,"lineChange": "removed"},{"line": "status = int(request.args.get('status', Favorites.WATCHING))\n","lineNumber": 26,"lineChange": "added"},{"line": "if status == 0:\n","lineNumber": 27,"lineChange": "none"},{"line": "    status = None\n","lineNumber": 28,"lineChange": "none"},{"line": "return watch_service.my_favorites(current_user.id, status)\n","lineNumber": 29,"lineChange": "none"}]}],"exampleCommitDescriptions": [],"precision": "very-high","repoDatasetSize": 184,"cwe": ["CWE-79"]}},{"id": "python/reDOS/test","name": "reDOS/test","shortDescription": {"text": "Regular Expression Denial of Service (ReDoS)"},"defaultConfiguration": {"level": "note"},"help": {"markdown": "## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet's take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn't match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.","text": ""},"properties": {"tags": ["python","reDOS","Security","InTest","SourceNonServer","SourceLocalEnv","SourceCLI","Taint"],"categories": ["Security","InTest"],"exampleCommitFixes": [{"commitURL": "https://github.com/recipy/recipy/commit/2620bc3173653ef475d46a2843f82cc962ce4ee7?diff=split#diff-929d0c0102f1c46d0c0f5cf684f068d1d2a34b11cbc40a4f69e667b697a5d6d2L-1","lines": [{"line": "from recipyCommon.tinydb_utils import listsearch\n","lineNumber": 10,"lineChange": "added"},{"line": "\n","lineNumber": 11,"lineChange": "none"},{"line": "\n","lineNumber": 12,"lineChange": "none"},{"line": "routes = Blueprint('routes', __name__, template_folder='templates')\n","lineNumber": 13,"lineChange": "none"},{"line": "\n","lineNumber": 14,"lineChange": "none"},{"line": "if not os.path.exists(os.path.dirname(recipyGui.config.get('tinydb'))):\n","lineNumber": 15,"lineChange": "none"},{"line": "        os.mkdir(os.path.dirname(recipyGui.config.get('tinydb')))\n","lineNumber": 16,"lineChange": "none"},{"line": "\n","lineNumber": 17,"lineChange": "none"},{"line": "\n","lineNumber": 18,"lineChange": "none"},{"line": "@recipyGui.route('/')\n","lineNumber": 19,"lineChange": "none"},{"line": "def index():\n","lineNumber": 20,"lineChange": "none"},{"line": "    form = SearchForm()\n","lineNumber": 21,"lineChange": "none"},{"line": "\n","lineNumber": 22,"lineChange": "none"},{"line": "    query = request.args.get('query', '').strip()\n","lineNumber": 23,"lineChange": "none"},{"line": "\n","lineNumber": 24,"lineChange": "none"},{"line": "    db = TinyDB(recipyGui.config.get('tinydb'))\n","lineNumber": 25,"lineChange": "none"},{"line": "\n","lineNumber": 26,"lineChange": "none"},{"line": "    if not query:\n","lineNumber": 27,"lineChange": "none"},{"line": "        runs = db.all()\n","lineNumber": 28,"lineChange": "none"},{"line": "    else:\n","lineNumber": 29,"lineChange": "none"},{"line": "        # Search run outputs using the query string\n","lineNumber": 30,"lineChange": "none"},{"line": "        runs = db.search(\n","lineNumber": 31,"lineChange": "none"},{"line": "            where('outputs').any(lambda x: re.match(\".+%s.+\" % query, x)) |\n","lineNumber": 31,"lineChange": "removed"},{"line": "            where('outputs').any(lambda x: listsearch(query, x)) |\n","lineNumber": 32,"lineChange": "added"}]},{"commitURL": "https://github.com/INN/responsive-tables/commit/c18099d5dfd4db169b98340abdc03d56078e6188?diff=split#diff-8e8c32a9c452fd9d09913d26547a9f3007a6ddb32a57612ccf0ce4b862936e36L-1","lines": [{"line": "from jinja2 import Environment, FileSystemLoader\n","lineNumber": 10,"lineChange": "added"},{"line": "env = Environment(\n","lineNumber": 11,"lineChange": "added"},{"line": "    loader=FileSystemLoader(pwd + '/templates'))\n","lineNumber": 12,"lineChange": "added"},{"line": "\n","lineNumber": 13,"lineChange": "added"},{"line": "\n","lineNumber": 14,"lineChange": "none"},{"line": "def render(template_name, template_dict):\n","lineNumber": 15,"lineChange": "none"},{"line": "    with open(pwd + '/templates/' + template_name) as template:\n","lineNumber": 12,"lineChange": "removed"},{"line": "        tmpl = template.read()\n","lineNumber": 13,"lineChange": "removed"},{"line": "        for key, val in template_dict.items():\n","lineNumber": 14,"lineChange": "removed"},{"line": "            tmpl = re.sub('{{\\s+?%s\\s+?}}' % key, val, tmpl)\n","lineNumber": 15,"lineChange": "removed"},{"line": "    return tmpl\n","lineNumber": 16,"lineChange": "removed"},{"line": "    template = env.get_template(template_name)\n","lineNumber": 16,"lineChange": "added"},{"line": "    return template.render(**template_dict)\n","lineNumber": 17,"lineChange": "added"}]},{"commitURL": "https://github.com/tinybike/argus/commit/c67b6b1b92b6798a98ad4631a7d45680670d4422?diff=split#diff-6deba2d6d1e7891e988ff891cad5516c01360c5c7a560113765f64af05597cc9L-1","lines": [{"line": "match = re.search(sentence, body)\n","lineNumber": 13,"lineChange": "removed"},{"line": "match = re.search(re.escape(sentence), body)\n","lineNumber": 13,"lineChange": "added"}]}],"exampleCommitDescriptions": [],"precision": "very-high","repoDatasetSize": 72,"cwe": ["CWE-400"]}},{"id": "python/CodeInjection","name": "CodeInjection","shortDescription": {"text": "Code Injection"},"defaultConfiguration": {"level": "warning"},"help": {"markdown": "## Details\n\nA secure code injection attack occurs when the attacker exploits an existing input processing vulnerability, passing special characters and code directly to a web-based application or site. The code is then executed, potentially granting the user system access to export sensitive data, to install malware, or even to move laterally and to exploit other systems in the trusted internal network environment. While code injection attacks can take place in several ways, the common factor is allowing the user to submit executable code to the application. The most common forms of code injection are SQL injection (server side) and cross-site scripting (XSS) (client side).\n\n## Best practices for prevention\n- Never trust user input. Assume any input may transmit harmful values.\n- Apply least privilege principle (for example, limit users to read only wherever possible).\n- Avoid passing raw user input directly to functions; use parameterized queries to extract data first.\n- Sanitize user input strings of special characters such as ?, &, /, <, >, and quotation marks.\n- Use whitelisting of known good values.\n- Validate user input against expected response types.\n- Escape shell commands with functions such as shlex for Python, or escapeshellarg for PHP.\n- Remember that code injection can take place on multiple fronts: GET and POST requests, but also cookies and HTTP headers.\n- Ensure up-to-date patching across all systems to remediate known vulnerabilities so these cannot be exploited by code injection.\n- Educate all team members on safe data handling procedures to prevent attacks.","text": ""},"properties": {"tags": ["python","CodeInjection","Security","SourceNonServer","SourceLocalEnv","SourceCLI","Taint"],"categories": ["Security"],"exampleCommitFixes": [{"commitURL": "https://github.com/spectralDNS/shenfun/commit/16475f2baf898134032dbdd155dd0a563312eff0?diff=split#diff-fb6da554a7c1e9794c48fc606ab31338fabdcc929700fc2e15d28570af157e58L-1","lines": [{"line": "assert isinstance(eval(sys.argv[-2]), int)\n","lineNumber": 23,"lineChange": "removed"},{"line": "assert isinstance(int(sys.argv[-2]), int)\n","lineNumber": 23,"lineChange": "added"}]},{"commitURL": "https://github.com/nextml/NEXT/commit/b0b770405772329dac83ddfdd870ffbbd6a33c4a?diff=split#diff-98933f824249bbc1f6ec89f094e9077caeb5921ae009aa42feb4d2b8d90f7ccfL-1","lines": [{"line": "        true_values ={1, '1', 'True', 'true'}\n","lineNumber": 87,"lineChange": "added"},{"line": "        zip_true = False\n","lineNumber": 88,"lineChange": "none"},{"line": "        if request.args.get('zip'):\n","lineNumber": 88,"lineChange": "removed"},{"line": "            try:\n","lineNumber": 89,"lineChange": "removed"},{"line": "                zip_true = eval(request.args.get('zip'))\n","lineNumber": 90,"lineChange": "removed"},{"line": "            except:\n","lineNumber": 91,"lineChange": "removed"},{"line": "                pass\n","lineNumber": 92,"lineChange": "removed"},{"line": "\n","lineNumber": 93,"lineChange": "removed"},{"line": "        if 'zip' in request.args.keys():\n","lineNumber": 89,"lineChange": "added"},{"line": "            zip_true = True if request.args.get('zip') in true_values else False\n","lineNumber": 90,"lineChange": "added"},{"line": "        csv = False\n","lineNumber": 91,"lineChange": "added"},{"line": "        if 'csv' in request.args.keys():\n","lineNumber": 92,"lineChange": "added"},{"line": "            csv = True if request.args.get('csv') in true_values else False\n","lineNumber": 93,"lineChange": "added"}]},{"commitURL": "https://github.com/naftaliharris/tauthon/commit/4ce126b887212da704b2fe4cf7a22322b48d45bd?diff=split#diff-b989b2f4ba160af991a115642288da4f6cc1bc6e98ead4bf36cf2b8cc235a41fL-1","lines": [{"line": "\tyear = eval(sys.argv[1])\n","lineNumber": 16,"lineChange": "removed"},{"line": "    year = int(sys.argv[1])\n","lineNumber": 16,"lineChange": "added"},{"line": "else:\n","lineNumber": 17,"lineChange": "none"},{"line": "\tyear = input('In which year were you born? ')\n","lineNumber": 18,"lineChange": "none"},{"line": "if year in range(100):\n","lineNumber": 19,"lineChange": "none"},{"line": "\tprint 'I\\'ll assume that by', year,\n","lineNumber": 20,"lineChange": "none"},{"line": "    year = year + 1900\n","lineNumber": 21,"lineChange": "none"},{"line": "    print 'you mean', year, 'and not the early Christian era'\n","lineNumber": 22,"lineChange": "none"},{"line": "elif year not in range(1850, 2000):\n","lineNumber": 23,"lineChange": "none"},{"line": "\tprint 'It\\'s hard to believe you were born in', year\n","lineNumber": 24,"lineChange": "none"},{"line": "    return\n","lineNumber": 25,"lineChange": "none"},{"line": "#\n","lineNumber": 26,"lineChange": "none"},{"line": "if sys.argv[2:]:\n","lineNumber": 27,"lineChange": "none"},{"line": "\tmonth = eval(sys.argv[2])\n","lineNumber": 28,"lineChange": "removed"},{"line": "    month = int(sys.argv[2])\n","lineNumber": 28,"lineChange": "added"},{"line": "else:\n","lineNumber": 29,"lineChange": "none"},{"line": "\tmonth = input('And in which month? (1-12) ')\n","lineNumber": 30,"lineChange": "none"},{"line": "if month not in range(1, 13):\n","lineNumber": 31,"lineChange": "none"},{"line": "    print 'There is no month numbered', month\n","lineNumber": 32,"lineChange": "none"},{"line": "    return\n","lineNumber": 33,"lineChange": "none"},{"line": "#\n","lineNumber": 34,"lineChange": "none"},{"line": "if sys.argv[3:]:\n","lineNumber": 35,"lineChange": "none"},{"line": "\tday = eval(sys.argv[3])\n","lineNumber": 36,"lineChange": "removed"},{"line": "    day = int(sys.argv[3])\n","lineNumber": 36,"lineChange": "added"}]}],"exampleCommitDescriptions": [],"precision": "very-high","repoDatasetSize": 69,"cwe": ["CWE-94"]}},{"id": "python/CodeInjection/test","name": "CodeInjection/test","shortDescription": {"text": "Code Injection"},"defaultConfiguration": {"level": "note"},"help": {"markdown": "## Details\n\nA secure code injection attack occurs when the attacker exploits an existing input processing vulnerability, passing special characters and code directly to a web-based application or site. The code is then executed, potentially granting the user system access to export sensitive data, to install malware, or even to move laterally and to exploit other systems in the trusted internal network environment. While code injection attacks can take place in several ways, the common factor is allowing the user to submit executable code to the application. The most common forms of code injection are SQL injection (server side) and cross-site scripting (XSS) (client side).\n\n## Best practices for prevention\n- Never trust user input. Assume any input may transmit harmful values.\n- Apply least privilege principle (for example, limit users to read only wherever possible).\n- Avoid passing raw user input directly to functions; use parameterized queries to extract data first.\n- Sanitize user input strings of special characters such as ?, &, /, <, >, and quotation marks.\n- Use whitelisting of known good values.\n- Validate user input against expected response types.\n- Escape shell commands with functions such as shlex for Python, or escapeshellarg for PHP.\n- Remember that code injection can take place on multiple fronts: GET and POST requests, but also cookies and HTTP headers.\n- Ensure up-to-date patching across all systems to remediate known vulnerabilities so these cannot be exploited by code injection.\n- Educate all team members on safe data handling procedures to prevent attacks.","text": ""},"properties": {"tags": ["python","CodeInjection","Security","InTest","SourceNonServer","SourceLocalEnv","SourceCLI","Taint"],"categories": ["Security","InTest"],"exampleCommitFixes": [{"commitURL": "https://github.com/spectralDNS/shenfun/commit/16475f2baf898134032dbdd155dd0a563312eff0?diff=split#diff-fb6da554a7c1e9794c48fc606ab31338fabdcc929700fc2e15d28570af157e58L-1","lines": [{"line": "assert isinstance(eval(sys.argv[-2]), int)\n","lineNumber": 23,"lineChange": "removed"},{"line": "assert isinstance(int(sys.argv[-2]), int)\n","lineNumber": 23,"lineChange": "added"}]},{"commitURL": "https://github.com/nextml/NEXT/commit/b0b770405772329dac83ddfdd870ffbbd6a33c4a?diff=split#diff-98933f824249bbc1f6ec89f094e9077caeb5921ae009aa42feb4d2b8d90f7ccfL-1","lines": [{"line": "        true_values ={1, '1', 'True', 'true'}\n","lineNumber": 87,"lineChange": "added"},{"line": "        zip_true = False\n","lineNumber": 88,"lineChange": "none"},{"line": "        if request.args.get('zip'):\n","lineNumber": 88,"lineChange": "removed"},{"line": "            try:\n","lineNumber": 89,"lineChange": "removed"},{"line": "                zip_true = eval(request.args.get('zip'))\n","lineNumber": 90,"lineChange": "removed"},{"line": "            except:\n","lineNumber": 91,"lineChange": "removed"},{"line": "                pass\n","lineNumber": 92,"lineChange": "removed"},{"line": "\n","lineNumber": 93,"lineChange": "removed"},{"line": "        if 'zip' in request.args.keys():\n","lineNumber": 89,"lineChange": "added"},{"line": "            zip_true = True if request.args.get('zip') in true_values else False\n","lineNumber": 90,"lineChange": "added"},{"line": "        csv = False\n","lineNumber": 91,"lineChange": "added"},{"line": "        if 'csv' in request.args.keys():\n","lineNumber": 92,"lineChange": "added"},{"line": "            csv = True if request.args.get('csv') in true_values else False\n","lineNumber": 93,"lineChange": "added"}]},{"commitURL": "https://github.com/naftaliharris/tauthon/commit/4ce126b887212da704b2fe4cf7a22322b48d45bd?diff=split#diff-b989b2f4ba160af991a115642288da4f6cc1bc6e98ead4bf36cf2b8cc235a41fL-1","lines": [{"line": "\tyear = eval(sys.argv[1])\n","lineNumber": 16,"lineChange": "removed"},{"line": "    year = int(sys.argv[1])\n","lineNumber": 16,"lineChange": "added"},{"line": "else:\n","lineNumber": 17,"lineChange": "none"},{"line": "\tyear = input('In which year were you born? ')\n","lineNumber": 18,"lineChange": "none"},{"line": "if year in range(100):\n","lineNumber": 19,"lineChange": "none"},{"line": "\tprint 'I\\'ll assume that by', year,\n","lineNumber": 20,"lineChange": "none"},{"line": "    year = year + 1900\n","lineNumber": 21,"lineChange": "none"},{"line": "    print 'you mean', year, 'and not the early Christian era'\n","lineNumber": 22,"lineChange": "none"},{"line": "elif year not in range(1850, 2000):\n","lineNumber": 23,"lineChange": "none"},{"line": "\tprint 'It\\'s hard to believe you were born in', year\n","lineNumber": 24,"lineChange": "none"},{"line": "    return\n","lineNumber": 25,"lineChange": "none"},{"line": "#\n","lineNumber": 26,"lineChange": "none"},{"line": "if sys.argv[2:]:\n","lineNumber": 27,"lineChange": "none"},{"line": "\tmonth = eval(sys.argv[2])\n","lineNumber": 28,"lineChange": "removed"},{"line": "    month = int(sys.argv[2])\n","lineNumber": 28,"lineChange": "added"},{"line": "else:\n","lineNumber": 29,"lineChange": "none"},{"line": "\tmonth = input('And in which month? (1-12) ')\n","lineNumber": 30,"lineChange": "none"},{"line": "if month not in range(1, 13):\n","lineNumber": 31,"lineChange": "none"},{"line": "    print 'There is no month numbered', month\n","lineNumber": 32,"lineChange": "none"},{"line": "    return\n","lineNumber": 33,"lineChange": "none"},{"line": "#\n","lineNumber": 34,"lineChange": "none"},{"line": "if sys.argv[3:]:\n","lineNumber": 35,"lineChange": "none"},{"line": "\tday = eval(sys.argv[3])\n","lineNumber": 36,"lineChange": "removed"},{"line": "    day = int(sys.argv[3])\n","lineNumber": 36,"lineChange": "added"}]}],"exampleCommitDescriptions": [],"precision": "very-high","repoDatasetSize": 69,"cwe": ["CWE-94"]}},{"id": "python/InsecureHash","name": "InsecureHash","shortDescription": {"text": "Use of Password Hash With Insufficient Computational Effort"},"defaultConfiguration": {"level": "note"},"help": {"markdown": "\n## Details\n\nSensitive information should never be stored in plain text, since this makes it very easy for unauthorized users, whether malicious insiders or outside attackers, to access. Hashing methods are used to make stored passwords and other sensitive data unreadable to users. For example, when a password is defined for the first time, it is hashed and then stored. The next time that user attempts to log on, the password they enter is hashed following the same procedure and compared with the stored value. In this way, the original password never needs to be stored in the system.\n\nHashing is a one-way scheme, meaning a hashed password cannot be reverse engineered. However, if an outdated or custom programmed hashing scheme is used, it becomes simple for an attacker with powerful modern computing power to gain access to the hashes used. This opens up access to all stored password information, leading to breached security. Therefore, it is essential for developers to understand modern, secure password hashing techniques.\n\n## Best practices for prevention\n* Use strong standard algorithms for hashing rather than simpler but outdated methods or DIY hashing schemes, which may have inherent weaknesses.\n* Use modular design for all code dealing with hashing so it can be swapped out as security standards change over time.\n* Use salting in combination with hashing (While this places more demands on resources, it is an essential step for tighter security.).\n* Implement zero-trust architecture to ensure that access to password data is granted only for legitimate business purposes.\n* Increase developer awareness of current standards in data security and cryptography.","text": ""},"properties": {"tags": ["python","InsecureHash","Security"],"categories": ["Security"],"exampleCommitFixes": [{"commitURL": "https://github.com/juanifioren/django-oidc-provider/commit/4d2bdb9a9727d61c8ea9cb009c8edb6551a40d29?diff=split#diff-ee3f804a53e5df628d05fa6a150e11fc0b4cc971713d88c55b489d6cf1765e2cL-1","lines": [{"line": "secret = md5(uuid4().hex.encode()).hexdigest()\n","lineNumber": 38,"lineChange": "removed"},{"line": "secret = sha224(uuid4().hex.encode()).hexdigest()\n","lineNumber": 38,"lineChange": "added"}]},{"commitURL": "https://github.com/kiwitcms/Kiwi/commit/e17c071623e055c24a0fdf203991819d446c8f09?diff=split#diff-aa51d9851848643981397fb834fa01bae8fba8ff6f1af7bcd7c711b007a0433aL-1","lines": [{"line": "md5 = hashlib.md5()\n","lineNumber": 7,"lineChange": "removed"},{"line": "md5.update(value.encode(\"UTF-8\"))\n","lineNumber": 8,"lineChange": "removed"},{"line": "return md5.hexdigest()\n","lineNumber": 9,"lineChange": "removed"},{"line": "_checksum = hashlib.sha256()\n","lineNumber": 7,"lineChange": "added"},{"line": "_checksum.update(value.encode(\"UTF-8\"))\n","lineNumber": 8,"lineChange": "added"},{"line": "return _checksum.hexdigest()\n","lineNumber": 9,"lineChange": "added"}]},{"commitURL": "https://github.com/campadrenalin/ConcurrenTree/commit/e554020b495252255f3653d8ccbe512913113a56?diff=split#diff-79a9ef9641eab4e9dcdadc45ffcd52611bc80cd900394d9f32a68b2d39eee23eL-1","lines": [{"line": "from hashlib import md5\n","lineNumber": 0,"lineChange": "removed"},{"line": "from hashlib import new\n","lineNumber": 0,"lineChange": "added"},{"line": "\n","lineNumber": 1,"lineChange": "added"},{"line": "HASH_FUNCTION = 'sha512' # was md5\n","lineNumber": 2,"lineChange": "added"},{"line": "\n","lineNumber": 3,"lineChange": "none"},{"line": "def make(string):\n","lineNumber": 4,"lineChange": "none"},{"line": "\treturn md5(string).hexdigest()\n","lineNumber": 3,"lineChange": "removed"},{"line": "\treturn new(HASH_FUNCTION, string).hexdigest()\n","lineNumber": 5,"lineChange": "added"}]}],"exampleCommitDescriptions": [],"precision": "very-high","repoDatasetSize": 144,"cwe": ["CWE-916"]}},{"id": "python/InsecureXmlParser","name": "InsecureXmlParser","shortDescription": {"text": "Insecure Xml Parser"},"defaultConfiguration": {"level": "warning"},"help": {"markdown": "\n## Details\n\nFor convenience, XML documents can use system identifiers to enable access to stored content, whether local or remote. The XML processor then uses the system identifier to access the resource rather than using the URI. When this weakness exists, the application permits user-supplied data, which could include the address of an XML external identity, to be passed directly to the XML parser. The application will then attempt to retrieve documents from outside of secure, controlled areas.\n\nAttackers can exploit this weakness to expose sensitive data, execute port scanning on the server side, or launch a denial-of-service attack (DoS) such as Billion Laughs.\n\n## Best practices for prevention\n* Avoid using vulnerable APIs\n* When possible, disable loading of data from external entities. The method of doing this will vary based on the language and XML parser being used.\n* Use a local, static document type definitions (DTDs) and ensure that external DTDs are disallowed entirely.\n* If user input cannot be avoided, perform validation against an allowlist of possible data sources. However, as long as external DTDs are allowed, XML code remains inherently vulnerable to attacks exploiting this weakness.\n\n\n## References\n* [XML vulnerabilities](https://docs.python.org/3/library/xml.html#xml-vulnerabilities)","text": ""},"properties": {"tags": ["python","InsecureXmlParser","Security"],"categories": ["Security"],"exampleCommitFixes": [{"commitURL": "https://github.com/DefectDojo/django-DefectDojo/commit/3bb6173ce1db621ebd99a1cb361e7da7cbaf1925?diff=split#diff-ef1e087c75390ecb8efe1b3990802470d172cb27c62e76392ba87bdae855ca2cL-1","lines": [{"line": "from xml.dom import NamespaceErr\n","lineNumber": 2,"lineChange": "removed"},{"line": "from xml.etree import ElementTree\n","lineNumber": 3,"lineChange": "removed"},{"line": "from defusedxml.dom import NamespaceErr\n","lineNumber": 2,"lineChange": "added"},{"line": "from defusedxml.etree import ElementTree\n","lineNumber": 3,"lineChange": "added"},{"line": "from datetime import datetime\n","lineNumber": 4,"lineChange": "none"},{"line": "\n","lineNumber": 5,"lineChange": "none"},{"line": "from dojo.models import Finding\n","lineNumber": 6,"lineChange": "none"},{"line": "\n","lineNumber": 7,"lineChange": "none"},{"line": "\n","lineNumber": 8,"lineChange": "none"},{"line": "class CheckmarxXMLParser(object):\n","lineNumber": 9,"lineChange": "none"},{"line": "    def __init__(self, filename, test):\n","lineNumber": 10,"lineChange": "none"},{"line": "        cxscan = ElementTree.parse(filename)\n","lineNumber": 11,"lineChange": "none"}]},{"commitURL": "https://github.com/tableau/server-client-python/commit/921d554e550cb494d71424750459dbc1348e6b13?diff=split#diff-1817d191ee3dba3576772719ed5f6fdf9dac5891ad290947042b6c496b544214L-1","lines": [{"line": "import xml.etree.ElementTree as ET\n","lineNumber": 0,"lineChange": "removed"},{"line": "from defusedxml.ElementTree import fromstring\n","lineNumber": 0,"lineChange": "added"},{"line": "\n","lineNumber": 1,"lineChange": "none"},{"line": "\n","lineNumber": 2,"lineChange": "none"},{"line": "class TagItem(object):\n","lineNumber": 3,"lineChange": "none"},{"line": "    @classmethod\n","lineNumber": 4,"lineChange": "none"},{"line": "    def from_response(cls, resp, ns):\n","lineNumber": 5,"lineChange": "none"},{"line": "        return cls.from_xml_element(ET.fromstring(resp), ns)\n","lineNumber": 6,"lineChange": "removed"},{"line": "        return cls.from_xml_element(fromstring(resp), ns)\n","lineNumber": 6,"lineChange": "added"}]},{"commitURL": "https://github.com/GeoNode/geonode/commit/084bbf0b44a3be4e7e97f8ec02c3b350163fc620?diff=split#diff-709ba0472e42f6d983a47dce6d65992b594de32b9db5ffeb056f5045bde5c8ffL-1","lines": [{"line": "                import xml.etree.ElementTree as ET\n","lineNumber": 473,"lineChange": "removed"},{"line": "                from defusedxml import lxml as dlxml\n","lineNumber": 473,"lineChange": "added"},{"line": "                namespaces = {'wms': 'http://www.opengis.net/wms',\n","lineNumber": 474,"lineChange": "none"},{"line": "                              'xlink': 'http://www.w3.org/1999/xlink',\n","lineNumber": 475,"lineChange": "none"},{"line": "                              'xsi': 'http://www.w3.org/2001/XMLSchema-instance'}\n","lineNumber": 476,"lineChange": "none"},{"line": "\n","lineNumber": 477,"lineChange": "none"},{"line": "                e = ET.fromstring(wms_capabilities)\n","lineNumber": 478,"lineChange": "removed"},{"line": "                e = dlxml.fromstring(wms_capabilities)\n","lineNumber": 478,"lineChange": "added"}]}],"exampleCommitDescriptions": [],"precision": "very-high","repoDatasetSize": 52,"cwe": ["CWE-611"]}}]}},"results": [{"ruleId": "javascript/DOMXSS","ruleIndex": 0,"level": "warning","message": {"text":"Unsanitized input from data from a remote resource flows into innerHTML, where it is used to dynamically construct the HTML page on client side. This may result in a DOM Based Cross-Site Scripting attack (DOMXSS).","markdown":"Unsanitized input from {0} {1} into {2}, where it is used to dynamically construct the HTML page on client side. This may result in a DOM Based Cross-Site Scripting attack (DOMXSS).","arguments": ["[data from a remote resource](0)","[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18)","[innerHTML](19)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":539,  "endLine":556,  "startColumn":37,  "endColumn":18}  }}],"fingerprints": {"0": "e6464e896b187346c7ba90cef026c738ffb77f8a87220509378a24ac1e258128","1": "cf7733e4.4773f344.607187b5.c8688b2b.642e4e1a.dbe83c7e.cd61fc56.545e9171.3223a79e.7d4b7307.c9330245.c8688b2b.79a7d027.dbe83c7e.cd61fc56.d6cae557","snyk/asset/finding/v1": "96ebeed2-e4be-4471-876e-ea0a254b8abb","identity": "96ebeed2-e4be-4471-876e-ea0a254b8abb"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":529,  "endLine":529,  "startColumn":40,  "endColumn":45}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":529,  "endLine":529,  "startColumn":40,  "endColumn":45}}}},{"location": {"id": 2,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":529,  "endLine":531,  "startColumn":34,  "endColumn":19}}}},{"location": {"id": 3,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":529,  "endLine":529,  "startColumn":23,  "endColumn":31}}}},{"location": {"id": 4,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":535,  "endLine":535,  "startColumn":36,  "endColumn":44}}}},{"location": {"id": 5,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":535,  "endLine":535,  "startColumn":45,  "endColumn":49}}}},{"location": {"id": 6,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":535,  "endLine":535,  "startColumn":36,  "endColumn":49}}}},{"location": {"id": 7,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":535,  "endLine":535,  "startColumn":30,  "endColumn":51}}}},{"location": {"id": 8,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":535,  "endLine":535,  "startColumn":23,  "endColumn":27}}}},{"location": {"id": 9,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":541,  "endLine":541,  "startColumn":54,  "endColumn":58}}}},{"location": {"id": 10,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":541,  "endLine":541,  "startColumn":59,  "endColumn":63}}}},{"location": {"id": 11,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":541,  "endLine":541,  "startColumn":54,  "endColumn":63}}}},{"location": {"id": 12,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":541,  "endLine":541,  "startColumn":64,  "endColumn":71}}}},{"location": {"id": 13,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":541,  "endLine":541,  "startColumn":54,  "endColumn":71}}}},{"location": {"id": 14,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":541,  "endLine":541,  "startColumn":72,  "endColumn":84}}}},{"location": {"id": 15,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":541,  "endLine":541,  "startColumn":54,  "endColumn":89}}}},{"location": {"id": 16,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":541,  "endLine":541,  "startColumn":91,  "endColumn":105}}}},{"location": {"id": 17,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":541,  "endLine":541,  "startColumn":53,  "endColumn":105}}}},{"location": {"id": 18,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":539,  "endLine":556,  "startColumn":37,  "endColumn":18}}}},{"location": {"id": 19,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":539,  "endLine":556,  "startColumn":37,  "endColumn":18}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 558,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "javascript/DOMXSS","ruleIndex": 0,"level": "warning","message": {"text":"Unsanitized input from data from a remote resource flows into innerHTML, where it is used to dynamically construct the HTML page on client side. This may result in a DOM Based Cross-Site Scripting attack (DOMXSS).","markdown":"Unsanitized input from {0} {1} into {2}, where it is used to dynamically construct the HTML page on client side. This may result in a DOM Based Cross-Site Scripting attack (DOMXSS).","arguments": ["[data from a remote resource](0)","[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17)","[innerHTML](18)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":564,  "endLine":570,  "startColumn":37,  "endColumn":22}  }}],"fingerprints": {"identity": "63a4595a-2edc-4987-8f45-d2170e6fabe8","0": "671cc780d91526bd0703c2e97124eba4b227dc11eb5ba08ff1593b255dc2c506","1": "cf7733e4.4f7726f4.607187b5.6483b32f.9cde7c93.dbe83c7e.cd61fc56.edbff1ae.3223a79e.277c621c.c9330245.c8688b2b.9644eec5.dbe83c7e.83265159.edbff1ae","snyk/asset/finding/v1": "63a4595a-2edc-4987-8f45-d2170e6fabe8"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":529,  "endLine":529,  "startColumn":40,  "endColumn":45}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":529,  "endLine":529,  "startColumn":40,  "endColumn":45}}}},{"location": {"id": 2,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":529,  "endLine":531,  "startColumn":34,  "endColumn":19}}}},{"location": {"id": 3,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":529,  "endLine":529,  "startColumn":23,  "endColumn":31}}}},{"location": {"id": 4,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":535,  "endLine":535,  "startColumn":36,  "endColumn":44}}}},{"location": {"id": 5,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":535,  "endLine":535,  "startColumn":45,  "endColumn":49}}}},{"location": {"id": 6,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":535,  "endLine":535,  "startColumn":36,  "endColumn":49}}}},{"location": {"id": 7,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":535,  "endLine":535,  "startColumn":30,  "endColumn":51}}}},{"location": {"id": 8,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":535,  "endLine":535,  "startColumn":23,  "endColumn":27}}}},{"location": {"id": 9,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":541,  "endLine":541,  "startColumn":54,  "endColumn":58}}}},{"location": {"id": 10,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":541,  "endLine":541,  "startColumn":59,  "endColumn":63}}}},{"location": {"id": 11,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":562,  "endLine":562,  "startColumn":17,  "endColumn":26}}}},{"location": {"id": 12,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":562,  "endLine":562,  "startColumn":27,  "endColumn":35}}}},{"location": {"id": 13,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":562,  "endLine":562,  "startColumn":44,  "endColumn":50}}}},{"location": {"id": 14,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":565,  "endLine":565,  "startColumn":39,  "endColumn":45}}}},{"location": {"id": 15,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":565,  "endLine":565,  "startColumn":46,  "endColumn":52}}}},{"location": {"id": 16,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":565,  "endLine":565,  "startColumn":39,  "endColumn":52}}}},{"location": {"id": 17,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":564,  "endLine":570,  "startColumn":37,  "endColumn":22}}}},{"location": {"id": 18,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":564,  "endLine":570,  "startColumn":37,  "endColumn":22}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 558,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "javascript/DOMXSS","ruleIndex": 0,"level": "warning","message": {"text":"Unsanitized input from data from a remote resource flows into innerHTML, where it is used to dynamically construct the HTML page on client side. This may result in a DOM Based Cross-Site Scripting attack (DOMXSS).","markdown":"Unsanitized input from {0} {1} into {2}, where it is used to dynamically construct the HTML page on client side. This may result in a DOM Based Cross-Site Scripting attack (DOMXSS).","arguments": ["[data from a remote resource](0)","[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19)","[innerHTML](20)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":606,  "endLine":606,  "startColumn":43,  "endColumn":52}  }}],"fingerprints": {"identity": "f91f6d89-6fab-455b-a49a-03a5acd4c2fe","0": "d465824c832b6eea01e7bb1ec6d2c6ce85e24c31c9b4866afa8152964fe1e3ae","1": "cf7733e4.4773f344.3fc5e701.d7919eeb.b2d20d03.dbe83c7e.83265159.89d75565.cf7733e4.7d4b7307.c9330245.313735ce.79a7d027.dbe83c7e.0da76983.89d75565","snyk/asset/finding/v1": "f91f6d89-6fab-455b-a49a-03a5acd4c2fe"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":596,  "endLine":596,  "startColumn":40,  "endColumn":45}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":596,  "endLine":596,  "startColumn":40,  "endColumn":45}}}},{"location": {"id": 2,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":596,  "endLine":600,  "startColumn":34,  "endColumn":19}}}},{"location": {"id": 3,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":596,  "endLine":596,  "startColumn":23,  "endColumn":31}}}},{"location": {"id": 4,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":602,  "endLine":602,  "startColumn":36,  "endColumn":44}}}},{"location": {"id": 5,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":602,  "endLine":602,  "startColumn":45,  "endColumn":49}}}},{"location": {"id": 6,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":602,  "endLine":602,  "startColumn":36,  "endColumn":49}}}},{"location": {"id": 7,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":602,  "endLine":602,  "startColumn":30,  "endColumn":51}}}},{"location": {"id": 8,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":602,  "endLine":602,  "startColumn":23,  "endColumn":27}}}},{"location": {"id": 9,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":607,  "endLine":607,  "startColumn":49,  "endColumn":53}}}},{"location": {"id": 10,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":607,  "endLine":607,  "startColumn":54,  "endColumn":58}}}},{"location": {"id": 11,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":607,  "endLine":607,  "startColumn":49,  "endColumn":58}}}},{"location": {"id": 12,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":607,  "endLine":607,  "startColumn":59,  "endColumn":64}}}},{"location": {"id": 13,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":607,  "endLine":607,  "startColumn":49,  "endColumn":64}}}},{"location": {"id": 14,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":607,  "endLine":607,  "startColumn":25,  "endColumn":88}}}},{"location": {"id": 15,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":490,  "endLine":490,  "startColumn":28,  "endColumn":35}}}},{"location": {"id": 16,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":491,  "endLine":491,  "startColumn":67,  "endColumn":74}}}},{"location": {"id": 17,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":491,  "endLine":491,  "startColumn":31,  "endColumn":82}}}},{"location": {"id": 18,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":491,  "endLine":491,  "startColumn":19,  "endColumn":28}}}},{"location": {"id": 19,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":606,  "endLine":606,  "startColumn":43,  "endColumn":52}}}},{"location": {"id": 20,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":606,  "endLine":606,  "startColumn":43,  "endColumn":52}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 558,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "javascript/DOMXSS","ruleIndex": 0,"level": "warning","message": {"text":"Unsanitized input from data from a remote resource flows into innerHTML, where it is used to dynamically construct the HTML page on client side. This may result in a DOM Based Cross-Site Scripting attack (DOMXSS).","markdown":"Unsanitized input from {0} {1} into {2}, where it is used to dynamically construct the HTML page on client side. This may result in a DOM Based Cross-Site Scripting attack (DOMXSS).","arguments": ["[data from a remote resource](0)","[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19)","[innerHTML](20)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":612,  "endLine":612,  "startColumn":43,  "endColumn":52}  }}],"fingerprints": {"identity": "928a0fd3-b39a-4ab8-b140-629a7d53f968","0": "d8094372000cd91554cfc19bd0e5429197f7eb719bae059d85162695d67d0797","1": "cf7733e4.4773f344.3fc5e701.d7919eeb.b2d20d03.dbe83c7e.83265159.89d75565.51bd987d.f9697af6.c9330245.d7919eeb.5bcab2b0.dbe83c7e.83265159.89d75565","snyk/asset/finding/v1": "928a0fd3-b39a-4ab8-b140-629a7d53f968"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":596,  "endLine":596,  "startColumn":40,  "endColumn":45}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":596,  "endLine":596,  "startColumn":40,  "endColumn":45}}}},{"location": {"id": 2,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":596,  "endLine":600,  "startColumn":34,  "endColumn":19}}}},{"location": {"id": 3,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":596,  "endLine":596,  "startColumn":23,  "endColumn":31}}}},{"location": {"id": 4,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":602,  "endLine":602,  "startColumn":36,  "endColumn":44}}}},{"location": {"id": 5,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":602,  "endLine":602,  "startColumn":45,  "endColumn":49}}}},{"location": {"id": 6,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":602,  "endLine":602,  "startColumn":36,  "endColumn":49}}}},{"location": {"id": 7,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":602,  "endLine":602,  "startColumn":30,  "endColumn":51}}}},{"location": {"id": 8,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":602,  "endLine":602,  "startColumn":23,  "endColumn":27}}}},{"location": {"id": 9,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":613,  "endLine":613,  "startColumn":37,  "endColumn":41}}}},{"location": {"id": 10,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":613,  "endLine":613,  "startColumn":42,  "endColumn":47}}}},{"location": {"id": 11,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":613,  "endLine":613,  "startColumn":37,  "endColumn":47}}}},{"location": {"id": 12,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":613,  "endLine":613,  "startColumn":49,  "endColumn":56}}}},{"location": {"id": 13,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":613,  "endLine":613,  "startColumn":37,  "endColumn":75}}}},{"location": {"id": 14,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":613,  "endLine":613,  "startColumn":25,  "endColumn":77}}}},{"location": {"id": 15,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":490,  "endLine":490,  "startColumn":28,  "endColumn":35}}}},{"location": {"id": 16,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":491,  "endLine":491,  "startColumn":67,  "endColumn":74}}}},{"location": {"id": 17,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":491,  "endLine":491,  "startColumn":31,  "endColumn":82}}}},{"location": {"id": 18,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":491,  "endLine":491,  "startColumn":19,  "endColumn":28}}}},{"location": {"id": 19,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":612,  "endLine":612,  "startColumn":43,  "endColumn":52}}}},{"location": {"id": 20,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":612,  "endLine":612,  "startColumn":43,  "endColumn":52}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 558,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "javascript/DOMXSS","ruleIndex": 0,"level": "warning","message": {"text":"Unsanitized input from data from a remote resource flows into innerHTML, where it is used to dynamically construct the HTML page on client side. This may result in a DOM Based Cross-Site Scripting attack (DOMXSS).","markdown":"Unsanitized input from {0} {1} into {2}, where it is used to dynamically construct the HTML page on client side. This may result in a DOM Based Cross-Site Scripting attack (DOMXSS).","arguments": ["[data from a remote resource](0)","[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17)","[innerHTML](18)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":644,  "endLine":651,  "startColumn":37,  "endColumn":22}  }}],"fingerprints": {"identity": "00e25b2b-bd06-4173-907a-c79023c6af38","0": "20b385049c928301a061c62f23eaa4ce40655561d6423903ad1059e83cbc4729","1": "cf7733e4.4f7726f4.607187b5.7da15f0a.eecc5416.dbe83c7e.cd61fc56.cd44a39f.eb20beab.7d4b7307.c9330245.1ca8559b.edbd2872.dbe83c7e.48c59ee7.cd44a39f","snyk/asset/finding/v1": "00e25b2b-bd06-4173-907a-c79023c6af38"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":630,  "endLine":630,  "startColumn":40,  "endColumn":45}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":630,  "endLine":630,  "startColumn":40,  "endColumn":45}}}},{"location": {"id": 2,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":630,  "endLine":632,  "startColumn":34,  "endColumn":19}}}},{"location": {"id": 3,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":630,  "endLine":630,  "startColumn":23,  "endColumn":31}}}},{"location": {"id": 4,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":636,  "endLine":636,  "startColumn":36,  "endColumn":44}}}},{"location": {"id": 5,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":636,  "endLine":636,  "startColumn":45,  "endColumn":49}}}},{"location": {"id": 6,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":636,  "endLine":636,  "startColumn":36,  "endColumn":49}}}},{"location": {"id": 7,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":636,  "endLine":636,  "startColumn":30,  "endColumn":51}}}},{"location": {"id": 8,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":636,  "endLine":636,  "startColumn":23,  "endColumn":27}}}},{"location": {"id": 9,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":640,  "endLine":640,  "startColumn":17,  "endColumn":21}}}},{"location": {"id": 10,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":640,  "endLine":640,  "startColumn":22,  "endColumn":26}}}},{"location": {"id": 11,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":640,  "endLine":640,  "startColumn":17,  "endColumn":26}}}},{"location": {"id": 12,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":640,  "endLine":640,  "startColumn":27,  "endColumn":32}}}},{"location": {"id": 13,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":640,  "endLine":640,  "startColumn":41,  "endColumn":44}}}},{"location": {"id": 14,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":646,  "endLine":646,  "startColumn":39,  "endColumn":42}}}},{"location": {"id": 15,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":646,  "endLine":646,  "startColumn":43,  "endColumn":49}}}},{"location": {"id": 16,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":646,  "endLine":646,  "startColumn":39,  "endColumn":49}}}},{"location": {"id": 17,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":644,  "endLine":651,  "startColumn":37,  "endColumn":22}}}},{"location": {"id": 18,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":644,  "endLine":651,  "startColumn":37,  "endColumn":22}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 558,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "javascript/DOMXSS","ruleIndex": 0,"level": "warning","message": {"text":"Unsanitized input from data from a remote resource flows into innerHTML, where it is used to dynamically construct the HTML page on client side. This may result in a DOM Based Cross-Site Scripting attack (DOMXSS).","markdown":"Unsanitized input from {0} {1} into {2}, where it is used to dynamically construct the HTML page on client side. This may result in a DOM Based Cross-Site Scripting attack (DOMXSS).","arguments": ["[data from a remote resource](0)","[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21)","[innerHTML](22)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":678,  "endLine":678,  "startColumn":43,  "endColumn":52}  }}],"fingerprints": {"identity": "08c58896-175c-4ae2-bd09-7f5b488d2178","0": "253312ff5d13bc979bf10d067514631f639454b86102fb5d47c255a824ecdc58","1": "cf7733e4.4773f344.3fc5e701.d7919eeb.b2d20d03.dbe83c7e.83265159.89d75565.cf7733e4.7d4b7307.c9330245.313735ce.79a7d027.dbe83c7e.83265159.89d75565","snyk/asset/finding/v1": "08c58896-175c-4ae2-bd09-7f5b488d2178"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":669,  "endLine":669,  "startColumn":40,  "endColumn":45}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":669,  "endLine":669,  "startColumn":40,  "endColumn":45}}}},{"location": {"id": 2,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":669,  "endLine":672,  "startColumn":34,  "endColumn":19}}}},{"location": {"id": 3,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":669,  "endLine":669,  "startColumn":23,  "endColumn":31}}}},{"location": {"id": 4,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":674,  "endLine":674,  "startColumn":36,  "endColumn":44}}}},{"location": {"id": 5,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":674,  "endLine":674,  "startColumn":45,  "endColumn":49}}}},{"location": {"id": 6,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":674,  "endLine":674,  "startColumn":36,  "endColumn":49}}}},{"location": {"id": 7,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":674,  "endLine":674,  "startColumn":30,  "endColumn":51}}}},{"location": {"id": 8,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":674,  "endLine":674,  "startColumn":23,  "endColumn":27}}}},{"location": {"id": 9,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":679,  "endLine":679,  "startColumn":48,  "endColumn":52}}}},{"location": {"id": 10,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":679,  "endLine":679,  "startColumn":53,  "endColumn":57}}}},{"location": {"id": 11,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":679,  "endLine":679,  "startColumn":48,  "endColumn":57}}}},{"location": {"id": 12,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":679,  "endLine":679,  "startColumn":58,  "endColumn":67}}}},{"location": {"id": 13,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":679,  "endLine":679,  "startColumn":48,  "endColumn":67}}}},{"location": {"id": 14,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":679,  "endLine":679,  "startColumn":68,  "endColumn":74}}}},{"location": {"id": 15,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":679,  "endLine":679,  "startColumn":48,  "endColumn":74}}}},{"location": {"id": 16,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":679,  "endLine":679,  "startColumn":25,  "endColumn":94}}}},{"location": {"id": 17,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":490,  "endLine":490,  "startColumn":28,  "endColumn":35}}}},{"location": {"id": 18,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":491,  "endLine":491,  "startColumn":67,  "endColumn":74}}}},{"location": {"id": 19,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":491,  "endLine":491,  "startColumn":31,  "endColumn":82}}}},{"location": {"id": 20,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":491,  "endLine":491,  "startColumn":19,  "endColumn":28}}}},{"location": {"id": 21,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":678,  "endLine":678,  "startColumn":43,  "endColumn":52}}}},{"location": {"id": 22,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":678,  "endLine":678,  "startColumn":43,  "endColumn":52}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 558,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "javascript/DOMXSS","ruleIndex": 0,"level": "warning","message": {"text":"Unsanitized input from data from a remote resource flows into innerHTML, where it is used to dynamically construct the HTML page on client side. This may result in a DOM Based Cross-Site Scripting attack (DOMXSS).","markdown":"Unsanitized input from {0} {1} into {2}, where it is used to dynamically construct the HTML page on client side. This may result in a DOM Based Cross-Site Scripting attack (DOMXSS).","arguments": ["[data from a remote resource](0)","[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19)","[innerHTML](20)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":683,  "endLine":683,  "startColumn":43,  "endColumn":52}  }}],"fingerprints": {"identity": "0c55dd62-8869-4ad8-bea9-0cf2c8bdc73f","0": "ee3f0015237ad922edc1db0f9cead5214b8d113ea206b5c511c70aab2a5ac2a5","1": "cf7733e4.4773f344.3fc5e701.d7919eeb.b2d20d03.dbe83c7e.83265159.89d75565.51bd987d.f9697af6.c9330245.d7919eeb.5bcab2b0.dbe83c7e.83265159.89d75565","snyk/asset/finding/v1": "0c55dd62-8869-4ad8-bea9-0cf2c8bdc73f"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":669,  "endLine":669,  "startColumn":40,  "endColumn":45}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":669,  "endLine":669,  "startColumn":40,  "endColumn":45}}}},{"location": {"id": 2,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":669,  "endLine":672,  "startColumn":34,  "endColumn":19}}}},{"location": {"id": 3,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":669,  "endLine":669,  "startColumn":23,  "endColumn":31}}}},{"location": {"id": 4,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":674,  "endLine":674,  "startColumn":36,  "endColumn":44}}}},{"location": {"id": 5,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":674,  "endLine":674,  "startColumn":45,  "endColumn":49}}}},{"location": {"id": 6,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":674,  "endLine":674,  "startColumn":36,  "endColumn":49}}}},{"location": {"id": 7,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":674,  "endLine":674,  "startColumn":30,  "endColumn":51}}}},{"location": {"id": 8,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":674,  "endLine":674,  "startColumn":23,  "endColumn":27}}}},{"location": {"id": 9,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":684,  "endLine":684,  "startColumn":37,  "endColumn":41}}}},{"location": {"id": 10,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":684,  "endLine":684,  "startColumn":42,  "endColumn":47}}}},{"location": {"id": 11,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":684,  "endLine":684,  "startColumn":37,  "endColumn":47}}}},{"location": {"id": 12,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":684,  "endLine":684,  "startColumn":49,  "endColumn":56}}}},{"location": {"id": 13,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":684,  "endLine":684,  "startColumn":37,  "endColumn":76}}}},{"location": {"id": 14,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":684,  "endLine":684,  "startColumn":25,  "endColumn":78}}}},{"location": {"id": 15,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":490,  "endLine":490,  "startColumn":28,  "endColumn":35}}}},{"location": {"id": 16,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":491,  "endLine":491,  "startColumn":67,  "endColumn":74}}}},{"location": {"id": 17,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":491,  "endLine":491,  "startColumn":31,  "endColumn":82}}}},{"location": {"id": 18,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":491,  "endLine":491,  "startColumn":19,  "endColumn":28}}}},{"location": {"id": 19,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":683,  "endLine":683,  "startColumn":43,  "endColumn":52}}}},{"location": {"id": 20,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":683,  "endLine":683,  "startColumn":43,  "endColumn":52}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 558,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "javascript/DOMXSS","ruleIndex": 0,"level": "warning","message": {"text":"Unsanitized input from data from a remote resource flows into innerHTML, where it is used to dynamically construct the HTML page on client side. This may result in a DOM Based Cross-Site Scripting attack (DOMXSS).","markdown":"Unsanitized input from {0} {1} into {2}, where it is used to dynamically construct the HTML page on client side. This may result in a DOM Based Cross-Site Scripting attack (DOMXSS).","arguments": ["[data from a remote resource](0)","[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18)","[innerHTML](19)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":710,  "endLine":730,  "startColumn":38,  "endColumn":18}  }}],"fingerprints": {"identity": "7e556da5-d95f-4614-9272-f915d91cae9f","0": "6ffdc294027e22b7212236993e806f6acd117d6cf3f5b7d2561e21088006788e","1": "cf7733e4.4773f344.607187b5.6483b32f.9cde7c93.dbe83c7e.9f94fc42.545e9171.d37007e1.7d4b7307.c9330245.313735ce.79a7d027.dbe83c7e.9f94fc42.3954f956","snyk/asset/finding/v1": "7e556da5-d95f-4614-9272-f915d91cae9f"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":701,  "endLine":701,  "startColumn":40,  "endColumn":45}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":701,  "endLine":701,  "startColumn":40,  "endColumn":45}}}},{"location": {"id": 2,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":701,  "endLine":703,  "startColumn":34,  "endColumn":19}}}},{"location": {"id": 3,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":701,  "endLine":701,  "startColumn":23,  "endColumn":31}}}},{"location": {"id": 4,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":707,  "endLine":707,  "startColumn":36,  "endColumn":44}}}},{"location": {"id": 5,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":707,  "endLine":707,  "startColumn":45,  "endColumn":49}}}},{"location": {"id": 6,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":707,  "endLine":707,  "startColumn":36,  "endColumn":49}}}},{"location": {"id": 7,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":707,  "endLine":707,  "startColumn":30,  "endColumn":51}}}},{"location": {"id": 8,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":707,  "endLine":707,  "startColumn":23,  "endColumn":27}}}},{"location": {"id": 9,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":714,  "endLine":714,  "startColumn":57,  "endColumn":61}}}},{"location": {"id": 10,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":714,  "endLine":714,  "startColumn":62,  "endColumn":66}}}},{"location": {"id": 11,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":714,  "endLine":714,  "startColumn":57,  "endColumn":66}}}},{"location": {"id": 12,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":714,  "endLine":714,  "startColumn":67,  "endColumn":75}}}},{"location": {"id": 13,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":714,  "endLine":714,  "startColumn":57,  "endColumn":75}}}},{"location": {"id": 14,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":714,  "endLine":714,  "startColumn":76,  "endColumn":83}}}},{"location": {"id": 15,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":714,  "endLine":714,  "startColumn":57,  "endColumn":83}}}},{"location": {"id": 16,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":714,  "endLine":714,  "startColumn":84,  "endColumn":98}}}},{"location": {"id": 17,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":714,  "endLine":714,  "startColumn":57,  "endColumn":98}}}},{"location": {"id": 18,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":710,  "endLine":730,  "startColumn":38,  "endColumn":18}}}},{"location": {"id": 19,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":710,  "endLine":730,  "startColumn":38,  "endColumn":18}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 558,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "javascript/DOMXSS","ruleIndex": 0,"level": "warning","message": {"text":"Unsanitized input from an exception flows into innerHTML, where it is used to dynamically construct the HTML page on client side. This may result in a DOM Based Cross-Site Scripting attack (DOMXSS).","markdown":"Unsanitized input from {0} {1} into {2}, where it is used to dynamically construct the HTML page on client side. This may result in a DOM Based Cross-Site Scripting attack (DOMXSS).","arguments": ["[an exception](0)","[flows](1),(2),(3),(4),(5),(6),(7),(8)","[innerHTML](9)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":618,  "endLine":618,  "startColumn":69,  "endColumn":78}  }}],"fingerprints": {"0": "461bc69d47d29a819d3417ca1c1f4440b6126df3f49b0c90510850c0fbd1dbd7","1": "cf7733e4.4773f344.3fc5e701.d7919eeb.b2d20d03.dbe83c7e.83265159.89d75565.51bd987d.7d4b7307.c9330245.59162423.79a7d027.dbe83c7e.55818220.e6930396","snyk/asset/finding/v1": "4c084ca5-04fa-4a11-8e2b-2b8696725c1e","identity": "4c084ca5-04fa-4a11-8e2b-2b8696725c1e"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":619,  "endLine":619,  "startColumn":59,  "endColumn":66}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":619,  "endLine":619,  "startColumn":59,  "endColumn":66}}}},{"location": {"id": 2,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":619,  "endLine":619,  "startColumn":53,  "endColumn":66}}}},{"location": {"id": 3,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":619,  "endLine":619,  "startColumn":21,  "endColumn":68}}}},{"location": {"id": 4,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":490,  "endLine":490,  "startColumn":28,  "endColumn":35}}}},{"location": {"id": 5,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":491,  "endLine":491,  "startColumn":67,  "endColumn":74}}}},{"location": {"id": 6,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":491,  "endLine":491,  "startColumn":31,  "endColumn":82}}}},{"location": {"id": 7,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":491,  "endLine":491,  "startColumn":19,  "endColumn":28}}}},{"location": {"id": 8,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":618,  "endLine":618,  "startColumn":69,  "endColumn":78}}}},{"location": {"id": 9,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":618,  "endLine":618,  "startColumn":69,  "endColumn":78}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 558,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "javascript/DOMXSS","ruleIndex": 0,"level": "warning","message": {"text":"Unsanitized input from an exception flows into innerHTML, where it is used to dynamically construct the HTML page on client side. This may result in a DOM Based Cross-Site Scripting attack (DOMXSS).","markdown":"Unsanitized input from {0} {1} into {2}, where it is used to dynamically construct the HTML page on client side. This may result in a DOM Based Cross-Site Scripting attack (DOMXSS).","arguments": ["[an exception](0)","[flows](1),(2),(3),(4),(5),(6),(7),(8)","[innerHTML](9)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":689,  "endLine":689,  "startColumn":74,  "endColumn":83}  }}],"fingerprints": {"identity": "2ffe9e6b-cc0c-49b4-b947-cc96ed6ce068","0": "8ccf034d256dd0bbbae2f53b81e24dcd72513a6ce5e12d6ca1b6e8ba41c75775","1": "cf7733e4.4773f344.3fc5e701.d7919eeb.b2d20d03.dbe83c7e.83265159.89d75565.51bd987d.7d4b7307.c9330245.59162423.79a7d027.dbe83c7e.83265159.1fbcf989","snyk/asset/finding/v1": "2ffe9e6b-cc0c-49b4-b947-cc96ed6ce068"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":690,  "endLine":690,  "startColumn":51,  "endColumn":58}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":690,  "endLine":690,  "startColumn":51,  "endColumn":58}}}},{"location": {"id": 2,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":690,  "endLine":690,  "startColumn":45,  "endColumn":58}}}},{"location": {"id": 3,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":690,  "endLine":690,  "startColumn":21,  "endColumn":60}}}},{"location": {"id": 4,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":490,  "endLine":490,  "startColumn":28,  "endColumn":35}}}},{"location": {"id": 5,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":491,  "endLine":491,  "startColumn":67,  "endColumn":74}}}},{"location": {"id": 6,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":491,  "endLine":491,  "startColumn":31,  "endColumn":82}}}},{"location": {"id": 7,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":491,  "endLine":491,  "startColumn":19,  "endColumn":28}}}},{"location": {"id": 8,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":689,  "endLine":689,  "startColumn":74,  "endColumn":83}}}},{"location": {"id": 9,"physicalLocation": {"artifactLocation": {  "uri": "static/admin/index.html",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":689,  "endLine":689,  "startColumn":74,  "endColumn":83}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 558,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "python/Jinja2AutoEscapeFalse","ruleIndex": 1,"level": "warning","message": {"text":"jinja2.Template is called with no autoescape argument (autoescaping is disabled by default). This increases the risk of Cross-Site Scripting (XSS) attacks.","markdown":"{0} is called with no autoescape argument (autoescaping is disabled by default). This increases the risk of Cross-Site Scripting (XSS) attacks.","arguments": ["[jinja2.Template](0)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "core_infra/risk_report_generator.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":382,  "endLine":382,  "startColumn":20,  "endColumn":28}  }}],"fingerprints": {"snyk/asset/finding/v1": "94615926-37e3-4403-b8f5-61303567aa0d","identity": "94615926-37e3-4403-b8f5-61303567aa0d","0": "ba10f8843f524c2316535edacbf866be6ef6896262202b67ae64fe96545c7d2d","1": "cde8b698.4259202a.4c413c45.139c59a8.cc857d4e.57d888ee.9b87d056.a373e373.fb3709c6.a1be8dd3.4c413c45.139c59a8.1d07cee4.a5d7f69f.9b87d056.a373e373"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "core_infra/risk_report_generator.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":382,  "endLine":382,  "startColumn":20,  "endColumn":28}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 502,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileCodeFlow"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "python/NoHardcodedPasswords","ruleIndex": 4,"level": "warning","message": {"text":"Do not hardcode passwords in code. Found hardcoded password used in a dictionary key.","markdown":"Do not hardcode passwords in code. Found {0} password used in a dictionary key.","arguments": ["[hardcoded](0)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "add_is_active_to_postgres_db.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":15,  "endLine":15,  "startColumn":5,  "endColumn":39}  }}],"fingerprints": {"0": "db420d5c78a8f09d69bd267a1d465d692db29aa7806c0982ddb12542cd7f534c","1": "16691f08.72cf4541.79e62dc9.b40b94b1.d55d9a06.37e346af.af9048ce.742d9b21.a6b41d6e.72cf4541.79e62dc9.d3bd4968.d55d9a06.37e346af.a2237efa.f46ed94e","snyk/asset/finding/v1": "f2430a39-604b-406b-beee-5cf172549cf9","identity": "f2430a39-604b-406b-beee-5cf172549cf9"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "add_is_active_to_postgres_db.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":15,  "endLine":15,  "startColumn":17,  "endColumn":39}}}}]}]}],"properties": {"isAutofixable": false,"priorityScore": 507,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileCodeFlow"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "python/NoHardcodedPasswords","ruleIndex": 4,"level": "warning","message": {"text":"Do not hardcode passwords in code. Found hardcoded password used in a dictionary key.","markdown":"Do not hardcode passwords in code. Found {0} password used in a dictionary key.","arguments": ["[hardcoded](0)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "api/routers/honeypots.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":67,  "endLine":67,  "startColumn":17,  "endColumn":48}  }}],"fingerprints": {"0": "b606acb5f9c3d520c493df786e70d3b66a7bfbc45c1eaae8290960e8370e364f","1": "16691f08.2052f24c.2c7699ff.535f94bf.d40ba80d.298b89ba.397db99a.91057b05.16691f08.2052f24c.e864a003.535f94bf.d40ba80d.298b89ba.397db99a.91057b05","snyk/asset/finding/v1": "3061512e-4564-4cda-805f-625f3402b444","identity": "3061512e-4564-4cda-805f-625f3402b444"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "api/routers/honeypots.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":67,  "endLine":67,  "startColumn":29,  "endColumn":48}}}}]}]}],"properties": {"isAutofixable": false,"priorityScore": 507,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileCodeFlow"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "python/NoHardcodedPasswords","ruleIndex": 4,"level": "warning","message": {"text":"Do not hardcode passwords in code. Found hardcoded password used in a dictionary key.","markdown":"Do not hardcode passwords in code. Found {0} password used in a dictionary key.","arguments": ["[hardcoded](0)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "scripts/enable_pg_trgm_emergency.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":23,  "endLine":23,  "startColumn":5,  "endColumn":39}  }}],"fingerprints": {"identity": "4b6a0dbb-2d87-4afe-8888-941abdbfbf6e","0": "e63a7f84dc925240cada9080cc0b1221a9be0b9787bdbeb9633df5ee65820844","1": "16691f08.72cf4541.79e62dc9.b40b94b1.d55d9a06.37e346af.af9048ce.742d9b21.a6b41d6e.2d8863ba.c58f7699.d3bd4968.d55d9a06.37e346af.e311adbb.f46ed94e","snyk/asset/finding/v1": "4b6a0dbb-2d87-4afe-8888-941abdbfbf6e"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "scripts/enable_pg_trgm_emergency.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":23,  "endLine":23,  "startColumn":17,  "endColumn":39}}}}]}]}],"properties": {"isAutofixable": false,"priorityScore": 507,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileCodeFlow"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "python/NoHardcodedPasswords","ruleIndex": 4,"level": "warning","message": {"text":"Do not hardcode passwords in code. Found hardcoded password used in a dictionary key.","markdown":"Do not hardcode passwords in code. Found {0} password used in a dictionary key.","arguments": ["[hardcoded](0)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "scripts/enable_pg_trgm_prod.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":16,  "endLine":16,  "startColumn":5,  "endColumn":39}  }}],"fingerprints": {"identity": "9ec2adc7-2f5b-4852-83aa-f961050a9b63","0": "acdf852df899a82c904feb7c8bc33b74475ed9a754865183c81314aa895d0c29","1": "16691f08.72cf4541.79e62dc9.b40b94b1.d55d9a06.37e346af.af9048ce.742d9b21.16691f08.72cf4541.c58f7699.d3bd4968.d55d9a06.37e346af.e311adbb.742d9b21","snyk/asset/finding/v1": "9ec2adc7-2f5b-4852-83aa-f961050a9b63"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "scripts/enable_pg_trgm_prod.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":16,  "endLine":16,  "startColumn":17,  "endColumn":39}}}}]}]}],"properties": {"isAutofixable": false,"priorityScore": 507,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileCodeFlow"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "python/NoHardcodedPasswords","ruleIndex": 4,"level": "warning","message": {"text":"Do not hardcode passwords in code. Found hardcoded password used in a dictionary key.","markdown":"Do not hardcode passwords in code. Found {0} password used in a dictionary key.","arguments": ["[hardcoded](0)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "scripts/smoke_testclient.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":41,  "endLine":41,  "startColumn":35,  "endColumn":55}  }}],"fingerprints": {"identity": "36882d26-57fc-4f2c-850f-988ab6f30adb","0": "502f0a43628a72cacf6f97a7215603be81915600e35761e7734e3b7305791ffb","1": "16691f08.384d621a.79e62dc9.0a90b72d.42e20447.ba14daf2.39e4fc58.0990edd8.16691f08.384d621a.79e62dc9.139c59a8.6e89d7bb.ba14daf2.39e4fc58.72ce5054","snyk/asset/finding/v1": "36882d26-57fc-4f2c-850f-988ab6f30adb"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "scripts/smoke_testclient.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":36,  "endLine":36,  "startColumn":16,  "endColumn":27}}}}]}]}],"properties": {"isAutofixable": false,"priorityScore": 557,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "python/NoHardcodedPasswords","ruleIndex": 4,"level": "warning","message": {"text":"Do not hardcode passwords in code. Found hardcoded password used in a dictionary key.","markdown":"Do not hardcode passwords in code. Found {0} password used in a dictionary key.","arguments": ["[hardcoded](0)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "scripts/smoke_testclient.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":56,  "endLine":56,  "startColumn":38,  "endColumn":58}  }}],"fingerprints": {"0": "751f37519eb7b0049ee07dbc4ec216b59cc4144dcf6ed7895e43ca71f50317d2","1": "d62ed47c.7cc04c61.1f400394.ca9857df.d40ba80d.ba14daf2.081ac3f4.91057b05.d62ed47c.7cc04c61.79e62dc9.139c59a8.d40ba80d.ba14daf2.39e4fc58.91057b05","snyk/asset/finding/v1": "05686281-afa0-470c-856f-df88f1b38bdf","identity": "05686281-afa0-470c-856f-df88f1b38bdf"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "scripts/smoke_testclient.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":36,  "endLine":36,  "startColumn":16,  "endColumn":27}}}}]}]}],"properties": {"isAutofixable": false,"priorityScore": 557,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "python/NoHardcodedPasswords","ruleIndex": 4,"level": "warning","message": {"text":"Do not hardcode passwords in code. Found hardcoded password used in a dictionary key.","markdown":"Do not hardcode passwords in code. Found {0} password used in a dictionary key.","arguments": ["[hardcoded](0)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "security/security_scan.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":40,  "endLine":40,  "startColumn":13,  "endColumn":87}  }}],"fingerprints": {"1": "b2dd68c0.577bab1d.1d65312e.a5aded74.c76a6871.fc42f331.0bc9ea4c.26519d3c.5a1e9b1a.a8e901ba.44a04a6f.a0a675e7.04aa4544.b8b1152f.36f99ea9.26519d3c","snyk/asset/finding/v1": "ea5c48e4-e62e-48d5-880a-251ef13e6e7b","identity": "ea5c48e4-e62e-48d5-880a-251ef13e6e7b","0": "499d9f3c73dc009006286721378b31ba1f96fac6f070e4d885be3871548f50b8"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "security/security_scan.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":40,  "endLine":40,  "startColumn":25,  "endColumn":87}}}}]}]}],"properties": {"isAutofixable": false,"priorityScore": 507,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileCodeFlow"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "python/NoHardcodedPasswords","ruleIndex": 4,"level": "warning","message": {"text":"Do not hardcode passwords in code. Found hardcoded password used in password.","markdown":"Do not hardcode passwords in code. Found {0} password used in {1}.","arguments": ["[hardcoded](0)","[password](1)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "scripts/emergency_enable_pg_trgm.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":37,  "endLine":37,  "startColumn":22,  "endColumn":44}  }}],"fingerprints": {"identity": "f0841c1e-4365-455e-a3fe-d5c907ab1281","0": "9330914f85b20947b80a7a6f2d46936f63196a09520b3b3e6d27669e516376c8","1": "d255d32b.7e58cdcf.6b4de28b.b1e9f145.cc857d4e.37e346af.af9048ce.8356f9c3.ff316dc5.38d94f08.1b4bf7da.2a3b3019.ff66191c.37e346af.dbbaafd9.21dfcfb7","snyk/asset/finding/v1": "f0841c1e-4365-455e-a3fe-d5c907ab1281"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "scripts/emergency_enable_pg_trgm.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":37,  "endLine":37,  "startColumn":22,  "endColumn":44}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "scripts/emergency_enable_pg_trgm.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":37,  "endLine":37,  "startColumn":13,  "endColumn":21}}}}]}]}],"properties": {"isAutofixable": false,"priorityScore": 557,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "python/NoHardcodedPasswords","ruleIndex": 4,"level": "warning","message": {"text":"Do not hardcode passwords in code. Found hardcoded password used in password.","markdown":"Do not hardcode passwords in code. Found {0} password used in {1}.","arguments": ["[hardcoded](0)","[password](1)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "scripts/smoke_testclient.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":36,  "endLine":36,  "startColumn":5,  "endColumn":13}  }}],"fingerprints": {"identity": "d788d91d-68de-4ef4-b553-12f2f156e7a5","0": "2e50f09177741f1953a7ed08a3ae0309186bae005e9f75177bae9e8d434ff0e8","1": "16691f08.2504bf97.79e62dc9.98569367.52643634.799018a4.39e4fc58.0990edd8.2d06e3d6.2504bf97.79e62dc9.6483b32f.52643634.799018a4.39e4fc58.0990edd8","snyk/asset/finding/v1": "d788d91d-68de-4ef4-b553-12f2f156e7a5"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "scripts/smoke_testclient.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":36,  "endLine":36,  "startColumn":16,  "endColumn":27}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "scripts/smoke_testclient.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":36,  "endLine":36,  "startColumn":5,  "endColumn":13}}}}]}]}],"properties": {"isAutofixable": false,"priorityScore": 557,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "python/PT","ruleIndex": 6,"level": "warning","message": {"text":"Unsanitized input from an environment variable flows into pathlib.Path, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.","markdown":"Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.","arguments": ["[flows](0),(1)","[pathlib.Path](2)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":53,  "endLine":53,  "startColumn":15,  "endColumn":19}  }}],"fingerprints": {"identity": "22e81cfc-6bc9-4ea2-b03a-d0588ec37e0f","0": "5c6f001fb4f65eea52b5c6e034b80a34fd9068e5e87ec8673e5dfe80a4ab89de","1": "4df04b24.c19174b5.79e62dc9.139c59a8.989605ea.ba14daf2.081ac3f4.d14165fe.6cc50a51.c19174b5.b588a99c.e767f914.58ab3535.f76aa0c6.96b9fa58.d14165fe","snyk/asset/finding/v1": "22e81cfc-6bc9-4ea2-b03a-d0588ec37e0f"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":53,  "endLine":53,  "startColumn":20,  "endColumn":30}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":53,  "endLine":53,  "startColumn":20,  "endColumn":34}}}},{"location": {"id": 2,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":53,  "endLine":53,  "startColumn":15,  "endColumn":19}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 556,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "javascript/HardcodedNonCryptoSecret","ruleIndex": 7,"level": "error","message": {"text":"Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.","markdown":"Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.","arguments": ["[a hardcoded string](0)","[here](1)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "docs/mobile/api-client-example.ts",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":45,  "endLine":45,  "startColumn":5,  "endColumn":17}  }}],"fingerprints": {"0": "327edf28dab8e9b364e2d444dafd894c699d3494623b3d6ddeb2827755e0d053","1": "9902289a.4773f344.1b459778.4685bc99.79a7d027.8020cfdf.8d0262df.f56b9d97.9902289a.4773f344.9488fc46.4685bc99.79a7d027.5fce695c.6db9ef40.e160980a","snyk/asset/finding/v1": "5b6f1d83-b71b-42c1-9f31-827e36d2886e","identity": "5b6f1d83-b71b-42c1-9f31-827e36d2886e"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "docs/mobile/api-client-example.ts",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":45,  "endLine":45,  "startColumn":19,  "endColumn":45}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "docs/mobile/api-client-example.ts",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":45,  "endLine":45,  "startColumn":5,  "endColumn":17}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 751,"priorityScoreFactors": [  {"label": true,"type": "hotFileCodeFlow"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "python/PT","ruleIndex": 6,"level": "warning","message": {"text":"Unsanitized input from an environment variable flows into json.dump, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.","markdown":"Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.","arguments": ["[flows](0),(1),(2),(3),(4),(5),(6),(7),(8)","[json.dump](9)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":67,  "endLine":67,  "startColumn":13,  "endColumn":22}  }}],"fingerprints": {"0": "42281b0b7d59c16a027853658de83c343706e48f6aa428e171efbdd29f14f5e8","1": "570f2912.3b5d1a06.187bf175.378fd781.29e43099.111d979a.081ac3f4.d14165fe.6cc50a51.c57b255f.187bf175.378fd781.29e43099.111d979a.62a6897d.d14165fe","snyk/asset/finding/v1": "921d1752-e3e1-4d65-a367-a0f1fd22e1bc","identity": "921d1752-e3e1-4d65-a367-a0f1fd22e1bc"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":53,  "endLine":53,  "startColumn":20,  "endColumn":30}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":53,  "endLine":53,  "startColumn":20,  "endColumn":34}}}},{"location": {"id": 2,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":53,  "endLine":53,  "startColumn":15,  "endColumn":19}}}},{"location": {"id": 3,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":53,  "endLine":53,  "startColumn":1,  "endColumn":84}}}},{"location": {"id": 4,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":66,  "endLine":66,  "startColumn":19,  "endColumn":30}}}},{"location": {"id": 5,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":66,  "endLine":66,  "startColumn":19,  "endColumn":59}}}},{"location": {"id": 6,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":66,  "endLine":66,  "startColumn":14,  "endColumn":18}}}},{"location": {"id": 7,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":66,  "endLine":66,  "startColumn":87,  "endColumn":89}}}},{"location": {"id": 8,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":67,  "endLine":67,  "startColumn":29,  "endColumn":31}}}},{"location": {"id": 9,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":67,  "endLine":67,  "startColumn":13,  "endColumn":22}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 556,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "python/PT","ruleIndex": 6,"level": "error","message": {"text":"Unsanitized input from an HTTP parameter flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.","markdown":"Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.","arguments": ["[an HTTP parameter](0)","[flows](1),(2),(3),(4),(5),(6)","[open](7)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":74,  "endLine":74,  "startColumn":14,  "endColumn":18}  }}],"fingerprints": {"0": "c139ce625bcaaae42cf9efac88e7a3dde3c5da0ace84df260856ced464ffb8c4","1": "4df04b24.ecc4e7fd.187bf175.378fd781.29e43099.ba14daf2.75d4ed92.d14165fe.6cc50a51.be004016.187bf175.8a4e3f10.29e43099.a5d7f69f.22a8b49e.d14165fe","snyk/asset/finding/v1": "167d2469-4bab-428d-8172-239300467200","identity": "167d2469-4bab-428d-8172-239300467200"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":785,  "endLine":785,  "startColumn":5,  "endColumn":19}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":785,  "endLine":785,  "startColumn":5,  "endColumn":19}}}},{"location": {"id": 2,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":806,  "endLine":806,  "startColumn":42,  "endColumn":51}}}},{"location": {"id": 3,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":72,  "endLine":72,  "startColumn":27,  "endColumn":41}}}},{"location": {"id": 4,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":74,  "endLine":74,  "startColumn":43,  "endColumn":52}}}},{"location": {"id": 5,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":74,  "endLine":74,  "startColumn":33,  "endColumn":59}}}},{"location": {"id": 6,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":74,  "endLine":74,  "startColumn":19,  "endColumn":59}}}},{"location": {"id": 7,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":74,  "endLine":74,  "startColumn":14,  "endColumn":18}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 806,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "python/PT","ruleIndex": 6,"level": "warning","message": {"text":"Unsanitized input from an environment variable flows into shutil.copyfile, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.","markdown":"Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.","arguments": ["[flows](0),(1),(2),(3),(4),(5),(6),(7)","[shutil.copyfile](8)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":689,  "endLine":689,  "startColumn":17,  "endColumn":25}  }}],"fingerprints": {"identity": "78fbaf60-7d1e-4713-aa37-390176068789","0": "155c958b552e166a9337fa504aa1575022a38cbc091ce4e8e42d3869864e3e3b","1": "4df04b24.ecc4e7fd.79e62dc9.6483b32f.1a0abf6d.dbb627d5.2e18d2d4.d14165fe.129db901.c57b255f.cc3572d9.d32df3c4.1a0abf6d.dbb627d5.2e18d2d4.d14165fe","snyk/asset/finding/v1": "78fbaf60-7d1e-4713-aa37-390176068789"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":53,  "endLine":53,  "startColumn":20,  "endColumn":30}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":53,  "endLine":53,  "startColumn":20,  "endColumn":34}}}},{"location": {"id": 2,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":53,  "endLine":53,  "startColumn":15,  "endColumn":19}}}},{"location": {"id": 3,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":53,  "endLine":53,  "startColumn":1,  "endColumn":84}}}},{"location": {"id": 4,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":686,  "endLine":686,  "startColumn":21,  "endColumn":32}}}},{"location": {"id": 5,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":686,  "endLine":686,  "startColumn":21,  "endColumn":60}}}},{"location": {"id": 6,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":686,  "endLine":686,  "startColumn":9,  "endColumn":60}}}},{"location": {"id": 7,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":689,  "endLine":689,  "startColumn":36,  "endColumn":45}}}},{"location": {"id": 8,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":689,  "endLine":689,  "startColumn":17,  "endColumn":25}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 556,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "python/PT","ruleIndex": 6,"level": "warning","message": {"text":"Unsanitized input from an environment variable flows into os.remove, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.","markdown":"Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.","arguments": ["[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10)","[os.remove](11)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":754,  "endLine":754,  "startColumn":21,  "endColumn":30}  }}],"fingerprints": {"identity": "6c991fed-c92c-4320-8625-34cf93baaf69","0": "7f052096e3969bbb1f867aa6dca56020f92ed9bec22436bd53557df5698afde4","1": "5747d179.2f53920d.79e62dc9.139c59a8.cc857d4e.820d17bc.081ac3f4.62690cdd.129db901.ecc4e7fd.cc3572d9.139c59a8.1a0abf6d.820d17bc.2e18d2d4.d14165fe","snyk/asset/finding/v1": "6c991fed-c92c-4320-8625-34cf93baaf69"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":53,  "endLine":53,  "startColumn":20,  "endColumn":30}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":53,  "endLine":53,  "startColumn":20,  "endColumn":34}}}},{"location": {"id": 2,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":53,  "endLine":53,  "startColumn":15,  "endColumn":19}}}},{"location": {"id": 3,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":53,  "endLine":53,  "startColumn":1,  "endColumn":84}}}},{"location": {"id": 4,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":686,  "endLine":686,  "startColumn":21,  "endColumn":32}}}},{"location": {"id": 5,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":686,  "endLine":686,  "startColumn":21,  "endColumn":60}}}},{"location": {"id": 6,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":686,  "endLine":686,  "startColumn":9,  "endColumn":60}}}},{"location": {"id": 7,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":693,  "endLine":693,  "startColumn":27,  "endColumn":36}}}},{"location": {"id": 8,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":693,  "endLine":693,  "startColumn":23,  "endColumn":26}}}},{"location": {"id": 9,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":693,  "endLine":693,  "startColumn":9,  "endColumn":37}}}},{"location": {"id": 10,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":754,  "endLine":754,  "startColumn":31,  "endColumn":42}}}},{"location": {"id": 11,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":754,  "endLine":754,  "startColumn":21,  "endColumn":30}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 556,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "python/PT","ruleIndex": 6,"level": "error","message": {"text":"Unsanitized input from an HTTP parameter flows into path, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.","markdown":"Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.","arguments": ["[an HTTP parameter](0)","[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12)","[path](13)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":844,  "endLine":844,  "startColumn":21,  "endColumn":25}  }}],"fingerprints": {"1": "8a30cfc6.993139d5.79e62dc9.8a4e3f10.aee4e649.ba14daf2.0a7337bb.deb4acf5.129db901.277c621c.cc3572d9.8a4e3f10.aee4e649.73cfdf26.1e6e1b56.d14165fe","snyk/asset/finding/v1": "973dc9b1-b7e4-45cd-a4ba-4f5639504aae","identity": "973dc9b1-b7e4-45cd-a4ba-4f5639504aae","0": "172de1959903e247110d7a3ad46df6f7d07045869774c9ad1957e49389735946"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":785,  "endLine":785,  "startColumn":5,  "endColumn":19}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":785,  "endLine":785,  "startColumn":5,  "endColumn":19}}}},{"location": {"id": 2,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":806,  "endLine":806,  "startColumn":42,  "endColumn":51}}}},{"location": {"id": 3,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":72,  "endLine":72,  "startColumn":27,  "endColumn":41}}}},{"location": {"id": 4,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":836,  "endLine":836,  "startColumn":37,  "endColumn":46}}}},{"location": {"id": 5,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":836,  "endLine":836,  "startColumn":27,  "endColumn":52}}}},{"location": {"id": 6,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":836,  "endLine":836,  "startColumn":13,  "endColumn":52}}}},{"location": {"id": 7,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":835,  "endLine":840,  "startColumn":22,  "endColumn":10}}}},{"location": {"id": 8,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":835,  "endLine":840,  "startColumn":9,  "endColumn":10}}}},{"location": {"id": 9,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":841,  "endLine":841,  "startColumn":18,  "endColumn":28}}}},{"location": {"id": 10,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":841,  "endLine":841,  "startColumn":13,  "endColumn":14}}}},{"location": {"id": 11,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":844,  "endLine":844,  "startColumn":30,  "endColumn":31}}}},{"location": {"id": 12,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":844,  "endLine":844,  "startColumn":26,  "endColumn":29}}}},{"location": {"id": 13,"physicalLocation": {"artifactLocation": {  "uri": "api/baby_features_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":844,  "endLine":844,  "startColumn":21,  "endColumn":25}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 806,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "python/PT","ruleIndex": 6,"level": "warning","message": {"text":"Unsanitized input from a command line argument flows into path concatenation, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.","markdown":"Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.","arguments": ["[a command line argument](0)","[flows](1),(2),(3),(4),(5),(6),(7)","[path concatenation](8)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "scripts/config_manager.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":96,  "endLine":96,  "startColumn":25,  "endColumn":74}  }}],"fingerprints": {"identity": "baf695f7-8e41-44ff-92a1-a8980f542f22","0": "071f9027db6130ff2e8ad76589b8f3ebc9bb0edd7c8ca77233cf02f0513c6d7d","1": "4df04b24.1299e5f3.79e62dc9.139c59a8.789fabaf.4081c2a1.cffe1bc1.d14165fe.4df04b24.3ecb8227.e6e72a62.9cd2dfe0.1a0abf6d.3b4594ef.920f148a.dfdaa16f","snyk/asset/finding/v1": "baf695f7-8e41-44ff-92a1-a8980f542f22"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "scripts/config_manager.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":187,  "endLine":187,  "startColumn":12,  "endColumn":29}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "scripts/config_manager.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":187,  "endLine":187,  "startColumn":12,  "endColumn":29}}}},{"location": {"id": 2,"physicalLocation": {"artifactLocation": {  "uri": "scripts/config_manager.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":187,  "endLine":187,  "startColumn":5,  "endColumn":31}}}},{"location": {"id": 3,"physicalLocation": {"artifactLocation": {  "uri": "scripts/config_manager.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":202,  "endLine":202,  "startColumn":43,  "endColumn":47}}}},{"location": {"id": 4,"physicalLocation": {"artifactLocation": {  "uri": "scripts/config_manager.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":202,  "endLine":202,  "startColumn":43,  "endColumn":59}}}},{"location": {"id": 5,"physicalLocation": {"artifactLocation": {  "uri": "scripts/config_manager.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":94,  "endLine":94,  "startColumn":31,  "endColumn":47}}}},{"location": {"id": 6,"physicalLocation": {"artifactLocation": {  "uri": "scripts/config_manager.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":96,  "endLine":96,  "startColumn":53,  "endColumn":64}}}},{"location": {"id": 7,"physicalLocation": {"artifactLocation": {  "uri": "scripts/config_manager.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":96,  "endLine":96,  "startColumn":45,  "endColumn":74}}}},{"location": {"id": 8,"physicalLocation": {"artifactLocation": {  "uri": "scripts/config_manager.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":96,  "endLine":96,  "startColumn":25,  "endColumn":74}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 506,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileCodeFlow"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "python/Sqli","ruleIndex": 10,"level": "warning","message": {"text":"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability.","markdown":"Unsanitized input from {0} {1} into {2}, where it is used in an SQL query. This may result in an SQL Injection vulnerability.","arguments": ["[a database](0)","[flows](1),(2),(3),(4),(5),(6),(7),(8),(9)","[execute](10)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "check_uk_recalls_azure.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":110,  "endLine":110,  "startColumn":13,  "endColumn":27}  }}],"fingerprints": {"identity": "c05700bc-136c-4383-91fc-128a63ea8685","0": "cba0e7dcae4de8f808f72f6577b8e8a80a22d54a5e0768c31066b0a7882579e7","1": "6bbb016e.ecc4e7fd.79e62dc9.7369b21f.4415ea16.ba14daf2.75d4ed92.b60afa86.29f70f0d.d0656dc9.bb13c5cc.3cdfe3a6.af3d5a48.73cfdf26.a2237efa.6aac30d8","snyk/asset/finding/v1": "c05700bc-136c-4383-91fc-128a63ea8685"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "check_uk_recalls_azure.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":71,  "endLine":71,  "startColumn":15,  "endColumn":30}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "check_uk_recalls_azure.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":71,  "endLine":71,  "startColumn":15,  "endColumn":30}}}},{"location": {"id": 2,"physicalLocation": {"artifactLocation": {  "uri": "check_uk_recalls_azure.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":71,  "endLine":71,  "startColumn":5,  "endColumn":32}}}},{"location": {"id": 3,"physicalLocation": {"artifactLocation": {  "uri": "check_uk_recalls_azure.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":90,  "endLine":90,  "startColumn":26,  "endColumn":33}}}},{"location": {"id": 4,"physicalLocation": {"artifactLocation": {  "uri": "check_uk_recalls_azure.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":90,  "endLine":90,  "startColumn":26,  "endColumn":37}}}},{"location": {"id": 5,"physicalLocation": {"artifactLocation": {  "uri": "check_uk_recalls_azure.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":90,  "endLine":90,  "startColumn":13,  "endColumn":19}}}},{"location": {"id": 6,"physicalLocation": {"artifactLocation": {  "uri": "check_uk_recalls_azure.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":106,  "endLine":106,  "startColumn":22,  "endColumn":28}}}},{"location": {"id": 7,"physicalLocation": {"artifactLocation": {  "uri": "check_uk_recalls_azure.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":91,  "endLine":108,  "startColumn":28,  "endColumn":16}}}},{"location": {"id": 8,"physicalLocation": {"artifactLocation": {  "uri": "check_uk_recalls_azure.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":91,  "endLine":108,  "startColumn":13,  "endColumn":16}}}},{"location": {"id": 9,"physicalLocation": {"artifactLocation": {  "uri": "check_uk_recalls_azure.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":110,  "endLine":110,  "startColumn":28,  "endColumn":40}}}},{"location": {"id": 10,"physicalLocation": {"artifactLocation": {  "uri": "check_uk_recalls_azure.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":110,  "endLine":110,  "startColumn":13,  "endColumn":27}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 506,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileCodeFlow"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "python/Sqli","ruleIndex": 10,"level": "warning","message": {"text":"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability.","markdown":"Unsanitized input from {0} {1} into {2}, where it is used in an SQL query. This may result in an SQL Injection vulnerability.","arguments": ["[a database](0)","[flows](1),(2),(3),(4),(5),(6),(7),(8)","[execute](9)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "find_recalls.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":34,  "endLine":34,  "startColumn":21,  "endColumn":35}  }}],"fingerprints": {"1": "6bbb016e.83f0fd44.2683ade8.7369b21f.f4756793.ba14daf2.081ac3f4.818732c5.9d86e1a1.4de8af55.bb13c5cc.7369b21f.af3d5a48.73cfdf26.f836682a.f46ed94e","snyk/asset/finding/v1": "a25cd79b-28b9-4037-9cee-86b18d446003","identity": "a25cd79b-28b9-4037-9cee-86b18d446003","0": "74b304291464f5243a8114a19211449990d7fc1891d39e72022616a815281829"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "find_recalls.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":27,  "endLine":27,  "startColumn":33,  "endColumn":48}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "find_recalls.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":27,  "endLine":27,  "startColumn":33,  "endColumn":48}}}},{"location": {"id": 2,"physicalLocation": {"artifactLocation": {  "uri": "find_recalls.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":27,  "endLine":27,  "startColumn":28,  "endColumn":29}}}},{"location": {"id": 3,"physicalLocation": {"artifactLocation": {  "uri": "find_recalls.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":27,  "endLine":27,  "startColumn":19,  "endColumn":20}}}},{"location": {"id": 4,"physicalLocation": {"artifactLocation": {  "uri": "find_recalls.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":27,  "endLine":27,  "startColumn":19,  "endColumn":23}}}},{"location": {"id": 5,"physicalLocation": {"artifactLocation": {  "uri": "find_recalls.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":27,  "endLine":27,  "startColumn":18,  "endColumn":51}}}},{"location": {"id": 6,"physicalLocation": {"artifactLocation": {  "uri": "find_recalls.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":31,  "endLine":31,  "startColumn":13,  "endColumn":18}}}},{"location": {"id": 7,"physicalLocation": {"artifactLocation": {  "uri": "find_recalls.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":34,  "endLine":34,  "startColumn":60,  "endColumn":65}}}},{"location": {"id": 8,"physicalLocation": {"artifactLocation": {  "uri": "find_recalls.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":34,  "endLine":34,  "startColumn":36,  "endColumn":67}}}},{"location": {"id": 9,"physicalLocation": {"artifactLocation": {  "uri": "find_recalls.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":34,  "endLine":34,  "startColumn":21,  "endColumn":35}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 556,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "python/Sqli","ruleIndex": 10,"level": "warning","message": {"text":"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability.","markdown":"Unsanitized input from {0} {1} into {2}, where it is used in an SQL query. This may result in an SQL Injection vulnerability.","arguments": ["[a database](0)","[flows](1),(2),(3),(4),(5),(6),(7),(8)","[execute](9)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "find_recalls.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":41,  "endLine":41,  "startColumn":25,  "endColumn":39}  }}],"fingerprints": {"identity": "2fa60cb4-698f-4c2c-b7c1-0b7496a1cc30","0": "7f35810c6c213447848cd0ba897aed43928cfdff9df94a7d7921364265b286a7","1": "6bbb016e.83f0fd44.2683ade8.7369b21f.cc857d4e.ba14daf2.d45ca9a9.818732c5.2d06e3d6.ecc4e7fd.79e62dc9.7369b21f.1d07cee4.ba14daf2.75d4ed92.818732c5","snyk/asset/finding/v1": "2fa60cb4-698f-4c2c-b7c1-0b7496a1cc30"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "find_recalls.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":27,  "endLine":27,  "startColumn":33,  "endColumn":48}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "find_recalls.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":27,  "endLine":27,  "startColumn":33,  "endColumn":48}}}},{"location": {"id": 2,"physicalLocation": {"artifactLocation": {  "uri": "find_recalls.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":27,  "endLine":27,  "startColumn":28,  "endColumn":29}}}},{"location": {"id": 3,"physicalLocation": {"artifactLocation": {  "uri": "find_recalls.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":27,  "endLine":27,  "startColumn":19,  "endColumn":20}}}},{"location": {"id": 4,"physicalLocation": {"artifactLocation": {  "uri": "find_recalls.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":27,  "endLine":27,  "startColumn":19,  "endColumn":23}}}},{"location": {"id": 5,"physicalLocation": {"artifactLocation": {  "uri": "find_recalls.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":27,  "endLine":27,  "startColumn":18,  "endColumn":51}}}},{"location": {"id": 6,"physicalLocation": {"artifactLocation": {  "uri": "find_recalls.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":31,  "endLine":31,  "startColumn":13,  "endColumn":18}}}},{"location": {"id": 7,"physicalLocation": {"artifactLocation": {  "uri": "find_recalls.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":41,  "endLine":41,  "startColumn":57,  "endColumn":62}}}},{"location": {"id": 8,"physicalLocation": {"artifactLocation": {  "uri": "find_recalls.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":41,  "endLine":41,  "startColumn":40,  "endColumn":72}}}},{"location": {"id": 9,"physicalLocation": {"artifactLocation": {  "uri": "find_recalls.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":41,  "endLine":41,  "startColumn":25,  "endColumn":39}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 556,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "python/Sqli","ruleIndex": 10,"level": "warning","message": {"text":"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability.","markdown":"Unsanitized input from {0} {1} into {2}, where it is used in an SQL query. This may result in an SQL Injection vulnerability.","arguments": ["[a database](0)","[flows](1),(2),(3),(4),(5),(6),(7),(8)","[execute](9)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "find_recalls.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":44,  "endLine":44,  "startColumn":29,  "endColumn":43}  }}],"fingerprints": {"identity": "2e083c3b-e5c9-40a1-9891-9d264f26789f","0": "cbd3fee7992e35ad1f09f992c98ed872b1215ada140cab2ec3e4b138369a1990","1": "5468ffd1.83f0fd44.2683ade8.7369b21f.b4b98b7e.ba14daf2.081ac3f4.818732c5.5468ffd1.ecc4e7fd.79e62dc9.7369b21f.1d07cee4.ba14daf2.75d4ed92.818732c5","snyk/asset/finding/v1": "2e083c3b-e5c9-40a1-9891-9d264f26789f"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "find_recalls.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":27,  "endLine":27,  "startColumn":33,  "endColumn":48}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "find_recalls.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":27,  "endLine":27,  "startColumn":33,  "endColumn":48}}}},{"location": {"id": 2,"physicalLocation": {"artifactLocation": {  "uri": "find_recalls.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":27,  "endLine":27,  "startColumn":28,  "endColumn":29}}}},{"location": {"id": 3,"physicalLocation": {"artifactLocation": {  "uri": "find_recalls.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":27,  "endLine":27,  "startColumn":19,  "endColumn":20}}}},{"location": {"id": 4,"physicalLocation": {"artifactLocation": {  "uri": "find_recalls.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":27,  "endLine":27,  "startColumn":19,  "endColumn":23}}}},{"location": {"id": 5,"physicalLocation": {"artifactLocation": {  "uri": "find_recalls.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":27,  "endLine":27,  "startColumn":18,  "endColumn":51}}}},{"location": {"id": 6,"physicalLocation": {"artifactLocation": {  "uri": "find_recalls.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":31,  "endLine":31,  "startColumn":13,  "endColumn":18}}}},{"location": {"id": 7,"physicalLocation": {"artifactLocation": {  "uri": "find_recalls.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":44,  "endLine":44,  "startColumn":65,  "endColumn":70}}}},{"location": {"id": 8,"physicalLocation": {"artifactLocation": {  "uri": "find_recalls.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":44,  "endLine":44,  "startColumn":44,  "endColumn":73}}}},{"location": {"id": 9,"physicalLocation": {"artifactLocation": {  "uri": "find_recalls.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":44,  "endLine":44,  "startColumn":29,  "endColumn":43}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 556,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "python/Sqli","ruleIndex": 10,"level": "warning","message": {"text":"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability.","markdown":"Unsanitized input from {0} {1} into {2}, where it is used in an SQL query. This may result in an SQL Injection vulnerability.","arguments": ["[a database](0)","[flows](1),(2),(3),(4),(5),(6),(7)","[execute](8)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "quick_db_check.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":35,  "endLine":35,  "startColumn":9,  "endColumn":23}  }}],"fingerprints": {"identity": "404a1f3b-8ada-43b5-8123-c1d3eb525396","0": "24ad8fe526802d7063aab5c1f855eca542e9a9f4c57ddf14d5a0b2cb8f485892","1": "6bbb016e.1c6650e9.ffba1670.7369b21f.06a38888.ba14daf2.f4600f14.b60afa86.a6b41d6e.83099170.bb13c5cc.7369b21f.af3d5a48.73cfdf26.f836682a.f46ed94e","snyk/asset/finding/v1": "404a1f3b-8ada-43b5-8123-c1d3eb525396"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "quick_db_check.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":23,  "endLine":23,  "startColumn":10,  "endColumn":25}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "quick_db_check.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":23,  "endLine":23,  "startColumn":10,  "endColumn":25}}}},{"location": {"id": 2,"physicalLocation": {"artifactLocation": {  "uri": "quick_db_check.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":32,  "endLine":32,  "startColumn":5,  "endColumn":10}}}},{"location": {"id": 3,"physicalLocation": {"artifactLocation": {  "uri": "quick_db_check.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":33,  "endLine":33,  "startColumn":18,  "endColumn":23}}}},{"location": {"id": 4,"physicalLocation": {"artifactLocation": {  "uri": "quick_db_check.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":33,  "endLine":33,  "startColumn":18,  "endColumn":26}}}},{"location": {"id": 5,"physicalLocation": {"artifactLocation": {  "uri": "quick_db_check.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":33,  "endLine":33,  "startColumn":5,  "endColumn":26}}}},{"location": {"id": 6,"physicalLocation": {"artifactLocation": {  "uri": "quick_db_check.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":35,  "endLine":35,  "startColumn":48,  "endColumn":58}}}},{"location": {"id": 7,"physicalLocation": {"artifactLocation": {  "uri": "quick_db_check.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":35,  "endLine":35,  "startColumn":24,  "endColumn":60}}}},{"location": {"id": 8,"physicalLocation": {"artifactLocation": {  "uri": "quick_db_check.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":35,  "endLine":35,  "startColumn":9,  "endColumn":23}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 556,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "python/Sqli","ruleIndex": 10,"level": "warning","message": {"text":"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability.","markdown":"Unsanitized input from {0} {1} into {2}, where it is used in an SQL query. This may result in an SQL Injection vulnerability.","arguments": ["[a database](0)","[flows](1),(2),(3),(4),(5),(6),(7)","[execute](8)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "quick_db_check.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":41,  "endLine":41,  "startColumn":13,  "endColumn":27}  }}],"fingerprints": {"snyk/asset/finding/v1": "ef5f5f87-3f73-44c1-af3e-155d47efcbc8","identity": "ef5f5f87-3f73-44c1-af3e-155d47efcbc8","0": "41ccec62b388c0f8c30c8ee71be0151a7cc852de364efef252442ccef62029bd","1": "6bbb016e.911cbb90.ffba1670.7369b21f.06a38888.ba14daf2.f4600f14.b60afa86.a6b41d6e.ecc4e7fd.ffba1670.7369b21f.1d07cee4.73cfdf26.a2237efa.f46ed94e"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "quick_db_check.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":23,  "endLine":23,  "startColumn":10,  "endColumn":25}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "quick_db_check.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":23,  "endLine":23,  "startColumn":10,  "endColumn":25}}}},{"location": {"id": 2,"physicalLocation": {"artifactLocation": {  "uri": "quick_db_check.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":32,  "endLine":32,  "startColumn":5,  "endColumn":10}}}},{"location": {"id": 3,"physicalLocation": {"artifactLocation": {  "uri": "quick_db_check.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":33,  "endLine":33,  "startColumn":18,  "endColumn":23}}}},{"location": {"id": 4,"physicalLocation": {"artifactLocation": {  "uri": "quick_db_check.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":33,  "endLine":33,  "startColumn":18,  "endColumn":26}}}},{"location": {"id": 5,"physicalLocation": {"artifactLocation": {  "uri": "quick_db_check.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":33,  "endLine":33,  "startColumn":5,  "endColumn":26}}}},{"location": {"id": 6,"physicalLocation": {"artifactLocation": {  "uri": "quick_db_check.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":41,  "endLine":41,  "startColumn":45,  "endColumn":55}}}},{"location": {"id": 7,"physicalLocation": {"artifactLocation": {  "uri": "quick_db_check.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":41,  "endLine":41,  "startColumn":28,  "endColumn":65}}}},{"location": {"id": 8,"physicalLocation": {"artifactLocation": {  "uri": "quick_db_check.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":41,  "endLine":41,  "startColumn":13,  "endColumn":27}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 556,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "python/Sqli","ruleIndex": 10,"level": "warning","message": {"text":"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability.","markdown":"Unsanitized input from {0} {1} into {2}, where it is used in an SQL query. This may result in an SQL Injection vulnerability.","arguments": ["[a database](0)","[flows](1),(2),(3),(4),(5),(6),(7)","[execute](8)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "quick_db_check.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":43,  "endLine":43,  "startColumn":13,  "endColumn":27}  }}],"fingerprints": {"snyk/asset/finding/v1": "a1b5784f-1fbe-457c-95fb-89f0c7a39828","identity": "a1b5784f-1fbe-457c-95fb-89f0c7a39828","0": "eef1e262e52e921807ad57bda738c7af324a1f3daae0ee6d86b07062a38703c7","1": "5468ffd1.51f691cd.ffba1670.7369b21f.06a38888.ba14daf2.f4600f14.55217a79.5468ffd1.ecc4e7fd.ffba1670.7369b21f.1d07cee4.ba14daf2.f4600f14.8a73a01e"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "quick_db_check.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":23,  "endLine":23,  "startColumn":10,  "endColumn":25}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "quick_db_check.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":23,  "endLine":23,  "startColumn":10,  "endColumn":25}}}},{"location": {"id": 2,"physicalLocation": {"artifactLocation": {  "uri": "quick_db_check.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":32,  "endLine":32,  "startColumn":5,  "endColumn":10}}}},{"location": {"id": 3,"physicalLocation": {"artifactLocation": {  "uri": "quick_db_check.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":33,  "endLine":33,  "startColumn":18,  "endColumn":23}}}},{"location": {"id": 4,"physicalLocation": {"artifactLocation": {  "uri": "quick_db_check.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":33,  "endLine":33,  "startColumn":18,  "endColumn":26}}}},{"location": {"id": 5,"physicalLocation": {"artifactLocation": {  "uri": "quick_db_check.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":33,  "endLine":33,  "startColumn":5,  "endColumn":26}}}},{"location": {"id": 6,"physicalLocation": {"artifactLocation": {  "uri": "quick_db_check.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":43,  "endLine":43,  "startColumn":49,  "endColumn":59}}}},{"location": {"id": 7,"physicalLocation": {"artifactLocation": {  "uri": "quick_db_check.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":43,  "endLine":43,  "startColumn":28,  "endColumn":62}}}},{"location": {"id": 8,"physicalLocation": {"artifactLocation": {  "uri": "quick_db_check.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":43,  "endLine":43,  "startColumn":13,  "endColumn":27}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 556,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "python/Sqli","ruleIndex": 10,"level": "warning","message": {"text":"Unsanitized input from a database flows into execute, where it is used in an SQL query. This may result in an SQL Injection vulnerability.","markdown":"Unsanitized input from {0} {1} into {2}, where it is used in an SQL query. This may result in an SQL Injection vulnerability.","arguments": ["[a database](0)","[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12)","[execute](13)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "scripts/verify_fix_scan_history.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":59,  "endLine":59,  "startColumn":5,  "endColumn":16}  }}],"fingerprints": {"identity": "dea0920f-6db3-4b16-9a6b-965b4d398a18","0": "4105953b9ca0fb45de299ae5052516c6eed5080f94182f1525a2cb07d091806e","1": "9eebac59.eb05cc66.f9d7b365.7369b21f.e37708be.ba14daf2.13f8b822.b60afa86.9d86e1a1.04ad2656.3b7b86da.7369b21f.af3d5a48.48e1de78.31f0e758.f46ed94e","snyk/asset/finding/v1": "dea0920f-6db3-4b16-9a6b-965b4d398a18"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "scripts/verify_fix_scan_history.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":41,  "endLine":41,  "startColumn":23,  "endColumn":35}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "scripts/verify_fix_scan_history.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":41,  "endLine":41,  "startColumn":23,  "endColumn":35}}}},{"location": {"id": 2,"physicalLocation": {"artifactLocation": {  "uri": "scripts/verify_fix_scan_history.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":41,  "endLine":41,  "startColumn":8,  "endColumn":38}}}},{"location": {"id": 3,"physicalLocation": {"artifactLocation": {  "uri": "scripts/verify_fix_scan_history.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":41,  "endLine":41,  "startColumn":1,  "endColumn":38}}}},{"location": {"id": 4,"physicalLocation": {"artifactLocation": {  "uri": "scripts/verify_fix_scan_history.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":42,  "endLine":42,  "startColumn":44,  "endColumn":48}}}},{"location": {"id": 5,"physicalLocation": {"artifactLocation": {  "uri": "scripts/verify_fix_scan_history.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":42,  "endLine":42,  "startColumn":35,  "endColumn":48}}}},{"location": {"id": 6,"physicalLocation": {"artifactLocation": {  "uri": "scripts/verify_fix_scan_history.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":42,  "endLine":42,  "startColumn":14,  "endColumn":48}}}},{"location": {"id": 7,"physicalLocation": {"artifactLocation": {  "uri": "scripts/verify_fix_scan_history.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":42,  "endLine":42,  "startColumn":11,  "endColumn":49}}}},{"location": {"id": 8,"physicalLocation": {"artifactLocation": {  "uri": "scripts/verify_fix_scan_history.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":42,  "endLine":42,  "startColumn":1,  "endColumn":49}}}},{"location": {"id": 9,"physicalLocation": {"artifactLocation": {  "uri": "scripts/verify_fix_scan_history.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":57,  "endLine":57,  "startColumn":10,  "endColumn":17}}}},{"location": {"id": 10,"physicalLocation": {"artifactLocation": {  "uri": "scripts/verify_fix_scan_history.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":57,  "endLine":57,  "startColumn":5,  "endColumn":6}}}},{"location": {"id": 11,"physicalLocation": {"artifactLocation": {  "uri": "scripts/verify_fix_scan_history.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":59,  "endLine":59,  "startColumn":56,  "endColumn":57}}}},{"location": {"id": 12,"physicalLocation": {"artifactLocation": {  "uri": "scripts/verify_fix_scan_history.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":59,  "endLine":59,  "startColumn":17,  "endColumn":69}}}},{"location": {"id": 13,"physicalLocation": {"artifactLocation": {  "uri": "scripts/verify_fix_scan_history.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":59,  "endLine":59,  "startColumn":5,  "endColumn":16}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 506,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileCodeFlow"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "python/XSS","ruleIndex": 11,"level": "error","message": {"text":"Unsanitized input from an HTTP parameter flows into render, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).","markdown":"Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).","arguments": ["[an HTTP parameter](0)","[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37)","[render](38)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "api/risk_assessment_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":243,  "endLine":243,  "startColumn":27,  "endColumn":59}  }}],"fingerprints": {"identity": "c52f7e32-b8b9-46e2-8c27-10bbef443c26","0": "aad9750fe98431cd0ff74d8990abcdf8c96e5c18b1a8abdc3bd361365a940796","1": "15eb27c6.776e94b4.79e62dc9.6f5d753e.c42f8ea4.a5d7f69f.081ac3f4.ebed174f.6d843c37.277c621c.ca3c5016.e3076a52.d7913af8.8b1b0eeb.e1cbbd29.8a6c1895","snyk/asset/finding/v1": "c52f7e32-b8b9-46e2-8c27-10bbef443c26"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "api/risk_assessment_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":166,  "endLine":166,  "startColumn":5,  "endColumn":35}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "api/risk_assessment_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":166,  "endLine":166,  "startColumn":5,  "endColumn":35}}}},{"location": {"id": 2,"physicalLocation": {"artifactLocation": {  "uri": "api/risk_assessment_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":182,  "endLine":182,  "startColumn":49,  "endColumn":56}}}},{"location": {"id": 3,"physicalLocation": {"artifactLocation": {  "uri": "api/risk_assessment_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":703,  "endLine":703,  "startColumn":5,  "endColumn":35}}}},{"location": {"id": 4,"physicalLocation": {"artifactLocation": {  "uri": "api/risk_assessment_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":728,  "endLine":728,  "startColumn":8,  "endColumn":15}}}},{"location": {"id": 5,"physicalLocation": {"artifactLocation": {  "uri": "api/risk_assessment_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":728,  "endLine":728,  "startColumn":8,  "endColumn":28}}}},{"location": {"id": 6,"physicalLocation": {"artifactLocation": {  "uri": "api/risk_assessment_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":750,  "endLine":751,  "startColumn":26,  "endColumn":66}}}},{"location": {"id": 7,"physicalLocation": {"artifactLocation": {  "uri": "api/risk_assessment_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":750,  "endLine":750,  "startColumn":13,  "endColumn":25}}}},{"location": {"id": 8,"physicalLocation": {"artifactLocation": {  "uri": "api/risk_assessment_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":749,  "endLine":749,  "startColumn":19,  "endColumn":38}}}},{"location": {"id": 9,"physicalLocation": {"artifactLocation": {  "uri": "api/risk_assessment_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":749,  "endLine":757,  "startColumn":9,  "endColumn":10}}}},{"location": {"id": 10,"physicalLocation": {"artifactLocation": {  "uri": "api/risk_assessment_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":763,  "endLine":763,  "startColumn":39,  "endColumn":46}}}},{"location": {"id": 11,"physicalLocation": {"artifactLocation": {  "uri": "api/risk_assessment_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":770,  "endLine":770,  "startColumn":31,  "endColumn":59}}}},{"location": {"id": 12,"physicalLocation": {"artifactLocation": {  "uri": "api/risk_assessment_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":765,  "endLine":765,  "startColumn":16,  "endColumn":23}}}},{"location": {"id": 13,"physicalLocation": {"artifactLocation": {  "uri": "api/risk_assessment_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":182,  "endLine":182,  "startColumn":9,  "endColumn":61}}}},{"location": {"id": 14,"physicalLocation": {"artifactLocation": {  "uri": "api/risk_assessment_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":244,  "endLine":244,  "startColumn":17,  "endColumn":24}}}},{"location": {"id": 15,"physicalLocation": {"artifactLocation": {  "uri": "core_infra/risk_report_generator.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":96,  "endLine":96,  "startColumn":9,  "endColumn":37}}}},{"location": {"id": 16,"physicalLocation": {"artifactLocation": {  "uri": "core_infra/risk_report_generator.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":121,  "endLine":121,  "startColumn":13,  "endColumn":20}}}},{"location": {"id": 17,"physicalLocation": {"artifactLocation": {  "uri": "core_infra/risk_report_generator.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":154,  "endLine":154,  "startColumn":9,  "endColumn":37}}}},{"location": {"id": 18,"physicalLocation": {"artifactLocation": {  "uri": "core_infra/risk_report_generator.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":214,  "endLine":214,  "startColumn":53,  "endColumn":60}}}},{"location": {"id": 19,"physicalLocation": {"artifactLocation": {  "uri": "core_infra/risk_report_generator.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":621,  "endLine":621,  "startColumn":34,  "endColumn":62}}}},{"location": {"id": 20,"physicalLocation": {"artifactLocation": {  "uri": "core_infra/risk_report_generator.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":628,  "endLine":628,  "startColumn":23,  "endColumn":30}}}},{"location": {"id": 21,"physicalLocation": {"artifactLocation": {  "uri": "core_infra/risk_report_generator.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":628,  "endLine":628,  "startColumn":23,  "endColumn":43}}}},{"location": {"id": 22,"physicalLocation": {"artifactLocation": {  "uri": "core_infra/risk_report_generator.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":628,  "endLine":628,  "startColumn":17,  "endColumn":19}}}},{"location": {"id": 23,"physicalLocation": {"artifactLocation": {  "uri": "core_infra/risk_report_generator.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":630,  "endLine":630,  "startColumn":73,  "endColumn":75}}}},{"location": {"id": 24,"physicalLocation": {"artifactLocation": {  "uri": "core_infra/risk_report_generator.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":630,  "endLine":630,  "startColumn":73,  "endColumn":86}}}},{"location": {"id": 25,"physicalLocation": {"artifactLocation": {  "uri": "core_infra/risk_report_generator.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":630,  "endLine":630,  "startColumn":21,  "endColumn":89}}}},{"location": {"id": 26,"physicalLocation": {"artifactLocation": {  "uri": "core_infra/risk_report_generator.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":629,  "endLine":629,  "startColumn":17,  "endColumn":24}}}},{"location": {"id": 27,"physicalLocation": {"artifactLocation": {  "uri": "core_infra/risk_report_generator.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":640,  "endLine":640,  "startColumn":26,  "endColumn":33}}}},{"location": {"id": 28,"physicalLocation": {"artifactLocation": {  "uri": "core_infra/risk_report_generator.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":640,  "endLine":640,  "startColumn":16,  "endColumn":25}}}},{"location": {"id": 29,"physicalLocation": {"artifactLocation": {  "uri": "core_infra/risk_report_generator.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":214,  "endLine":214,  "startColumn":29,  "endColumn":52}}}},{"location": {"id": 30,"physicalLocation": {"artifactLocation": {  "uri": "core_infra/risk_report_generator.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":214,  "endLine":214,  "startColumn":13,  "endColumn":61}}}},{"location": {"id": 31,"physicalLocation": {"artifactLocation": {  "uri": "core_infra/risk_report_generator.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":163,  "endLine":216,  "startColumn":16,  "endColumn":10}}}},{"location": {"id": 32,"physicalLocation": {"artifactLocation": {  "uri": "core_infra/risk_report_generator.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":163,  "endLine":216,  "startColumn":9,  "endColumn":10}}}},{"location": {"id": 33,"physicalLocation": {"artifactLocation": {  "uri": "core_infra/risk_report_generator.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":218,  "endLine":218,  "startColumn":16,  "endColumn":20}}}},{"location": {"id": 34,"physicalLocation": {"artifactLocation": {  "uri": "core_infra/risk_report_generator.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":120,  "endLine":122,  "startColumn":9,  "endColumn":10}}}},{"location": {"id": 35,"physicalLocation": {"artifactLocation": {  "uri": "core_infra/risk_report_generator.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":128,  "endLine":128,  "startColumn":57,  "endColumn":68}}}},{"location": {"id": 36,"physicalLocation": {"artifactLocation": {  "uri": "core_infra/risk_report_generator.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":378,  "endLine":378,  "startColumn":37,  "endColumn":47}}}},{"location": {"id": 37,"physicalLocation": {"artifactLocation": {  "uri": "core_infra/risk_report_generator.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":482,  "endLine":482,  "startColumn":34,  "endColumn":38}}}},{"location": {"id": 38,"physicalLocation": {"artifactLocation": {  "uri": "core_infra/risk_report_generator.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":482,  "endLine":482,  "startColumn":16,  "endColumn":31}}}}]}]}],"properties": {"isAutofixable": false,"priorityScore": 752,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileCodeFlow"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "python/XSS","ruleIndex": 11,"level": "error","message": {"text":"Unsanitized input from an HTTP parameter flows into content, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).","markdown":"Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).","arguments": ["[an HTTP parameter](0)","[flows](1),(2),(3),(4),(5),(6)","[content](7)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "api/share_results_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":961,  "endLine":961,  "startColumn":29,  "endColumn":36}  }}],"fingerprints": {"snyk/asset/finding/v1": "1a98f90e-36db-42c8-945f-c815a1abd03a","identity": "1a98f90e-36db-42c8-945f-c815a1abd03a","0": "2eee7e536c17e69dea36ce190164afc349b85c2da2119118f4100ed66d4d04d9","1": "8a30cfc6.cba166c2.79e62dc9.cc1bf129.076c4ac2.ba14daf2.75d4ed92.f72ce814.78e80c9f.cba166c2.eb05d2fb.ce2d60ee.38bc931b.b66cdd94.22a8b49e.98c021cb"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "api/share_results_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":871,  "endLine":871,  "startColumn":34,  "endColumn":44}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "api/share_results_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":871,  "endLine":871,  "startColumn":34,  "endColumn":44}}}},{"location": {"id": 2,"physicalLocation": {"artifactLocation": {  "uri": "api/share_results_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":955,  "endLine":955,  "startColumn":46,  "endColumn":51}}}},{"location": {"id": 3,"physicalLocation": {"artifactLocation": {  "uri": "api/share_results_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":905,  "endLine":959,  "startColumn":24,  "endColumn":12}}}},{"location": {"id": 4,"physicalLocation": {"artifactLocation": {  "uri": "api/share_results_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":905,  "endLine":959,  "startColumn":9,  "endColumn":12}}}},{"location": {"id": 5,"physicalLocation": {"artifactLocation": {  "uri": "api/share_results_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":961,  "endLine":961,  "startColumn":37,  "endColumn":49}}}},{"location": {"id": 6,"physicalLocation": {"artifactLocation": {  "uri": "api/share_results_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":961,  "endLine":961,  "startColumn":29,  "endColumn":36}}}},{"location": {"id": 7,"physicalLocation": {"artifactLocation": {  "uri": "api/share_results_endpoints.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":961,  "endLine":961,  "startColumn":29,  "endColumn":36}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 752,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileCodeFlow"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "python/CodeInjection","ruleIndex": 13,"level": "warning","message": {"text":"Unsanitized input from a command line argument flows into importlib.import_module, where it is executed as Python code. This may result in a Code Injection vulnerability.","markdown":"Unsanitized input from {0} {1} into {2}, where it is executed as Python code. This may result in a Code Injection vulnerability.","arguments": ["[a command line argument](0)","[flows](1),(2),(3),(4),(5),(6),(7)","[importlib.import_module](8)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "scripts/run_agent.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":69,  "endLine":69,  "startColumn":24,  "endColumn":47}  }}],"fingerprints": {"identity": "414a41fa-6286-42b1-a21c-1142d5549d4a","0": "f40265bc599c30cd5580b89f1125a247059c0e92a17727b1a67b06004bd0c57c","1": "7b0793b4.ecc4e7fd.ad3aab28.139c59a8.c6259e5d.ba14daf2.75d4ed92.51b382b5.2d06e3d6.3fb03db4.b588a99c.9cd2dfe0.c8b7d5cc.48e1de78.3e2862cc.892f8cff","snyk/asset/finding/v1": "414a41fa-6286-42b1-a21c-1142d5549d4a"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "scripts/run_agent.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":60,  "endLine":60,  "startColumn":8,  "endColumn":25}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "scripts/run_agent.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":60,  "endLine":60,  "startColumn":8,  "endColumn":25}}}},{"location": {"id": 2,"physicalLocation": {"artifactLocation": {  "uri": "scripts/run_agent.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":60,  "endLine":60,  "startColumn":1,  "endColumn":27}}}},{"location": {"id": 3,"physicalLocation": {"artifactLocation": {  "uri": "scripts/run_agent.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":107,  "endLine":107,  "startColumn":45,  "endColumn":49}}}},{"location": {"id": 4,"physicalLocation": {"artifactLocation": {  "uri": "scripts/run_agent.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":107,  "endLine":107,  "startColumn":45,  "endColumn":67}}}},{"location": {"id": 5,"physicalLocation": {"artifactLocation": {  "uri": "scripts/run_agent.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":109,  "endLine":109,  "startColumn":33,  "endColumn":55}}}},{"location": {"id": 6,"physicalLocation": {"artifactLocation": {  "uri": "scripts/run_agent.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":64,  "endLine":64,  "startColumn":23,  "endColumn":39}}}},{"location": {"id": 7,"physicalLocation": {"artifactLocation": {  "uri": "scripts/run_agent.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":69,  "endLine":69,  "startColumn":48,  "endColumn":59}}}},{"location": {"id": 8,"physicalLocation": {"artifactLocation": {  "uri": "scripts/run_agent.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":69,  "endLine":69,  "startColumn":24,  "endColumn":47}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 501,"priorityScoreFactors": [  {"label": true,"type": "hotFileCodeFlow"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "python/InsecureXmlParser","ruleIndex": 16,"level": "warning","message": {"text":"xml.etree.ElementTree.fromstring is considered insecure. Use an analog from the defusedxml package.","markdown":"{0} is considered insecure. Use an analog from the defusedxml package.","arguments": ["[xml.etree.ElementTree.fromstring](0)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "agents/research/web_research_agent/agent_logic.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":538,  "endLine":538,  "startColumn":31,  "endColumn":44}  }}],"fingerprints": {"identity": "dea4cbb5-433e-45dc-8a18-cc03cca96e70","0": "fd2729d9a3fba647ec663c7c3bd83dafbe60e42736d540c20f42737e84e93eda","1": "fe1b2080.045d6eac.79e62dc9.139c59a8.424999a1.c7570064.409eea87.47ced3a9.fe1b2080.045d6eac.79e62dc9.139c59a8.424999a1.c7570064.409eea87.47ced3a9","snyk/asset/finding/v1": "dea4cbb5-433e-45dc-8a18-cc03cca96e70"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "agents/research/web_research_agent/agent_logic.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":538,  "endLine":538,  "startColumn":31,  "endColumn":44}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 552,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "python/InsecureXmlParser","ruleIndex": 16,"level": "warning","message": {"text":"xml.etree.ElementTree.fromstring is considered insecure. Use an analog from the defusedxml package.","markdown":"{0} is considered insecure. Use an analog from the defusedxml package.","arguments": ["[xml.etree.ElementTree.fromstring](0)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "agents/research/web_research_agent/agent_logic.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":576,  "endLine":576,  "startColumn":34,  "endColumn":47}  }}],"fingerprints": {"identity": "aa4b83e6-6c0f-4426-8624-cfe9c6a88c05","0": "0384e26db67faa49fa33793ce6343ad29181a548f891d5c4dcf67250bb0fd334","1": "fe1b2080.4d8ae9af.79e62dc9.9fd5284d.424999a1.57d888ee.774eefa2.5c6bb407.fe1b2080.4d8ae9af.79e62dc9.9fd5284d.424999a1.57d888ee.774eefa2.5c6bb407","snyk/asset/finding/v1": "aa4b83e6-6c0f-4426-8624-cfe9c6a88c05"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "agents/research/web_research_agent/agent_logic.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":576,  "endLine":576,  "startColumn":34,  "endColumn":47}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 552,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "python/Jinja2AutoEscapeFalse","ruleIndex": 1,"level": "warning","message": {"text":"jinja2.Environment is called with no autoescape argument (autoescaping is disabled by default). This increases the risk of Cross-Site Scripting (XSS) attacks.","markdown":"{0} is called with no autoescape argument (autoescaping is disabled by default). This increases the risk of Cross-Site Scripting (XSS) attacks.","arguments": ["[jinja2.Environment](0)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "agents/reporting/report_builder_agent/agent_logic.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":475,  "endLine":475,  "startColumn":30,  "endColumn":41}  }}],"fingerprints": {"identity": "e6c9278d-a91d-4a6b-9ca7-4e6e34ebfc3c","0": "1514a6516c5b52ff2e4fbfd5b41ba1d26708ebc199988d5ab3dd2d9399b67666","1": "1ba848e8.7429d795.79e62dc9.4c71cda2.8e08d857.ba14daf2.7e8da20f.d6fdd897.1ba848e8.7429d795.79e62dc9.4c71cda2.8e08d857.ba14daf2.7e8da20f.d6fdd897","snyk/asset/finding/v1": "e6c9278d-a91d-4a6b-9ca7-4e6e34ebfc3c"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "agents/reporting/report_builder_agent/agent_logic.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":475,  "endLine":475,  "startColumn":30,  "endColumn":41}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 502,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileCodeFlow"  },  {"label": true,"type": "fixExamples"  }]}}],"properties": {"coverage": [{"files": 9,"isSupported": true,"lang": ".html","type": "SUPPORTED"},{"files": 669,"isSupported": true,"lang": ".py","type": "SUPPORTED"},{"files": 1,"isSupported": true,"lang": ".swift","type": "SUPPORTED"},{"files": 12,"isSupported": true,"lang": ".ts","type": "SUPPORTED"},{"files": 18,"isSupported": true,"lang": ".tsx","type": "SUPPORTED"},{"files": 1,"isSupported": true,"lang": ".xml","type": "SUPPORTED"},{"files": 5,"isSupported": false,"lang": ".html","type": "FAILED_PARSING"},{"files": 1,"isSupported": false,"lang": ".py","type": "FAILED_PARSING"},{"files": 1,"isSupported": false,"lang": ".tsx","type": "FAILED_PARSING"}]},"automationDetails": {"id": "Snyk/Code/2025-10-25T15:27:45Z"}}]}