version: "3.8"

services:
  worker:
    build:
      context: .
      dockerfile: Dockerfile.final
    command: celery -A core_infra.risk_ingestion_tasks:celery_app worker --loglevel=info
    environment:
      TZ: UTC
      PYTHONUNBUFFERED: "1"
      CELERY_ENABLE_UTC: "1"
      CELERY_TIMEZONE: UTC
      # Force-import tasks in case the entrypoint app is changed later
      CELERY_IMPORTS: core_infra.risk_ingestion_tasks

      # Azure Redis (TLS + correct port, same DB index as worker; likely /0)
      REDIS_URL: rediss://default:${AZURE_REDIS_KEY}@${AZURE_REDIS_HOST}:6380/0
      CELERY_BROKER_URL: rediss://default:${AZURE_REDIS_KEY}@${AZURE_REDIS_HOST}:6380/0
      CELERY_RESULT_BACKEND: rediss://default:${AZURE_REDIS_KEY}@${AZURE_REDIS_HOST}:6380/0

      # Azure Postgres (password must be URL-encoded)
      DATABASE_URL: postgresql://${AZURE_PG_USER}:${AZURE_PG_PASSWORD_ENCODED}@${AZURE_PG_HOST}:5432/${AZURE_PG_DATABASE}?sslmode=require
    restart: unless-stopped

  beat:
    build:
      context: .
      dockerfile: Dockerfile.final
    command: celery -A core_infra.risk_ingestion_tasks:celery_app beat --loglevel=info
    environment:
      TZ: UTC
      PYTHONUNBUFFERED: "1"
      CELERY_ENABLE_UTC: "1"
      CELERY_TIMEZONE: UTC

      REDIS_URL: rediss://default:${AZURE_REDIS_KEY}@${AZURE_REDIS_HOST}:6380/0
      CELERY_BROKER_URL: rediss://default:${AZURE_REDIS_KEY}@${AZURE_REDIS_HOST}:6380/0
      CELERY_RESULT_BACKEND: rediss://default:${AZURE_REDIS_KEY}@${AZURE_REDIS_HOST}:6380/0

      DATABASE_URL: postgresql://${AZURE_PG_USER}:${AZURE_PG_PASSWORD_ENCODED}@${AZURE_PG_HOST}:5432/${AZURE_PG_DATABASE}?sslmode=require
    restart: unless-stopped


